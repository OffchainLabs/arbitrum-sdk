/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import { Provider, TransactionRequest } from '@ethersproject/providers'
import type {
  BoldRollupUserLogic,
  BoldRollupUserLogicInterface,
} from '../BoldRollupUserLogic'

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'previousAdmin',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'newAdmin',
        type: 'address',
      },
    ],
    name: 'AdminChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'assertionHash',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'bytes32',
        name: 'blockHash',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'bytes32',
        name: 'sendRoot',
        type: 'bytes32',
      },
    ],
    name: 'AssertionConfirmed',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'assertionHash',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'parentAssertionHash',
        type: 'bytes32',
      },
      {
        components: [
          {
            components: [
              {
                internalType: 'bytes32',
                name: 'prevPrevAssertionHash',
                type: 'bytes32',
              },
              {
                internalType: 'bytes32',
                name: 'sequencerBatchAcc',
                type: 'bytes32',
              },
              {
                components: [
                  {
                    internalType: 'bytes32',
                    name: 'wasmModuleRoot',
                    type: 'bytes32',
                  },
                  {
                    internalType: 'uint256',
                    name: 'requiredStake',
                    type: 'uint256',
                  },
                  {
                    internalType: 'address',
                    name: 'challengeManager',
                    type: 'address',
                  },
                  {
                    internalType: 'uint64',
                    name: 'confirmPeriodBlocks',
                    type: 'uint64',
                  },
                  {
                    internalType: 'uint64',
                    name: 'nextInboxPosition',
                    type: 'uint64',
                  },
                ],
                internalType: 'struct ConfigData',
                name: 'configData',
                type: 'tuple',
              },
            ],
            internalType: 'struct BeforeStateData',
            name: 'beforeStateData',
            type: 'tuple',
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: 'bytes32[2]',
                    name: 'bytes32Vals',
                    type: 'bytes32[2]',
                  },
                  {
                    internalType: 'uint64[2]',
                    name: 'u64Vals',
                    type: 'uint64[2]',
                  },
                ],
                internalType: 'struct GlobalState',
                name: 'globalState',
                type: 'tuple',
              },
              {
                internalType: 'enum MachineStatus',
                name: 'machineStatus',
                type: 'uint8',
              },
              {
                internalType: 'bytes32',
                name: 'endHistoryRoot',
                type: 'bytes32',
              },
            ],
            internalType: 'struct AssertionState',
            name: 'beforeState',
            type: 'tuple',
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: 'bytes32[2]',
                    name: 'bytes32Vals',
                    type: 'bytes32[2]',
                  },
                  {
                    internalType: 'uint64[2]',
                    name: 'u64Vals',
                    type: 'uint64[2]',
                  },
                ],
                internalType: 'struct GlobalState',
                name: 'globalState',
                type: 'tuple',
              },
              {
                internalType: 'enum MachineStatus',
                name: 'machineStatus',
                type: 'uint8',
              },
              {
                internalType: 'bytes32',
                name: 'endHistoryRoot',
                type: 'bytes32',
              },
            ],
            internalType: 'struct AssertionState',
            name: 'afterState',
            type: 'tuple',
          },
        ],
        indexed: false,
        internalType: 'struct AssertionInputs',
        name: 'assertion',
        type: 'tuple',
      },
      {
        indexed: false,
        internalType: 'bytes32',
        name: 'afterInboxBatchAcc',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'inboxMaxCount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'bytes32',
        name: 'wasmModuleRoot',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'requiredStake',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'challengeManager',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint64',
        name: 'confirmPeriodBlocks',
        type: 'uint64',
      },
    ],
    name: 'AssertionCreated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'beacon',
        type: 'address',
      },
    ],
    name: 'BeaconUpgraded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint8',
        name: 'version',
        type: 'uint8',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'Paused',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint64',
        name: 'challengeIndex',
        type: 'uint64',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'asserter',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'challenger',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint64',
        name: 'challengedAssertion',
        type: 'uint64',
      },
    ],
    name: 'RollupChallengeStarted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bytes32',
        name: 'machineHash',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'chainId',
        type: 'uint256',
      },
    ],
    name: 'RollupInitialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'Unpaused',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'implementation',
        type: 'address',
      },
    ],
    name: 'Upgraded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'implementation',
        type: 'address',
      },
    ],
    name: 'UpgradedSecondary',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'withdrawalAddress',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'initialBalance',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'finalBalance',
        type: 'uint256',
      },
    ],
    name: 'UserStakeUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'initialBalance',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'finalBalance',
        type: 'uint256',
      },
    ],
    name: 'UserWithdrawableFundsUpdated',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: '_stakerMap',
    outputs: [
      {
        internalType: 'uint256',
        name: 'amountStaked',
        type: 'uint256',
      },
      {
        internalType: 'bytes32',
        name: 'latestStakedAssertion',
        type: 'bytes32',
      },
      {
        internalType: 'uint64',
        name: 'index',
        type: 'uint64',
      },
      {
        internalType: 'bool',
        name: 'isStaked',
        type: 'bool',
      },
      {
        internalType: 'address',
        name: 'withdrawalAddress',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'stakerAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'expectedWithdrawalAddress',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenAmount',
        type: 'uint256',
      },
    ],
    name: 'addToDeposit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'staker',
        type: 'address',
      },
    ],
    name: 'amountStaked',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'anyTrustFastConfirmer',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'baseStake',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bridge',
    outputs: [
      {
        internalType: 'contract IBridge',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'chainId',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'challengeGracePeriodBlocks',
    outputs: [
      {
        internalType: 'uint64',
        name: '',
        type: 'uint64',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'challengeManager',
    outputs: [
      {
        internalType: 'contract IEdgeChallengeManager',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'prevAssertionHash',
        type: 'bytes32',
      },
      {
        components: [
          {
            components: [
              {
                internalType: 'bytes32[2]',
                name: 'bytes32Vals',
                type: 'bytes32[2]',
              },
              {
                internalType: 'uint64[2]',
                name: 'u64Vals',
                type: 'uint64[2]',
              },
            ],
            internalType: 'struct GlobalState',
            name: 'globalState',
            type: 'tuple',
          },
          {
            internalType: 'enum MachineStatus',
            name: 'machineStatus',
            type: 'uint8',
          },
          {
            internalType: 'bytes32',
            name: 'endHistoryRoot',
            type: 'bytes32',
          },
        ],
        internalType: 'struct AssertionState',
        name: 'state',
        type: 'tuple',
      },
      {
        internalType: 'bytes32',
        name: 'inboxAcc',
        type: 'bytes32',
      },
    ],
    name: 'computeAssertionHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'assertionHash',
        type: 'bytes32',
      },
      {
        internalType: 'bytes32',
        name: 'prevAssertionHash',
        type: 'bytes32',
      },
      {
        components: [
          {
            components: [
              {
                internalType: 'bytes32[2]',
                name: 'bytes32Vals',
                type: 'bytes32[2]',
              },
              {
                internalType: 'uint64[2]',
                name: 'u64Vals',
                type: 'uint64[2]',
              },
            ],
            internalType: 'struct GlobalState',
            name: 'globalState',
            type: 'tuple',
          },
          {
            internalType: 'enum MachineStatus',
            name: 'machineStatus',
            type: 'uint8',
          },
          {
            internalType: 'bytes32',
            name: 'endHistoryRoot',
            type: 'bytes32',
          },
        ],
        internalType: 'struct AssertionState',
        name: 'confirmState',
        type: 'tuple',
      },
      {
        internalType: 'bytes32',
        name: 'winningEdgeId',
        type: 'bytes32',
      },
      {
        components: [
          {
            internalType: 'bytes32',
            name: 'wasmModuleRoot',
            type: 'bytes32',
          },
          {
            internalType: 'uint256',
            name: 'requiredStake',
            type: 'uint256',
          },
          {
            internalType: 'address',
            name: 'challengeManager',
            type: 'address',
          },
          {
            internalType: 'uint64',
            name: 'confirmPeriodBlocks',
            type: 'uint64',
          },
          {
            internalType: 'uint64',
            name: 'nextInboxPosition',
            type: 'uint64',
          },
        ],
        internalType: 'struct ConfigData',
        name: 'prevConfig',
        type: 'tuple',
      },
      {
        internalType: 'bytes32',
        name: 'inboxAcc',
        type: 'bytes32',
      },
    ],
    name: 'confirmAssertion',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'confirmPeriodBlocks',
    outputs: [
      {
        internalType: 'uint64',
        name: '',
        type: 'uint64',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'assertionHash',
        type: 'bytes32',
      },
      {
        internalType: 'bytes32',
        name: 'parentAssertionHash',
        type: 'bytes32',
      },
      {
        components: [
          {
            components: [
              {
                internalType: 'bytes32[2]',
                name: 'bytes32Vals',
                type: 'bytes32[2]',
              },
              {
                internalType: 'uint64[2]',
                name: 'u64Vals',
                type: 'uint64[2]',
              },
            ],
            internalType: 'struct GlobalState',
            name: 'globalState',
            type: 'tuple',
          },
          {
            internalType: 'enum MachineStatus',
            name: 'machineStatus',
            type: 'uint8',
          },
          {
            internalType: 'bytes32',
            name: 'endHistoryRoot',
            type: 'bytes32',
          },
        ],
        internalType: 'struct AssertionState',
        name: 'confirmState',
        type: 'tuple',
      },
      {
        internalType: 'bytes32',
        name: 'inboxAcc',
        type: 'bytes32',
      },
    ],
    name: 'fastConfirmAssertion',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'bytes32',
                name: 'prevPrevAssertionHash',
                type: 'bytes32',
              },
              {
                internalType: 'bytes32',
                name: 'sequencerBatchAcc',
                type: 'bytes32',
              },
              {
                components: [
                  {
                    internalType: 'bytes32',
                    name: 'wasmModuleRoot',
                    type: 'bytes32',
                  },
                  {
                    internalType: 'uint256',
                    name: 'requiredStake',
                    type: 'uint256',
                  },
                  {
                    internalType: 'address',
                    name: 'challengeManager',
                    type: 'address',
                  },
                  {
                    internalType: 'uint64',
                    name: 'confirmPeriodBlocks',
                    type: 'uint64',
                  },
                  {
                    internalType: 'uint64',
                    name: 'nextInboxPosition',
                    type: 'uint64',
                  },
                ],
                internalType: 'struct ConfigData',
                name: 'configData',
                type: 'tuple',
              },
            ],
            internalType: 'struct BeforeStateData',
            name: 'beforeStateData',
            type: 'tuple',
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: 'bytes32[2]',
                    name: 'bytes32Vals',
                    type: 'bytes32[2]',
                  },
                  {
                    internalType: 'uint64[2]',
                    name: 'u64Vals',
                    type: 'uint64[2]',
                  },
                ],
                internalType: 'struct GlobalState',
                name: 'globalState',
                type: 'tuple',
              },
              {
                internalType: 'enum MachineStatus',
                name: 'machineStatus',
                type: 'uint8',
              },
              {
                internalType: 'bytes32',
                name: 'endHistoryRoot',
                type: 'bytes32',
              },
            ],
            internalType: 'struct AssertionState',
            name: 'beforeState',
            type: 'tuple',
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: 'bytes32[2]',
                    name: 'bytes32Vals',
                    type: 'bytes32[2]',
                  },
                  {
                    internalType: 'uint64[2]',
                    name: 'u64Vals',
                    type: 'uint64[2]',
                  },
                ],
                internalType: 'struct GlobalState',
                name: 'globalState',
                type: 'tuple',
              },
              {
                internalType: 'enum MachineStatus',
                name: 'machineStatus',
                type: 'uint8',
              },
              {
                internalType: 'bytes32',
                name: 'endHistoryRoot',
                type: 'bytes32',
              },
            ],
            internalType: 'struct AssertionState',
            name: 'afterState',
            type: 'tuple',
          },
        ],
        internalType: 'struct AssertionInputs',
        name: 'assertion',
        type: 'tuple',
      },
      {
        internalType: 'bytes32',
        name: 'expectedAssertionHash',
        type: 'bytes32',
      },
    ],
    name: 'fastConfirmNewAssertion',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'genesisAssertionHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'assertionHash',
        type: 'bytes32',
      },
    ],
    name: 'getAssertion',
    outputs: [
      {
        components: [
          {
            internalType: 'uint64',
            name: 'firstChildBlock',
            type: 'uint64',
          },
          {
            internalType: 'uint64',
            name: 'secondChildBlock',
            type: 'uint64',
          },
          {
            internalType: 'uint64',
            name: 'createdAtBlock',
            type: 'uint64',
          },
          {
            internalType: 'bool',
            name: 'isFirstChild',
            type: 'bool',
          },
          {
            internalType: 'enum AssertionStatus',
            name: 'status',
            type: 'uint8',
          },
          {
            internalType: 'bytes32',
            name: 'configHash',
            type: 'bytes32',
          },
        ],
        internalType: 'struct AssertionNode',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'assertionHash',
        type: 'bytes32',
      },
    ],
    name: 'getAssertionCreationBlockForLogLookup',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'assertionHash',
        type: 'bytes32',
      },
    ],
    name: 'getFirstChildCreationBlock',
    outputs: [
      {
        internalType: 'uint64',
        name: '',
        type: 'uint64',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'assertionHash',
        type: 'bytes32',
      },
    ],
    name: 'getSecondChildCreationBlock',
    outputs: [
      {
        internalType: 'uint64',
        name: '',
        type: 'uint64',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'staker',
        type: 'address',
      },
    ],
    name: 'getStaker',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amountStaked',
            type: 'uint256',
          },
          {
            internalType: 'bytes32',
            name: 'latestStakedAssertion',
            type: 'bytes32',
          },
          {
            internalType: 'uint64',
            name: 'index',
            type: 'uint64',
          },
          {
            internalType: 'bool',
            name: 'isStaked',
            type: 'bool',
          },
          {
            internalType: 'address',
            name: 'withdrawalAddress',
            type: 'address',
          },
        ],
        internalType: 'struct IRollupCore.Staker',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint64',
        name: 'stakerNum',
        type: 'uint64',
      },
    ],
    name: 'getStakerAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getValidators',
    outputs: [
      {
        internalType: 'address[]',
        name: '',
        type: 'address[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'inbox',
    outputs: [
      {
        internalType: 'contract IInboxBase',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_stakeToken',
        type: 'address',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'assertionHash',
        type: 'bytes32',
      },
    ],
    name: 'isFirstChild',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'assertionHash',
        type: 'bytes32',
      },
    ],
    name: 'isPending',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'staker',
        type: 'address',
      },
    ],
    name: 'isStaked',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'validator',
        type: 'address',
      },
    ],
    name: 'isValidator',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'latestConfirmed',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'staker',
        type: 'address',
      },
    ],
    name: 'latestStakedAssertion',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'loserStakeEscrow',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'minimumAssertionPeriod',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenAmount',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: '_withdrawalAddress',
        type: 'address',
      },
    ],
    name: 'newStake',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenAmount',
        type: 'uint256',
      },
      {
        components: [
          {
            components: [
              {
                internalType: 'bytes32',
                name: 'prevPrevAssertionHash',
                type: 'bytes32',
              },
              {
                internalType: 'bytes32',
                name: 'sequencerBatchAcc',
                type: 'bytes32',
              },
              {
                components: [
                  {
                    internalType: 'bytes32',
                    name: 'wasmModuleRoot',
                    type: 'bytes32',
                  },
                  {
                    internalType: 'uint256',
                    name: 'requiredStake',
                    type: 'uint256',
                  },
                  {
                    internalType: 'address',
                    name: 'challengeManager',
                    type: 'address',
                  },
                  {
                    internalType: 'uint64',
                    name: 'confirmPeriodBlocks',
                    type: 'uint64',
                  },
                  {
                    internalType: 'uint64',
                    name: 'nextInboxPosition',
                    type: 'uint64',
                  },
                ],
                internalType: 'struct ConfigData',
                name: 'configData',
                type: 'tuple',
              },
            ],
            internalType: 'struct BeforeStateData',
            name: 'beforeStateData',
            type: 'tuple',
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: 'bytes32[2]',
                    name: 'bytes32Vals',
                    type: 'bytes32[2]',
                  },
                  {
                    internalType: 'uint64[2]',
                    name: 'u64Vals',
                    type: 'uint64[2]',
                  },
                ],
                internalType: 'struct GlobalState',
                name: 'globalState',
                type: 'tuple',
              },
              {
                internalType: 'enum MachineStatus',
                name: 'machineStatus',
                type: 'uint8',
              },
              {
                internalType: 'bytes32',
                name: 'endHistoryRoot',
                type: 'bytes32',
              },
            ],
            internalType: 'struct AssertionState',
            name: 'beforeState',
            type: 'tuple',
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: 'bytes32[2]',
                    name: 'bytes32Vals',
                    type: 'bytes32[2]',
                  },
                  {
                    internalType: 'uint64[2]',
                    name: 'u64Vals',
                    type: 'uint64[2]',
                  },
                ],
                internalType: 'struct GlobalState',
                name: 'globalState',
                type: 'tuple',
              },
              {
                internalType: 'enum MachineStatus',
                name: 'machineStatus',
                type: 'uint8',
              },
              {
                internalType: 'bytes32',
                name: 'endHistoryRoot',
                type: 'bytes32',
              },
            ],
            internalType: 'struct AssertionState',
            name: 'afterState',
            type: 'tuple',
          },
        ],
        internalType: 'struct AssertionInputs',
        name: 'assertion',
        type: 'tuple',
      },
      {
        internalType: 'bytes32',
        name: 'expectedAssertionHash',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: '_withdrawalAddress',
        type: 'address',
      },
    ],
    name: 'newStakeOnNewAssertion',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenAmount',
        type: 'uint256',
      },
      {
        components: [
          {
            components: [
              {
                internalType: 'bytes32',
                name: 'prevPrevAssertionHash',
                type: 'bytes32',
              },
              {
                internalType: 'bytes32',
                name: 'sequencerBatchAcc',
                type: 'bytes32',
              },
              {
                components: [
                  {
                    internalType: 'bytes32',
                    name: 'wasmModuleRoot',
                    type: 'bytes32',
                  },
                  {
                    internalType: 'uint256',
                    name: 'requiredStake',
                    type: 'uint256',
                  },
                  {
                    internalType: 'address',
                    name: 'challengeManager',
                    type: 'address',
                  },
                  {
                    internalType: 'uint64',
                    name: 'confirmPeriodBlocks',
                    type: 'uint64',
                  },
                  {
                    internalType: 'uint64',
                    name: 'nextInboxPosition',
                    type: 'uint64',
                  },
                ],
                internalType: 'struct ConfigData',
                name: 'configData',
                type: 'tuple',
              },
            ],
            internalType: 'struct BeforeStateData',
            name: 'beforeStateData',
            type: 'tuple',
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: 'bytes32[2]',
                    name: 'bytes32Vals',
                    type: 'bytes32[2]',
                  },
                  {
                    internalType: 'uint64[2]',
                    name: 'u64Vals',
                    type: 'uint64[2]',
                  },
                ],
                internalType: 'struct GlobalState',
                name: 'globalState',
                type: 'tuple',
              },
              {
                internalType: 'enum MachineStatus',
                name: 'machineStatus',
                type: 'uint8',
              },
              {
                internalType: 'bytes32',
                name: 'endHistoryRoot',
                type: 'bytes32',
              },
            ],
            internalType: 'struct AssertionState',
            name: 'beforeState',
            type: 'tuple',
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: 'bytes32[2]',
                    name: 'bytes32Vals',
                    type: 'bytes32[2]',
                  },
                  {
                    internalType: 'uint64[2]',
                    name: 'u64Vals',
                    type: 'uint64[2]',
                  },
                ],
                internalType: 'struct GlobalState',
                name: 'globalState',
                type: 'tuple',
              },
              {
                internalType: 'enum MachineStatus',
                name: 'machineStatus',
                type: 'uint8',
              },
              {
                internalType: 'bytes32',
                name: 'endHistoryRoot',
                type: 'bytes32',
              },
            ],
            internalType: 'struct AssertionState',
            name: 'afterState',
            type: 'tuple',
          },
        ],
        internalType: 'struct AssertionInputs',
        name: 'assertion',
        type: 'tuple',
      },
      {
        internalType: 'bytes32',
        name: 'expectedAssertionHash',
        type: 'bytes32',
      },
    ],
    name: 'newStakeOnNewAssertion',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'outbox',
    outputs: [
      {
        internalType: 'contract IOutbox',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'paused',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'proxiableUUID',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'target',
        type: 'uint256',
      },
    ],
    name: 'reduceDeposit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'removeWhitelistAfterFork',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'removeWhitelistAfterValidatorAfk',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'returnOldDeposit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'stakerAddress',
        type: 'address',
      },
    ],
    name: 'returnOldDepositFor',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'rollupDeploymentBlock',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'rollupEventInbox',
    outputs: [
      {
        internalType: 'contract IRollupEventInbox',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sequencerInbox',
    outputs: [
      {
        internalType: 'contract ISequencerInbox',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'bytes32',
                name: 'prevPrevAssertionHash',
                type: 'bytes32',
              },
              {
                internalType: 'bytes32',
                name: 'sequencerBatchAcc',
                type: 'bytes32',
              },
              {
                components: [
                  {
                    internalType: 'bytes32',
                    name: 'wasmModuleRoot',
                    type: 'bytes32',
                  },
                  {
                    internalType: 'uint256',
                    name: 'requiredStake',
                    type: 'uint256',
                  },
                  {
                    internalType: 'address',
                    name: 'challengeManager',
                    type: 'address',
                  },
                  {
                    internalType: 'uint64',
                    name: 'confirmPeriodBlocks',
                    type: 'uint64',
                  },
                  {
                    internalType: 'uint64',
                    name: 'nextInboxPosition',
                    type: 'uint64',
                  },
                ],
                internalType: 'struct ConfigData',
                name: 'configData',
                type: 'tuple',
              },
            ],
            internalType: 'struct BeforeStateData',
            name: 'beforeStateData',
            type: 'tuple',
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: 'bytes32[2]',
                    name: 'bytes32Vals',
                    type: 'bytes32[2]',
                  },
                  {
                    internalType: 'uint64[2]',
                    name: 'u64Vals',
                    type: 'uint64[2]',
                  },
                ],
                internalType: 'struct GlobalState',
                name: 'globalState',
                type: 'tuple',
              },
              {
                internalType: 'enum MachineStatus',
                name: 'machineStatus',
                type: 'uint8',
              },
              {
                internalType: 'bytes32',
                name: 'endHistoryRoot',
                type: 'bytes32',
              },
            ],
            internalType: 'struct AssertionState',
            name: 'beforeState',
            type: 'tuple',
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: 'bytes32[2]',
                    name: 'bytes32Vals',
                    type: 'bytes32[2]',
                  },
                  {
                    internalType: 'uint64[2]',
                    name: 'u64Vals',
                    type: 'uint64[2]',
                  },
                ],
                internalType: 'struct GlobalState',
                name: 'globalState',
                type: 'tuple',
              },
              {
                internalType: 'enum MachineStatus',
                name: 'machineStatus',
                type: 'uint8',
              },
              {
                internalType: 'bytes32',
                name: 'endHistoryRoot',
                type: 'bytes32',
              },
            ],
            internalType: 'struct AssertionState',
            name: 'afterState',
            type: 'tuple',
          },
        ],
        internalType: 'struct AssertionInputs',
        name: 'assertion',
        type: 'tuple',
      },
      {
        internalType: 'bytes32',
        name: 'expectedAssertionHash',
        type: 'bytes32',
      },
    ],
    name: 'stakeOnNewAssertion',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'stakeToken',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'stakerCount',
    outputs: [
      {
        internalType: 'uint64',
        name: '',
        type: 'uint64',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalWithdrawableFunds',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'assertionHash',
        type: 'bytes32',
      },
      {
        components: [
          {
            components: [
              {
                internalType: 'bytes32[2]',
                name: 'bytes32Vals',
                type: 'bytes32[2]',
              },
              {
                internalType: 'uint64[2]',
                name: 'u64Vals',
                type: 'uint64[2]',
              },
            ],
            internalType: 'struct GlobalState',
            name: 'globalState',
            type: 'tuple',
          },
          {
            internalType: 'enum MachineStatus',
            name: 'machineStatus',
            type: 'uint8',
          },
          {
            internalType: 'bytes32',
            name: 'endHistoryRoot',
            type: 'bytes32',
          },
        ],
        internalType: 'struct AssertionState',
        name: 'state',
        type: 'tuple',
      },
      {
        internalType: 'bytes32',
        name: 'prevAssertionHash',
        type: 'bytes32',
      },
      {
        internalType: 'bytes32',
        name: 'inboxAcc',
        type: 'bytes32',
      },
    ],
    name: 'validateAssertionHash',
    outputs: [],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'assertionHash',
        type: 'bytes32',
      },
      {
        components: [
          {
            internalType: 'bytes32',
            name: 'wasmModuleRoot',
            type: 'bytes32',
          },
          {
            internalType: 'uint256',
            name: 'requiredStake',
            type: 'uint256',
          },
          {
            internalType: 'address',
            name: 'challengeManager',
            type: 'address',
          },
          {
            internalType: 'uint64',
            name: 'confirmPeriodBlocks',
            type: 'uint64',
          },
          {
            internalType: 'uint64',
            name: 'nextInboxPosition',
            type: 'uint64',
          },
        ],
        internalType: 'struct ConfigData',
        name: 'configData',
        type: 'tuple',
      },
    ],
    name: 'validateConfig',
    outputs: [],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'validatorAfkBlocks',
    outputs: [
      {
        internalType: 'uint64',
        name: '',
        type: 'uint64',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'validatorWalletCreator',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'validatorWhitelistDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'wasmModuleRoot',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'withdrawStakerFunds',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
    ],
    name: 'withdrawableFunds',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'staker',
        type: 'address',
      },
    ],
    name: 'withdrawalAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
]

const _bytecode =
  '0x60e0604052620000196200003a60201b62001f9e1760201c565b15156080523060a0524660c0523480156200003357600080fd5b5062000108565b60408051600481526024810182526020810180516001600160e01b03166302881c7960e11b1790529051600091829182916064916200007a9190620000d7565b600060405180830381855afa9150503d8060008114620000b7576040519150601f19603f3d011682016040523d82523d6000602084013e620000bc565b606091505b5091509150818015620000d0575080516020145b9250505090565b6000825160005b81811015620000fa5760208186018101518583015201620000de565b506000920191825250919050565b60805160a05160c051614b936200014d6000396000611c5201526000818161155601528181611cc80152611d5e015260008181610e1f01526130e60152614b936000f3fe608060405234801561001057600080fd5b50600436106103a45760003560e01c806365f7f80d116101e9578063bc45e0ae1161010f578063e6b3082c116100ad578063ef40a6701161007c578063ef40a6701461099c578063f065de3f146109c5578063facd743b146109d8578063fb0e722b146109eb57600080fd5b8063e6b3082c146108ca578063e78cea92146108e5578063e8bd4922146108f8578063ee35f3271461099457600080fd5b8063ce11e6ab116100e9578063ce11e6ab14610889578063dff697871461089c578063e51019a6146108a4578063e531d8c7146108b757600080fd5b8063bc45e0ae1461085b578063c2c2e68e1461086e578063c4d66de81461087657600080fd5b806384728cd0116101875780639a8a0592116101565780639a8a059214610724578063a23c44b11461072d578063aa38a6e714610833578063b7ab4db51461084657600080fd5b806384728cd0146106b757806388302884146106f35780638da5cb5b146107135780638ee1a1261461071b57600080fd5b80636ddd3744116101c35780636ddd37441461067f57806371ef232c146106925780637300201c1461069b57806376e7e23b146106ae57600080fd5b806365f7f80d1461065157806368129b1414610659578063685f5ecc1461066c57600080fd5b80633b86de19116102ce57806356bbc9e61161026c5780636096686d1161023b5780636096686d146105ed57806361373919146106005780636177fd18146106085780636420fb9f1461063e57600080fd5b806356bbc9e6146105b457806357ef4ab9146105c7578063588c7a16146105cf5780635c975abb146105e257600080fd5b806350f32f68116102a857806350f32f681461056e57806351ed6a301461058157806352d1902d1461059457806355840a581461059c57600080fd5b80633b86de19146105265780633be680ea1461053957806345e38b641461056557600080fd5b80631b1689e9116103465780632f30cabd116103155780632f30cabd146104cf57806330836228146104f857806333635fc21461050b578063353325e01461051e57600080fd5b80631b1689e9146104735780631e83d30f1461047c5780632abdd2301461048f5780632e7acfa6146104bb57600080fd5b80631171558511610382578063117155851461040157806312ab3d3b1461042d57806313c56ca71461044a57806318baaab91461046b57600080fd5b8063023a96fe146103a957806304972af9146103d957806310b98a35146103ee575b600080fd5b6069546103bc906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6103ec6103e73660046140c6565b6109fe565b005b6103ec6103fc366004614105565b610a18565b61041461040f366004614163565b610dff565b60405167ffffffffffffffff90911681526020016103d0565b607b5461043a9060ff1681565b60405190151581526020016103d0565b61045d610458366004614163565b610e1b565b6040519081526020016103d0565b6103ec610f63565b61045d607a5481565b6103ec61048a366004614163565b611037565b61045d61049d366004614191565b6001600160a01b031660009081526077602052604090206001015490565b6066546104149067ffffffffffffffff1681565b61045d6104dd366004614191565b6001600160a01b031660009081526078602052604090205490565b61043a610506366004614163565b6110b2565b61045d6105193660046141ae565b6110ce565b61045d6110f3565b6103ec6105343660046141f8565b61112f565b6069546104149074010000000000000000000000000000000000000000900467ffffffffffffffff1681565b61045d60715481565b6103ec61057c366004614225565b6114d0565b6070546103bc906001600160a01b031681565b61045d611549565b607b546103bc9061010090046001600160a01b031681565b6104146105c2366004614163565b61160e565b6103ec611631565b6103ec6105dd366004614191565b6116a0565b60335460ff1661043a565b6103ec6105fb366004614271565b611790565b61045d611803565b61043a610616366004614191565b6001600160a01b0316600090815260776020526040902060020154600160401b900460ff1690565b6103ec61064c3660046141f8565b611886565b60745461045d565b6103ec6106673660046142b1565b611a41565b6103ec61067a3660046142e1565b611ab8565b6103bc61068d366004614338565b611ad4565b61045d60795481565b6103ec6106a9366004614355565b611b0e565b61045d60675481565b6103bc6106c5366004614191565b6001600160a01b03908116600090815260776020526040902060020154690100000000000000000090041690565b610706610701366004614163565b611b1a565b6040516103d091906143c1565b6103bc611be6565b61045d60685481565b61045d60655481565b6107dc61073b366004614191565b6040805160a081018252600080825260208201819052918101829052606081018290526080810191909152506001600160a01b03908116600090815260776020908152604091829020825160a081018452815481526001820154928101929092526002015467ffffffffffffffff81169282019290925260ff600160401b830416151560608201526901000000000000000000909104909116608082015290565b6040516103d09190600060a082019050825182526020830151602083015267ffffffffffffffff60408401511660408301526060830151151560608301526001600160a01b03608084015116608083015292915050565b606d546103bc906001600160a01b031681565b61084e611bf0565b6040516103d09190614422565b606e546103bc906001600160a01b031681565b6103ec611bfc565b6103ec610884366004614191565b611cbe565b606c546103bc906001600160a01b031681565b607654610414565b6103ec6108b236600461446f565b611e60565b61043a6108c5366004614163565b611ec7565b60665461041490600160401b900467ffffffffffffffff1681565b606b546103bc906001600160a01b031681565b610954610906366004614191565b60776020526000908152604090208054600182015460029092015490919067ffffffffffffffff811690600160401b810460ff1690690100000000000000000090046001600160a01b031685565b60408051958652602086019490945267ffffffffffffffff9092169284019290925290151560608301526001600160a01b0316608082015260a0016103d0565b6103bc611ef7565b61045d6109aa366004614191565b6001600160a01b031660009081526077602052604090205490565b606f546103bc906001600160a01b031681565b61043a6109e6366004614191565b611f7e565b606a546103bc906001600160a01b031681565b610a1481610a0b84612064565b600101546120c5565b5050565b33600081815260736020526040902054151580610a375750607b5460ff165b610a785760405162461bcd60e51b815260206004820152600d60248201526c2727aa2fab20a624a220aa27a960991b60448201526064015b60405180910390fd5b610a806121ca565b6000610a8b88612064565b90506000610a9888612064565b9050610aa88582600101546120c5565b610ab86080860160608701614338565b8254610ad59190600160801b900467ffffffffffffffff166144c3565b67ffffffffffffffff16431015610b2e5760405162461bcd60e51b815260206004820152600f60248201527f4245464f52455f444541444c494e4500000000000000000000000000000000006044820152606401610a6f565b6074548814610b7f5760405162461bcd60e51b815260206004820152601960248201527f505245565f4e4f545f4c41544553545f434f4e4649524d4544000000000000006044820152606401610a6f565b8054600160401b900467ffffffffffffffff1615610de8576000610ba96060870160408801614191565b6001600160a01b031663fda2892e886040518263ffffffff1660e01b8152600401610bd691815260200190565b6101e060405180830381865afa158015610bf4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c18919061458d565b9050898160e0015114610c6d5760405162461bcd60e51b815260206004820152600a60248201527f4e4f545f57494e4e4552000000000000000000000000000000000000000000006044820152606401610a6f565b60018161016001516001811115610c8657610c8661438d565b14610cd35760405162461bcd60e51b815260206004820152601260248201527f454447455f4e4f545f434f4e4649524d454400000000000000000000000000006044820152606401610a6f565b80610140015167ffffffffffffffff16600003610d325760405162461bcd60e51b815260206004820152601760248201527f5a45524f5f434f4e4649524d45445f41545f424c4f434b0000000000000000006044820152606401610a6f565b606954610140820151610d679174010000000000000000000000000000000000000000900467ffffffffffffffff16906144c3565b67ffffffffffffffff16431015610de65760405162461bcd60e51b815260206004820152602160248201527f4348414c4c454e47455f47524143455f504552494f445f4e4f545f504153534560448201527f44000000000000000000000000000000000000000000000000000000000000006064820152608401610a6f565b505b610df48989898761221f565b505050505050505050565b6000610e0a82612064565b5467ffffffffffffffff1692915050565b60007f000000000000000000000000000000000000000000000000000000000000000015610ea5576000828152607c602052604090205480610e9f5760405162461bcd60e51b815260206004820152600c60248201527f4e4f5f415353455254494f4e00000000000000000000000000000000000000006044820152606401610a6f565b92915050565b6000610eb083612064565b6040805160c081018252825467ffffffffffffffff8082168352600160401b820481166020840152600160801b8204169282019290925260ff600160c01b8304811615156060830152929350610f4692909184916080840191600160c81b9004166002811115610f2257610f2261438d565b6002811115610f3357610f3361438d565b8152602001600182015481525050612436565b54600160801b900467ffffffffffffffff1692915050565b919050565b607b5460ff1615610fb65760405162461bcd60e51b815260206004820152601260248201527f57484954454c4953545f44495341424c454400000000000000000000000000006044820152606401610a6f565b610fbe61249b565b61100a5760405162461bcd60e51b815260206004820152601160248201527f56414c494441544f525f4e4f545f41464b0000000000000000000000000000006044820152606401610a6f565b607b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b336000818152607360205260409020541515806110565750607b5460ff165b6110925760405162461bcd60e51b815260206004820152600d60248201526c2727aa2fab20a624a220aa27a960991b6044820152606401610a6f565b61109a6121ca565b6110a3336125cf565b6110ad33836126c0565b505050565b60006110bd82612064565b54600160c01b900460ff1692915050565b60006110e9846110e33686900386018661479a565b846127c1565b90505b9392505050565b60006110fd61406b565b6040805160608101825282815260016020820152600091810182905290806111268184816127c1565b94505050505090565b3360008181526073602052604090205415158061114e5750607b5460ff165b61118a5760405162461bcd60e51b815260206004820152600d60248201526c2727aa2fab20a624a220aa27a960991b6044820152606401610a6f565b6111926121ca565b8115806111c3575060006111a583612064565b54600160c81b900460ff1660028111156111c1576111c161438d565b145b61120f5760405162461bcd60e51b815260206004820152601760248201527f45585045435445445f415353455254494f4e5f5345454e0000000000000000006044820152606401610a6f565b33600090815260776020526040902060020154600160401b900460ff166112655760405162461bcd60e51b815260206004820152600a6024820152691393d517d4d51052d15160b21b6044820152606401610a6f565b33600090815260776020526040902054606084013511156112c85760405162461bcd60e51b815260206004820152601260248201527f494e53554646494349454e545f5354414b4500000000000000000000000000006044820152606401610a6f565b60006112eb84356112e136879003870160e0880161479a565b60208701356127c1565b90506113646112f982612064565b6040805160c081018252825467ffffffffffffffff8082168352600160401b820481166020840152600160801b8204169282019290925260ff600160c01b83048116151560608301529092916080840191600160c81b909104166002811115610f2257610f2261438d565b33600090815260776020526040902060010154818114806113985750600061138b82612064565b5467ffffffffffffffff16115b6113e45760405162461bcd60e51b815260206004820152601860248201527f5354414b45445f4f4e5f414e4f544845525f4252414e434800000000000000006044820152606401610a6f565b6000806113f2878588612805565b33600090815260776020526040902060010182905590925090508061148e57600061141c85612064565b5461143890600160801b900467ffffffffffffffff1643614801565b905060715481101561148c5760405162461bcd60e51b815260206004820152600a60248201527f54494d455f44454c5441000000000000000000000000000000000000000000006044820152606401610a6f565b505b61149782612064565b54600160c01b900460ff166114c757606f546070546114c7916001600160a01b03918216911660608a0135613189565b50505050505050565b6001600160a01b0381166115265760405162461bcd60e51b815260206004820152601860248201527f454d5054595f5749544844524157414c5f4144445245535300000000000000006044820152606401610a6f565b6115308482613232565b61153a838361112f565b6115438461330a565b50505050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146115e95760405162461bcd60e51b815260206004820152603b60248201527f555550534e6f745570677261646561626c653a206d757374206e6f742062652060448201527f63616c6c6564207468726f7567682064656c656761746563616c6c00000000006064820152608401610a6f565b507f2b1dbce74324248c222f0ec2d5ed7bd323cfc425b336f0253c5ccfda7265546d90565b600061161982612064565b54600160401b900467ffffffffffffffff1692915050565b336000818152607360205260409020541515806116505750607b5460ff165b61168c5760405162461bcd60e51b815260206004820152600d60248201526c2727aa2fab20a624a220aa27a960991b6044820152606401610a6f565b6116946121ca565b61169d33613322565b50565b6001600160a01b03811660009081526073602052604090205481901515806116ca5750607b5460ff165b6117065760405162461bcd60e51b815260206004820152600d60248201526c2727aa2fab20a624a220aa27a960991b6044820152606401610a6f565b61170e6121ca565b6001600160a01b03828116600090815260776020526040902060020154690100000000000000000090041633146117875760405162461bcd60e51b815260206004820152601660248201527f4e4f545f5749544844524157414c5f41444452455353000000000000000000006044820152606401610a6f565b610a1482613322565b6117986121ca565b607b5461010090046001600160a01b031633146117f75760405162461bcd60e51b815260206004820152601260248201527f4e4f545f464153545f434f4e4649524d455200000000000000000000000000006044820152606401610a6f565b6115438484848461221f565b600061180d6121ca565b600061181833613334565b90506000811161186a5760405162461bcd60e51b815260206004820152601460248201527f4e4f5f46554e44535f544f5f57495448445241570000000000000000000000006044820152606401610a6f565b607054611881906001600160a01b03163383613189565b905090565b61188e6121ca565b806118db5760405162461bcd60e51b815260206004820152601760248201527f45585045435445445f415353455254494f4e5f484153480000000000000000006044820152606401610a6f565b60006118e682612064565b54600160c81b900460ff169050600061190c84356112e136879003870160e0880161479a565b905061191a6112f982612064565b600082600281111561192e5761192e61438d565b0361197e576000611940858386612805565b50905061194c81612064565b54600160c01b900460ff1661197c57606f5460705461197c916001600160a01b0391821691166060880135613189565b505b606b5461154390849083906101a08801906001600160a01b03166316bf557960016119b66119b1368d90038d0186614814565b6133b5565b6119c09190614830565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815267ffffffffffffffff9091166004820152602401602060405180830381865afa158015611a1d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fb9190614851565b611a496121ca565b6001600160a01b038116611a9f5760405162461bcd60e51b815260206004820152601860248201527f454d5054595f5749544844524157414c5f4144445245535300000000000000006044820152606401610a6f565b611aa98282613232565b8115610a1457610a148261330a565b611ac06121ca565b611acb8383836133ca565b6110ad8161330a565b600060768267ffffffffffffffff1681548110611af357611af361486a565b6000918252602090912001546001600160a01b031692915050565b6110ad838383336114d0565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a0810191909152611b5582612064565b6040805160c081018252825467ffffffffffffffff8082168352600160401b820481166020840152600160801b8204169282019290925260ff600160c01b83048116151560608301529092916080840191600160c81b909104166002811115611bc057611bc061438d565b6002811115611bd157611bd161438d565b81526020016001820154815250509050919050565b6000611881613533565b60606118816072613566565b607b5460ff1615611c4f5760405162461bcd60e51b815260206004820152601260248201527f57484954454c4953545f44495341424c454400000000000000000000000000006044820152606401610a6f565b467f00000000000000000000000000000000000000000000000000000000000000000361100a5760405162461bcd60e51b815260206004820152601460248201527f434841494e5f49445f4e4f545f4348414e4745440000000000000000000000006044820152606401610a6f565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003611d5c5760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c00000000000000000000000000000000000000006064820152608401610a6f565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316611d8e613573565b6001600160a01b031614611e0a5760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f787900000000000000000000000000000000000000006064820152608401610a6f565b6001600160a01b03811661169d5760405162461bcd60e51b815260206004820152601060248201527f4e4545445f5354414b455f544f4b454e000000000000000000000000000000006044820152606401610a6f565b611e7982611e733686900386018661479a565b836127c1565b84146115435760405162461bcd60e51b815260206004820152601660248201527f494e56414c49445f415353455254494f4e5f48415348000000000000000000006044820152606401610a6f565b60006001611ed483612064565b54600160c81b900460ff166002811115611ef057611ef061438d565b1492915050565b606b54604080517fee35f32700000000000000000000000000000000000000000000000000000000815290516000926001600160a01b03169163ee35f3279160048083019260209291908290030181865afa158015611f5a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118819190614880565b6001600160a01b0381166000908152607360205260408120541515610e9f565b60408051600481526024810182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f051038f20000000000000000000000000000000000000000000000000000000017905290516000918291829160649161200a91906148c1565b600060405180830381855afa9150503d8060008114612045576040519150601f19603f3d011682016040523d82523d6000602084013e61204a565b606091505b509150915081801561205d575080516020145b9250505090565b6000816120b35760405162461bcd60e51b815260206004820152601b60248201527f415353455254494f4e5f49445f43414e4e4f545f42455f5a45524f00000000006044820152606401610a6f565b50600090815260756020526040902090565b61217c823560208401356120df6060860160408701614191565b6120ef6080870160608801614338565b6120ff60a0880160808901614338565b60408051602080820197909752808201959095526bffffffffffffffffffffffff19606094851b16938501939093527fffffffffffffffff00000000000000000000000000000000000000000000000060c092831b81166074860152911b16607c8301528051606481840301815260849092019052805191012090565b8114610a145760405162461bcd60e51b815260206004820152601460248201527f434f4e4649475f484153485f4d49534d415443480000000000000000000000006044820152606401610a6f565b60335460ff161561221d5760405162461bcd60e51b815260206004820152601060248201527f5061757361626c653a20706175736564000000000000000000000000000000006044820152606401610a6f565b565b600061222a85612064565b905060018154600160c81b900460ff16600281111561224b5761224b61438d565b146122985760405162461bcd60e51b815260206004820152600b60248201527f4e4f545f50454e44494e470000000000000000000000000000000000000000006044820152606401610a6f565b6122ab846110e33686900386018661479a565b85146122f95760405162461bcd60e51b815260206004820152600c60248201527f434f4e4649524d5f4441544100000000000000000000000000000000000000006044820152606401610a6f565b600061231261230d36869003860186614814565b61359b565b9050600061232d61232836879003870187614814565b6135a6565b606c546040517fa04cee6000000000000000000000000000000000000000000000000000000000815260048101839052602481018590529192506001600160a01b03169063a04cee6090604401600060405180830381600087803b15801561239457600080fd5b505af11580156123a8573d6000803e3d6000fd5b50505060748890555082547fffffffffffff00ffffffffffffffffffffffffffffffffffffffffffffffffff167902000000000000000000000000000000000000000000000000001783556040805183815260208101839052815189927ffc42829b29c259a7370ab56c8f69fce23b5f351a9ce151da453281993ec0090c928290030190a250505050505050565b60008160800151600281111561244e5761244e61438d565b0361169d5760405162461bcd60e51b815260206004820152601360248201527f415353455254494f4e5f4e4f545f4558495354000000000000000000000000006044820152606401610a6f565b6000806124af6124aa60745490565b612064565b6040805160c081018252825467ffffffffffffffff8082168352600160401b820481166020840152600160801b8204169282019290925260ff600160c01b83048116151560608301529092916080840191600160c81b90910416600281111561251a5761251a61438d565b600281111561252b5761252b61438d565b815260019190910154602090910152606654909150600160401b900467ffffffffffffffff1660008190036125635760009250505090565b816040015167ffffffffffffffff166000036125825760009250505090565b815167ffffffffffffffff16156125b457815143906125ac90839067ffffffffffffffff166148dd565b109250505090565b4381836040015167ffffffffffffffff166125ac91906148dd565b6001600160a01b038116600090815260776020526040902060020154600160401b900460ff1661262e5760405162461bcd60e51b815260206004820152600a6024820152691393d517d4d51052d15160b21b6044820152606401610a6f565b6001600160a01b0381166000908152607760205260408120600101546074549091908214908061265d84612064565b5467ffffffffffffffff1611905081806126745750805b6115435760405162461bcd60e51b815260206004820152600c60248201527f5354414b455f41435449564500000000000000000000000000000000000000006044820152606401610a6f565b6001600160a01b0380831660009081526077602052604081206002810154815492939192690100000000000000000090910490911690808511156127465760405162461bcd60e51b815260206004820152601060248201527f544f4f5f4c4954544c455f5354414b45000000000000000000000000000000006044820152606401610a6f565b60006127528683614801565b868555905061276183826135b2565b826001600160a01b0316876001600160a01b03167fd957cf2340073335d256f72a9ef89cf1a43c31143341a6a53575ef33e987beb884896040516127af929190918252602082015260400190565b60405180910390a39695505050505050565b60006110e9846127d085613657565b604080516020808201949094528082019290925260608083018790528151808403909101815260809092019052805191012090565b60008061281860408601610a0b86612064565b600161282c610240870161022088016148f0565b600281111561283d5761283d61438d565b148061286b57506002612858610240870161022088016148f0565b60028111156128695761286961438d565b145b6128b75760405162461bcd60e51b815260206004820152601060248201527f4241445f41465445525f535441545553000000000000000000000000000000006044820152606401610a6f565b836128d986356128cf36899003890160e08a0161479a565b60208901356127c1565b146129265760405162461bcd60e51b815260206004820152601460248201527f494e56414c49445f4245464f52455f53544154450000000000000000000000006044820152606401610a6f565b600161293a610180870161016088016148f0565b600281111561294b5761294b61438d565b146129985760405162461bcd60e51b815260206004820152600f60248201527f4241445f505245565f53544154555300000000000000000000000000000000006044820152606401610a6f565b60006129a385612064565b90506000806101a0880160e08901826129bc8383613687565b1215612a0a5760405162461bcd60e51b815260206004820152600f60248201527f494e424f585f4241434b574152445300000000000000000000000000000000006044820152606401610a6f565b6000612a30612a1f60e08d0160c08e01614338565b849067ffffffffffffffff16613794565b90506000811315612a835760405162461bcd60e51b815260206004820152600d60248201527f494e424f585f544f4f5f464152000000000000000000000000000000000000006044820152606401610a6f565b6002612a976102408d016102208e016148f0565b6002811115612aa857612aa861438d565b14158015612ab65750600081125b15612b1857600196506000612acb8484613687565b13612b185760405162461bcd60e51b815260206004820152601360248201527f4f564552464c4f575f5354414e445354494c4c000000000000000000000000006044820152606401610a6f565b606b54604080517e84120c00000000000000000000000000000000000000000000000000000000815290516000926001600160a01b0316916284120c9160048083019260209291908290030181865afa158015612b79573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b9d9190614851565b90506000612bab8583613794565b1315612bf95760405162461bcd60e51b815260206004820152600e60248201527f494e424f585f504153545f454e440000000000000000000000000000000000006044820152606401610a6f565b80612c0a60e08e0160c08f01614338565b67ffffffffffffffff161115612c625760405162461bcd60e51b815260206004820152601360248201527f494e424f585f4e4f545f504f50554c41544544000000000000000000000000006044820152606401610a6f565b6000612c766119b136879003870187614814565b67ffffffffffffffff169050818103612c9b57612c948260016148dd565b9650612c9f565b8196505b80600003612cef5760405162461bcd60e51b815260206004820152601160248201527f454d5054595f494e424f585f434f554e540000000000000000000000000000006044820152606401610a6f565b606b546001600160a01b03166316bf5579612d0b600184614801565b6040518263ffffffff1660e01b8152600401612d2991815260200190565b602060405180830381865afa158015612d46573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d6a9190614851565b95505050505050612d8a87896101a001803603810190611e73919061479a565b945085851480612d98575085155b612de45760405162461bcd60e51b815260206004820152601960248201527f554e45585045435445445f415353455254494f4e5f48415348000000000000006044820152606401610a6f565b6000612def86612064565b54600160c81b900460ff166002811115612e0b57612e0b61438d565b14612e585760405162461bcd60e51b815260206004820152600e60248201527f415353455254494f4e5f5345454e0000000000000000000000000000000000006044820152606401610a6f565b825460685460675460695460665460408051602080820196909652808201949094526bffffffffffffffffffffffff19606093841b16838501527fffffffffffffffff00000000000000000000000000000000000000000000000060c092831b8116607486015288831b16607c85015280516064818603018152608485018083528151918701919091206101448601835260009182905260a4860182905260c4860182905260e4860182905261010486018290526101249095018190528151928301825280835294820185905267ffffffffffffffff43811691830191909152909416159084015260a08301526001608083015250612f5684613823565b60008681526075602090815260409182902083518154928501519385015160608601511515600160c01b027fffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffffffff67ffffffffffffffff928316600160801b02167fffffffffffffff000000000000000000ffffffffffffffffffffffffffffffff968316600160401b027fffffffffffffffffffffffffffffffff00000000000000000000000000000000909616929093169190911793909317939093169290921717808255608083015183929182907fffffffffffff00ffffffffffffffffffffffffffffffffffffffffffffffffff16600160c81b83600281111561305e5761305e61438d565b021790555060a0820151816001015590505087867f901c3aee23cf4478825462caaab375c606ab83516060388344f06503407536308b8587606854606754606960009054906101000a90046001600160a01b0316606660009054906101000a900467ffffffffffffffff166040516130dc9796959493929190614983565b60405180910390a37f00000000000000000000000000000000000000000000000000000000000000001561317d5760646001600160a01b031663a3b1b31d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015613149573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061316d9190614851565b6000878152607c60205260409020555b50505050935093915050565b6040516001600160a01b0383166024820152604481018290526110ad9084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526138a7565b336000818152607360205260409020541515806132515750607b5460ff165b61328d5760405162461bcd60e51b815260206004820152600d60248201526c2727aa2fab20a624a220aa27a960991b6044820152606401610a6f565b6132956121ca565b33600090815260776020526040902060020154600160401b900460ff16156132ff5760405162461bcd60e51b815260206004820152600e60248201527f414c52454144595f5354414b45440000000000000000000000000000000000006044820152606401610a6f565b6110ad33848461398c565b60705461169d906001600160a01b0316333084613b08565b61332b816125cf565b61169d81613b59565b6001600160a01b0381166000908152607860205260408120805490829055607980548291908490613366908490614801565b909155505060408051828152600060208201526001600160a01b038516917fa740af14c56e4e04a617b1de1eb20de73270decbaaead14f142aabf3038e5ae2910160405180910390a292915050565b6020810151600090815b602002015192915050565b6001600160a01b03831660009081526073602052604090205483901515806133f45750607b5460ff165b6134305760405162461bcd60e51b815260206004820152600d60248201526c2727aa2fab20a624a220aa27a960991b6044820152606401610a6f565b6134386121ca565b6001600160a01b038416600090815260776020526040902060020154600160401b900460ff166134975760405162461bcd60e51b815260206004820152600a6024820152691393d517d4d51052d15160b21b6044820152606401610a6f565b826001600160a01b03166134d3856001600160a01b03908116600090815260776020526040902060020154690100000000000000000090041690565b6001600160a01b0316146135295760405162461bcd60e51b815260206004820152601860248201527f57524f4e475f5749544844524157414c5f4144445245535300000000000000006044820152606401610a6f565b6115438483613be4565b60007fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b546001600160a01b0316919050565b606060006110ec83613c72565b60007f2b1dbce74324248c222f0ec2d5ed7bd323cfc425b336f0253c5ccfda7265546d613557565b8051600090816133bf565b805160009060016133bf565b6001600160a01b038216600090815260786020526040812054906135d683836148dd565b6001600160a01b03851660009081526078602052604081208290556079805492935085929091906136089084906148dd565b909155505060408051838152602081018390526001600160a01b038616917fa740af14c56e4e04a617b1de1eb20de73270decbaaead14f142aabf3038e5ae2910160405180910390a250505050565b60008160405160200161366a9190614a6f565b604051602081830303815290604052805190602001209050919050565b60008061369c6119b136869003860186614814565b905060006136b26119b136869003860186614814565b90508067ffffffffffffffff168267ffffffffffffffff1610156136dc5760001992505050610e9f565b8067ffffffffffffffff168267ffffffffffffffff16111561370357600192505050610e9f565b600061371c61371736889003880188614814565b613cce565b9050600061373261371736889003880188614814565b90508067ffffffffffffffff168267ffffffffffffffff16101561375e57600019945050505050610e9f565b8067ffffffffffffffff168267ffffffffffffffff161115613787576001945050505050610e9f565b6000945050505050610e9f565b6000806137a96119b136869003860186614814565b9050828167ffffffffffffffff1610156137c857600019915050610e9f565b828167ffffffffffffffff1611156137e4576001915050610e9f565b60006137f861371736879003870187614814565b67ffffffffffffffff161115613812576001915050610e9f565b6000915050610e9f565b5092915050565b805467ffffffffffffffff1660000361385357805467ffffffffffffffff19164367ffffffffffffffff16179055565b8054600160401b900467ffffffffffffffff1660000361169d5780547fffffffffffffffffffffffffffffffff0000000000000000ffffffffffffffff16600160401b4367ffffffffffffffff1602179055565b60006138fc826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316613cdd9092919063ffffffff16565b8051909150156110ad578080602001905181019061391a9190614af9565b6110ad5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610a6f565b6076805460018082019092557fb5732705f5241370a28908c2fe1303cb223f03b90d857fd0573f003f79fefed4810180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b038781169182179092556040805160a081018252878152607454602080830191825267ffffffffffffffff808816848601908152606085018a81528b89166080870181815260008a8152607787528981209851895596519c88019c909c5591516002909601805491519b51969093167fffffffffffffffffffffffffffffffffffffffffffffff00000000000000000090911617600160401b9a15159a909a02999099177fffffff0000000000000000000000000000000000000000ffffffffffffffffff166901000000000000000000949097169390930295909517909155815190815292830187905292939290917fd957cf2340073335d256f72a9ef89cf1a43c31143341a6a53575ef33e987beb891015b60405180910390a350505050565b6040516001600160a01b03808516602483015283166044820152606481018290526115439085907f23b872dd00000000000000000000000000000000000000000000000000000000906084016131ce565b6001600160a01b03808216600090815260776020526040902060028101548154919269010000000000000000009091041690613b9582826135b2565b613b9e84613cec565b60408051828152600060208201526001600160a01b0380851692908716917fd957cf2340073335d256f72a9ef89cf1a43c31143341a6a53575ef33e987beb89101613afa565b6001600160a01b038216600090815260776020526040812080549091613c0a84836148dd565b808455600284015460408051858152602081018490529293506001600160a01b036901000000000000000000909204821692918816917fd957cf2340073335d256f72a9ef89cf1a43c31143341a6a53575ef33e987beb8910160405180910390a35050505050565b606081600001805480602002602001604051908101604052809291908181526020018280548015613cc257602002820191906000526020600020905b815481526020019060010190808311613cae575b50505050509050919050565b602081015160009060016133bf565b60606110e98484600085613eea565b6001600160a01b03811660009081526077602052604090206002810154600160401b900460ff16613d4c5760405162461bcd60e51b815260206004820152600a6024820152691393d517d4d51052d15160b21b6044820152606401610a6f565b60028101546076805467ffffffffffffffff90921691613d6e90600190614801565b81548110613d7e57613d7e61486a565b600091825260209091200154607680546001600160a01b039092169167ffffffffffffffff8416908110613db457613db461486a565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550806077600060768467ffffffffffffffff1681548110613e0457613e0461486a565b6000918252602080832091909101546001600160a01b031683528201929092526040019020600201805467ffffffffffffffff191667ffffffffffffffff929092169190911790556076805480613e5d57613e5d614b14565b60008281526020808220830160001990810180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690559092019092556001600160a01b039490941681526077909352505060408120818155600181019190915560020180547fffffff0000000000000000000000000000000000000000000000000000000000169055565b606082471015613f625760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610a6f565b6001600160a01b0385163b613fb95760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610a6f565b600080866001600160a01b03168587604051613fd591906148c1565b60006040518083038185875af1925050503d8060008114614012576040519150601f19603f3d011682016040523d82523d6000602084013e614017565b606091505b5091509150614027828286614032565b979650505050505050565b606083156140415750816110ec565b8251156140515782518084602001fd5b8160405162461bcd60e51b8152600401610a6f9190614b2a565b604051806040016040528061407e614090565b815260200161408b614090565b905290565b60405180604001604052806002906020820280368337509192915050565b600060a082840312156140c057600080fd5b50919050565b60008060c083850312156140d957600080fd5b823591506140ea84602085016140ae565b90509250929050565b600060c082840312156140c057600080fd5b6000806000806000806101e0878903121561411f57600080fd5b863595506020870135945061413788604089016140f3565b9350610100870135925061414f8861012089016140ae565b91506101c087013590509295509295509295565b60006020828403121561417557600080fd5b5035919050565b6001600160a01b038116811461169d57600080fd5b6000602082840312156141a357600080fd5b81356110ec8161417c565b600080600061010084860312156141c457600080fd5b833592506141d585602086016140f3565b915060e084013590509250925092565b600061026082840312156140c057600080fd5b600080610280838503121561420c57600080fd5b61421684846141e5565b94610260939093013593505050565b6000806000806102c0858703121561423c57600080fd5b8435935061424d86602087016141e5565b925061028085013591506102a08501356142668161417c565b939692955090935050565b600080600080610120858703121561428857600080fd5b84359350602085013592506142a086604087016140f3565b939692955092936101000135925050565b600080604083850312156142c457600080fd5b8235915060208301356142d68161417c565b809150509250929050565b6000806000606084860312156142f657600080fd5b83356143018161417c565b925060208401356143118161417c565b929592945050506040919091013590565b67ffffffffffffffff8116811461169d57600080fd5b60006020828403121561434a57600080fd5b81356110ec81614322565b60008060006102a0848603121561436b57600080fd5b8335925061437c85602086016141e5565b915061028084013590509250925092565b634e487b7160e01b600052602160045260246000fd5b6003811061169d57634e487b7160e01b600052602160045260246000fd5b600060c08201905067ffffffffffffffff80845116835280602085015116602084015280604085015116604084015250606083015115156060830152608083015161440b816143a3565b8060808401525060a083015160a083015292915050565b6020808252825182820181905260009190848201906040850190845b818110156144635783516001600160a01b03168352928401929184019160010161443e565b50909695505050505050565b600080600080610120858703121561448657600080fd5b8435935061449786602087016140f3565b939693955050505060e082013591610100013590565b634e487b7160e01b600052601160045260246000fd5b67ffffffffffffffff81811683821601908082111561381c5761381c6144ad565b634e487b7160e01b600052604160045260246000fd5b6040516101e0810167ffffffffffffffff8111828210171561451e5761451e6144e4565b60405290565b6040805190810167ffffffffffffffff8111828210171561451e5761451e6144e4565b8051610f5e8161417c565b8051610f5e81614322565b805160028110610f5e57600080fd5b805160ff81168114610f5e57600080fd5b80518015158114610f5e57600080fd5b60006101e082840312156145a057600080fd5b6145a86144fa565b825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c082015260e083015160e0820152610100614600818501614547565b90820152610120614612848201614552565b90820152610140614624848201614552565b9082015261016061463684820161455d565b9082015261018061464884820161456c565b908201526101a061465a84820161457d565b908201526101c061466c848201614552565b908201529392505050565b600082601f83011261468857600080fd5b6040516040810181811067ffffffffffffffff821117156146ab576146ab6144e4565b80604052508060408401858111156146c257600080fd5b845b818110156146e55780356146d781614322565b8352602092830192016146c4565b509195945050505050565b60006080828403121561470257600080fd5b6040516040810181811067ffffffffffffffff82111715614725576147256144e4565b604052905080601f8301841361473a57600080fd5b614742614524565b80604085018681111561475457600080fd5b855b8181101561476e578035845260209384019301614756565b5081845261477c8782614677565b60208501525050505092915050565b803560038110610f5e57600080fd5b600060c082840312156147ac57600080fd5b6040516060810181811067ffffffffffffffff821117156147cf576147cf6144e4565b6040526147dc84846146f0565b81526147ea6080840161478b565b602082015260a09290920135604083015250919050565b81810381811115610e9f57610e9f6144ad565b60006080828403121561482657600080fd5b6110ec83836146f0565b67ffffffffffffffff82811682821603908082111561381c5761381c6144ad565b60006020828403121561486357600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561489257600080fd5b81516110ec8161417c565b60005b838110156148b85781810151838201526020016148a0565b50506000910152565b600082516148d381846020870161489d565b9190910192915050565b80820180821115610e9f57610e9f6144ad565b60006020828403121561490257600080fd5b6110ec8261478b565b614914816143a3565b9052565b6040818337604082016040820160005b600281101561495b57813561493c81614322565b67ffffffffffffffff1683526020928301929190910190600101614928565b50505061496a6080820161478b565b614973816143a3565b608083015260a090810135910152565b6000610320820190508835825260208901356020830152604089013560408301526060890135606083015260808901356149bc8161417c565b6001600160a01b0316608083015260a08901356149d881614322565b67ffffffffffffffff90811660a084015260c08a0135906149f882614322565b1660c0830152614a0e60e0808401908b01614918565b6101a0614a1f818401828c01614918565b508761026083015286610280830152856102a0830152846102c0830152614a526102e08301856001600160a01b03169052565b67ffffffffffffffff831661030083015298975050505050505050565b8151805160c0830191908360005b6002811015614a9c578251825260209283019290910190600101614a7d565b505050602090810151906040840160005b6002811015614ad457835167ffffffffffffffff1682529282019290820190600101614aad565b50508401519050614ae8608084018261490b565b50604083015160a083015292915050565b600060208284031215614b0b57600080fd5b6110ec8261457d565b634e487b7160e01b600052603160045260246000fd5b6020815260008251806020840152614b4981604085016020870161489d565b601f01601f1916919091016040019291505056fea2646970667358221220a53afaa4c737f3c59ce7695d2be411e1bf4c2b4140c9002323dca5f243018c5364736f6c63430008110033'

type BoldRollupUserLogicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (
  xs: BoldRollupUserLogicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1

export class BoldRollupUserLogic__factory extends ContractFactory {
  constructor(...args: BoldRollupUserLogicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
    this.contractName = 'BoldRollupUserLogic'
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BoldRollupUserLogic> {
    return super.deploy(overrides || {}) as Promise<BoldRollupUserLogic>
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {})
  }
  attach(address: string): BoldRollupUserLogic {
    return super.attach(address) as BoldRollupUserLogic
  }
  connect(signer: Signer): BoldRollupUserLogic__factory {
    return super.connect(signer) as BoldRollupUserLogic__factory
  }
  static readonly contractName: 'BoldRollupUserLogic'
  public readonly contractName: 'BoldRollupUserLogic'
  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): BoldRollupUserLogicInterface {
    return new utils.Interface(_abi) as BoldRollupUserLogicInterface
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BoldRollupUserLogic {
    return new Contract(address, _abi, signerOrProvider) as BoldRollupUserLogic
  }
}
