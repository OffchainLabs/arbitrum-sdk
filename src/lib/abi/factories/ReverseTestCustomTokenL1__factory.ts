/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ReverseTestCustomTokenL1,
  ReverseTestCustomTokenL1Interface,
} from "../ReverseTestCustomTokenL1";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_gateway",
        type: "address",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "bridgeBurn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "bridgeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "gateway",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isArbitrumEnabled",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "l2CustomTokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maxSubmissionCostForCustomGateway",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxSubmissionCostForRouter",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxGasForCustomGateway",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxGasForRouter",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gasPriceBid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "valueForGateway",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "valueForRouter",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "creditBackAddress",
        type: "address",
      },
    ],
    name: "registerTokenOnL2",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "transferAndCall",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200223e3803806200223e833981016040819052620000349162000523565b6000548290829082908290610100900460ff16158080156200005d5750600054600160ff909116105b806200008d57506200007a30620001d560201b62000a001760201c565b1580156200008d575060005460ff166001145b620000e55760405162461bcd60e51b815260206004820152602e6024820152600080516020620021de83398151915260448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff19166001179055801562000109576000805461ff0019166101001790555b80156200013f576000805461ff0019169055604051600181526000805160206200221e8339815191529060200160405180910390a15b5060cc80546001600160a01b038085166001600160a01b03199283161790925560cd805492841692909116919091179055604080518082018252600f81526e2a32b9ba21bab9ba37b6aa37b5b2b760891b6020808301919091528251808401909352600483526321a0a92160e11b83820152620001c9929060129062000a0f620001e4821b17901c565b505050505050620006cc565b6001600160a01b03163b151590565b600054610100900460ff1615808015620002055750600054600160ff909116105b806200023557506200022230620001d560201b62000a001760201c565b15801562000235575060005460ff166001145b620002895760405162461bcd60e51b815260206004820152602e6024820152600080516020620021de83398151915260448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401620000dc565b6000805460ff191660011790558015620002ad576000805461ff0019166101001790555b620002b8846200030f565b620002c4848462000399565b6038805460ff191660ff8416179055801562000309576000805461ff0019169055604051600181526000805160206200221e8339815191529060200160405180910390a15b50505050565b600054610100900460ff166200036b5760405162461bcd60e51b815260206004820152602b6024820152600080516020620021fe83398151915260448201526a6e697469616c697a696e6760a81b6064820152608401620000dc565b6200039681604051806040016040528060018152602001603160f81b8152506200040560201b60201c565b50565b600054610100900460ff16620003f55760405162461bcd60e51b815260206004820152602b6024820152600080516020620021fe83398151915260448201526a6e697469616c697a696e6760a81b6064820152608401620000dc565b6200040182826200047b565b5050565b600054610100900460ff16620004615760405162461bcd60e51b815260206004820152602b6024820152600080516020620021fe83398151915260448201526a6e697469616c697a696e6760a81b6064820152608401620000dc565b815160209283012081519190920120606591909155606655565b600054610100900460ff16620004d75760405162461bcd60e51b815260206004820152602b6024820152600080516020620021fe83398151915260448201526a6e697469616c697a696e6760a81b6064820152608401620000dc565b6036620004e5838262000600565b506037620004f4828262000600565b50506038805460ff1916601217905550565b80516001600160a01b03811681146200051e57600080fd5b919050565b600080604083850312156200053757600080fd5b620005428362000506565b9150620005526020840162000506565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200058657607f821691505b602082108103620005a757634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620005fb57600081815260208120601f850160051c81016020861015620005d65750805b601f850160051c820191505b81811015620005f757828155600101620005e2565b5050505b505050565b81516001600160401b038111156200061c576200061c6200055b565b62000634816200062d845462000571565b84620005ad565b602080601f8311600181146200066c5760008415620006535750858301515b600019600386901b1c1916600185901b178555620005f7565b600085815260208120601f198616915b828110156200069d578886015182559484019460019091019084016200067c565b5085821015620006bc5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611b0280620006dc6000396000f3fe6080604052600436106101355760003560e01c806374f4f547116100ab578063a457c2d71161006f578063a457c2d714610348578063a9059cbb14610368578063d505accf14610388578063dd62ed3e146103a8578063f887ea40146103c8578063fc792d8e146103e857600080fd5b806374f4f547146102be5780637ecebe00146102de5780638c2a993e146102fe5780638e5f5ad11461031e57806395d89b411461033357600080fd5b806323b872dd116100fd57806323b872dd14610203578063313ce567146102235780633644e51514610249578063395093511461025e5780634000aea01461027e57806370a082311461029e57600080fd5b806306fdde031461013a578063095ea7b314610165578063116191b6146101955780631249c58b146101cd57806318160ddd146101e4575b600080fd5b34801561014657600080fd5b5061014f6103fb565b60405161015c9190611579565b60405180910390f35b34801561017157600080fd5b506101856101803660046115af565b61048d565b604051901515815260200161015c565b3480156101a157600080fd5b5060cc546101b5906001600160a01b031681565b6040516001600160a01b03909116815260200161015c565b3480156101d957600080fd5b506101e26104a7565b005b3480156101f057600080fd5b506035545b60405190815260200161015c565b34801561020f57600080fd5b5061018561021e3660046115d9565b6104b7565b34801561022f57600080fd5b5060385460ff165b60405160ff909116815260200161015c565b34801561025557600080fd5b506101f56104cc565b34801561026a57600080fd5b506101856102793660046115af565b6104db565b34801561028a57600080fd5b5061018561029936600461162b565b6104fd565b3480156102aa57600080fd5b506101f56102b93660046116f6565b610573565b3480156102ca57600080fd5b506101e26102d93660046115af565b61057e565b3480156102ea57600080fd5b506101f56102f93660046116f6565b6105bf565b34801561030a57600080fd5b506101e26103193660046115af565b6105dd565b34801561032a57600080fd5b50610237610611565b34801561033f57600080fd5b5061014f610667565b34801561035457600080fd5b506101856103633660046115af565b610676565b34801561037457600080fd5b506101856103833660046115af565b6106fc565b34801561039457600080fd5b506101e26103a3366004611711565b61070a565b3480156103b457600080fd5b506101f56103c3366004611784565b61086e565b3480156103d457600080fd5b5060cd546101b5906001600160a01b031681565b6101e26103f63660046117b7565b610899565b60606036805461040a9061182e565b80601f01602080910402602001604051908101604052809291908181526020018280546104369061182e565b80156104835780601f1061045857610100808354040283529160200191610483565b820191906000526020600020905b81548152906001019060200180831161046657829003601f168201915b5050505050905090565b60003361049b818585610b44565b60019150505b92915050565b6104b5336302faf080610c69565b565b60006104c4848484610d18565b949350505050565b60006104d6610d25565b905090565b60003361049b8185856104ee838361086e565b6104f89190611862565b610b44565b600061050984846106fc565b50836001600160a01b0316336001600160a01b03167fe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16858560405161054f929190611883565b60405180910390a3833b1561056957610569848484610da0565b5060019392505050565b60006104a182610e0a565b60cc546001600160a01b031633146105b15760405162461bcd60e51b81526004016105a89061189c565b60405180910390fd5b6105bb8282610e15565b5050565b6001600160a01b0381166000908152609960205260408120546104a1565b60cc546001600160a01b031633146106075760405162461bcd60e51b81526004016105a89061189c565b6105bb8282610c69565b60cd54600090600160a01b900460ff166106615760405162461bcd60e51b81526020600482015260116024820152701393d517d156141150d5115117d0d05313607a1b60448201526064016105a8565b5060b190565b60606037805461040a9061182e565b60003381610684828661086e565b9050838110156106e45760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016105a8565b6106f18286868403610b44565b506001949350505050565b60003361049b818585610f34565b8342111561075a5760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e6500000060448201526064016105a8565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886107898c6110cd565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e00160405160208183030381529060405280519060200120905060006107e4826110f5565b905060006107f482878787611143565b9050896001600160a01b0316816001600160a01b0316146108575760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e6174757265000060448201526064016105a8565b6108628a8a8a610b44565b50505050505050505050565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b600060cd60149054906101000a900460ff169050600160cd60146101000a81548160ff02191690831515021790555060cc60009054906101000a90046001600160a01b03166001600160a01b031663ca346d4a858c8a898e886040518763ffffffff1660e01b81526004016109129594939291906118c4565b60206040518083038185885af1158015610930573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061095591906118f4565b5060cd5460cc54604051632d67b72d60e01b81526001600160a01b0392831692632d67b72d92879261099592909116908b908b908f908a906004016118c4565b60206040518083038185885af11580156109b3573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906109d891906118f4565b5060cd8054911515600160a01b0260ff60a01b19909216919091179055505050505050505050565b6001600160a01b03163b151590565b600054610100900460ff1615808015610a2f5750600054600160ff909116105b80610a505750610a3e30610a00565b158015610a50575060005460ff166001145b610ab35760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016105a8565b6000805460ff191660011790558015610ad6576000805461ff0019166101001790555b610adf8461116b565b610ae984846111b8565b6038805460ff191660ff84161790558015610b3e576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b6001600160a01b038316610ba65760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016105a8565b6001600160a01b038216610c075760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016105a8565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038216610cbf5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016105a8565b8060356000828254610cd19190611862565b90915550506001600160a01b038216600081815260336020908152604080832080548601905551848152600080516020611aad833981519152910160405180910390a35050565b60006104c48484846111e9565b60006104d67f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f610d5460655490565b6066546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b604051635260769b60e11b815283906001600160a01b0382169063a4c0ed3690610dd29033908790879060040161190d565b600060405180830381600087803b158015610dec57600080fd5b505af1158015610e00573d6000803e3d6000fd5b5050505050505050565b60006104a1826111f6565b6001600160a01b038216610e755760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016105a8565b6001600160a01b03821660009081526033602052604090205481811015610ee95760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016105a8565b6001600160a01b0383166000818152603360209081526040808320868603905560358054879003905551858152919291600080516020611aad8339815191529101610c5c565b505050565b6001600160a01b038316610f985760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016105a8565b6001600160a01b038216610ffa5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016105a8565b6001600160a01b038316600090815260336020526040902054818110156110725760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016105a8565b6001600160a01b038085166000818152603360205260408082208686039055928616808252908390208054860190559151600080516020611aad833981519152906110c09086815260200190565b60405180910390a3610b3e565b6001600160a01b03811660009081526099602052604090208054600181018255905b50919050565b60006104a1611102610d25565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b600080600061115487878787611214565b91509150611161816112ce565b5095945050505050565b600054610100900460ff166111925760405162461bcd60e51b81526004016105a89061193d565b6111b581604051806040016040528060018152602001603160f81b815250611413565b50565b600054610100900460ff166111df5760405162461bcd60e51b81526004016105a89061193d565b6105bb8282611454565b60006104c48484846114a6565b6001600160a01b0381166000908152603360205260408120546104a1565b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b0383111561124157506000905060036112c5565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611295573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166112be576000600192509250506112c5565b9150600090505b94509492505050565b60008160048111156112e2576112e2611988565b036112ea5750565b60018160048111156112fe576112fe611988565b036113465760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b60448201526064016105a8565b600281600481111561135a5761135a611988565b036113a75760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016105a8565b60038160048111156113bb576113bb611988565b036111b55760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016105a8565b600054610100900460ff1661143a5760405162461bcd60e51b81526004016105a89061193d565b815160209283012081519190920120606591909155606655565b600054610100900460ff1661147b5760405162461bcd60e51b81526004016105a89061193d565b603661148783826119ec565b50603761149482826119ec565b50506038805460ff1916601217905550565b6000336114b48582856114bf565b6106f1858585610f34565b60006114cb848461086e565b90506000198114610b3e57818110156115265760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016105a8565b610b3e8484848403610b44565b6000815180845260005b818110156115595760208185018101518683018201520161153d565b506000602082860101526020601f19601f83011685010191505092915050565b60208152600061158c6020830184611533565b9392505050565b80356001600160a01b03811681146115aa57600080fd5b919050565b600080604083850312156115c257600080fd5b6115cb83611593565b946020939093013593505050565b6000806000606084860312156115ee57600080fd5b6115f784611593565b925061160560208501611593565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b60008060006060848603121561164057600080fd5b61164984611593565b925060208401359150604084013567ffffffffffffffff8082111561166d57600080fd5b818601915086601f83011261168157600080fd5b81358181111561169357611693611615565b604051601f8201601f19908116603f011681019083821181831017156116bb576116bb611615565b816040528281528960208487010111156116d457600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b60006020828403121561170857600080fd5b61158c82611593565b600080600080600080600060e0888a03121561172c57600080fd5b61173588611593565b965061174360208901611593565b95506040880135945060608801359350608088013560ff8116811461176757600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561179757600080fd5b6117a083611593565b91506117ae60208401611593565b90509250929050565b60008060008060008060008060006101208a8c0312156117d657600080fd5b6117df8a611593565b985060208a0135975060408a0135965060608a0135955060808a0135945060a08a0135935060c08a0135925060e08a0135915061181f6101008b01611593565b90509295985092959850929598565b600181811c9082168061184257607f821691505b6020821081036110ef57634e487b7160e01b600052602260045260246000fd5b808201808211156104a157634e487b7160e01b600052601160045260246000fd5b8281526040602082015260006104c46040830184611533565b6020808252600e908201526d4f4e4c595f6c314741544557415960901b604082015260600190565b6001600160a01b039586168152602081019490945260408401929092526060830152909116608082015260a00190565b60006020828403121561190657600080fd5b5051919050565b60018060a01b03841681528260208201526060604082015260006119346060830184611533565b95945050505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b634e487b7160e01b600052602160045260246000fd5b601f821115610f2f57600081815260208120601f850160051c810160208610156119c55750805b601f850160051c820191505b818110156119e4578281556001016119d1565b505050505050565b815167ffffffffffffffff811115611a0657611a06611615565b611a1a81611a14845461182e565b8461199e565b602080601f831160018114611a4f5760008415611a375750858301515b600019600386901b1c1916600185901b1785556119e4565b600085815260208120601f198616915b82811015611a7e57888601518255948401946001909101908401611a5f565b5085821015611a9c5787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220ceb95270cb1a59da87022839353ed04c74cd0e06d499615681675f7e21c48a5564736f6c63430008100033496e697469616c697a61626c653a20636f6e747261637420697320616c726561496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420697f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498";

type ReverseTestCustomTokenL1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReverseTestCustomTokenL1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ReverseTestCustomTokenL1__factory extends ContractFactory {
  constructor(...args: ReverseTestCustomTokenL1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ReverseTestCustomTokenL1";
  }

  deploy(
    _gateway: string,
    _router: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ReverseTestCustomTokenL1> {
    return super.deploy(
      _gateway,
      _router,
      overrides || {}
    ) as Promise<ReverseTestCustomTokenL1>;
  }
  getDeployTransaction(
    _gateway: string,
    _router: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_gateway, _router, overrides || {});
  }
  attach(address: string): ReverseTestCustomTokenL1 {
    return super.attach(address) as ReverseTestCustomTokenL1;
  }
  connect(signer: Signer): ReverseTestCustomTokenL1__factory {
    return super.connect(signer) as ReverseTestCustomTokenL1__factory;
  }
  static readonly contractName: "ReverseTestCustomTokenL1";
  public readonly contractName: "ReverseTestCustomTokenL1";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReverseTestCustomTokenL1Interface {
    return new utils.Interface(_abi) as ReverseTestCustomTokenL1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ReverseTestCustomTokenL1 {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ReverseTestCustomTokenL1;
  }
}
