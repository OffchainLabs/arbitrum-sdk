/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RollupUserLogic,
  RollupUserLogicInterface,
} from "../RollupUserLogic";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "nodeNum",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "blockHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "sendRoot",
        type: "bytes32",
      },
    ],
    name: "NodeConfirmed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "nodeNum",
        type: "uint64",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "parentNodeHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "nodeHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "executionHash",
        type: "bytes32",
      },
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes32[2]",
                    name: "bytes32Vals",
                    type: "bytes32[2]",
                  },
                  {
                    internalType: "uint64[2]",
                    name: "u64Vals",
                    type: "uint64[2]",
                  },
                ],
                internalType: "struct GlobalState",
                name: "globalState",
                type: "tuple",
              },
              {
                internalType: "enum MachineStatus",
                name: "machineStatus",
                type: "uint8",
              },
            ],
            internalType: "struct RollupLib.ExecutionState",
            name: "beforeState",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes32[2]",
                    name: "bytes32Vals",
                    type: "bytes32[2]",
                  },
                  {
                    internalType: "uint64[2]",
                    name: "u64Vals",
                    type: "uint64[2]",
                  },
                ],
                internalType: "struct GlobalState",
                name: "globalState",
                type: "tuple",
              },
              {
                internalType: "enum MachineStatus",
                name: "machineStatus",
                type: "uint8",
              },
            ],
            internalType: "struct RollupLib.ExecutionState",
            name: "afterState",
            type: "tuple",
          },
          {
            internalType: "uint64",
            name: "numBlocks",
            type: "uint64",
          },
        ],
        indexed: false,
        internalType: "struct RollupLib.Assertion",
        name: "assertion",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "afterInboxBatchAcc",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "wasmModuleRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "inboxMaxCount",
        type: "uint256",
      },
    ],
    name: "NodeCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "nodeNum",
        type: "uint64",
      },
    ],
    name: "NodeRejected",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "challengeIndex",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "asserter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "challenger",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "challengedNode",
        type: "uint64",
      },
    ],
    name: "RollupChallengeStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "machineHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
    ],
    name: "RollupInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "UpgradedSecondary",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "initialBalance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "finalBalance",
        type: "uint256",
      },
    ],
    name: "UserStakeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "initialBalance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "finalBalance",
        type: "uint256",
      },
    ],
    name: "UserWithdrawableFundsUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "VALIDATOR_AFK_BLOCKS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_stakerMap",
    outputs: [
      {
        internalType: "uint256",
        name: "amountStaked",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "index",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "latestStakedNode",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "currentChallenge",
        type: "uint64",
      },
      {
        internalType: "bool",
        name: "isStaked",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "stakerAddress",
        type: "address",
      },
    ],
    name: "addToDeposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "amountStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseStake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bridge",
    outputs: [
      {
        internalType: "contract IBridge",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "chainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "challengeManager",
    outputs: [
      {
        internalType: "contract IChallengeManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "challengeIndex",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "winningStaker",
        type: "address",
      },
      {
        internalType: "address",
        name: "losingStaker",
        type: "address",
      },
    ],
    name: "completeChallenge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "blockHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "sendRoot",
        type: "bytes32",
      },
    ],
    name: "confirmNextNode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "confirmPeriodBlocks",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "nodeNum",
        type: "uint64",
      },
    ],
    name: "countStakedZombies",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "nodeNum",
        type: "uint64",
      },
    ],
    name: "countZombiesStakedOnChildren",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[2]",
        name: "stakers",
        type: "address[2]",
      },
      {
        internalType: "uint64[2]",
        name: "nodeNums",
        type: "uint64[2]",
      },
      {
        internalType: "enum MachineStatus[2]",
        name: "machineStatuses",
        type: "uint8[2]",
      },
      {
        components: [
          {
            internalType: "bytes32[2]",
            name: "bytes32Vals",
            type: "bytes32[2]",
          },
          {
            internalType: "uint64[2]",
            name: "u64Vals",
            type: "uint64[2]",
          },
        ],
        internalType: "struct GlobalState[2]",
        name: "globalStates",
        type: "tuple[2]",
      },
      {
        internalType: "uint64",
        name: "numBlocks",
        type: "uint64",
      },
      {
        internalType: "bytes32",
        name: "secondExecutionHash",
        type: "bytes32",
      },
      {
        internalType: "uint256[2]",
        name: "proposedBlocks",
        type: "uint256[2]",
      },
      {
        internalType: "bytes32[2]",
        name: "wasmModuleRoots",
        type: "bytes32[2]",
      },
    ],
    name: "createChallenge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "currentChallenge",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentRequiredStake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "extraChallengeTimeBlocks",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "firstUnresolvedNode",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "nodeNum",
        type: "uint64",
      },
    ],
    name: "getNode",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "stateHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "challengeHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "confirmData",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "prevNum",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "deadlineBlock",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "noChildConfirmedBeforeBlock",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "stakerCount",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "childStakerCount",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "firstChildBlock",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "latestChildNumber",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "createdAtBlock",
            type: "uint64",
          },
          {
            internalType: "bytes32",
            name: "nodeHash",
            type: "bytes32",
          },
        ],
        internalType: "struct Node",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "getStaker",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amountStaked",
            type: "uint256",
          },
          {
            internalType: "uint64",
            name: "index",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "latestStakedNode",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "currentChallenge",
            type: "uint64",
          },
          {
            internalType: "bool",
            name: "isStaked",
            type: "bool",
          },
        ],
        internalType: "struct IRollupCore.Staker",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "stakerNum",
        type: "uint64",
      },
    ],
    name: "getStakerAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "inbox",
    outputs: [
      {
        internalType: "contract IInbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_stakeToken",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isERC20Enabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "isStaked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "isStakedOnLatestConfirmed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isValidator",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "isZombie",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastStakeBlock",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestConfirmed",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestNodeCreated",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "latestStakedNode",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "loserStakeEscrow",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minimumAssertionPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "nodeNum",
        type: "uint64",
      },
      {
        internalType: "bytes32",
        name: "nodeHash",
        type: "bytes32",
      },
    ],
    name: "newStakeOnExistingNode",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes32[2]",
                    name: "bytes32Vals",
                    type: "bytes32[2]",
                  },
                  {
                    internalType: "uint64[2]",
                    name: "u64Vals",
                    type: "uint64[2]",
                  },
                ],
                internalType: "struct GlobalState",
                name: "globalState",
                type: "tuple",
              },
              {
                internalType: "enum MachineStatus",
                name: "machineStatus",
                type: "uint8",
              },
            ],
            internalType: "struct RollupLib.ExecutionState",
            name: "beforeState",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes32[2]",
                    name: "bytes32Vals",
                    type: "bytes32[2]",
                  },
                  {
                    internalType: "uint64[2]",
                    name: "u64Vals",
                    type: "uint64[2]",
                  },
                ],
                internalType: "struct GlobalState",
                name: "globalState",
                type: "tuple",
              },
              {
                internalType: "enum MachineStatus",
                name: "machineStatus",
                type: "uint8",
              },
            ],
            internalType: "struct RollupLib.ExecutionState",
            name: "afterState",
            type: "tuple",
          },
          {
            internalType: "uint64",
            name: "numBlocks",
            type: "uint64",
          },
        ],
        internalType: "struct RollupLib.Assertion",
        name: "assertion",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "expectedNodeHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "prevNodeInboxMaxCount",
        type: "uint256",
      },
    ],
    name: "newStakeOnNewNode",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "nodeNum",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "nodeHasStaker",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "outbox",
    outputs: [
      {
        internalType: "contract IOutbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "target",
        type: "uint256",
      },
    ],
    name: "reduceDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "stakerAddress",
        type: "address",
      },
    ],
    name: "rejectNextNode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "startIndex",
        type: "uint256",
      },
    ],
    name: "removeOldZombies",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeWhitelistAfterFork",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeWhitelistAfterValidatorAfk",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "zombieNum",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxNodes",
        type: "uint256",
      },
    ],
    name: "removeZombie",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "nodeNum",
        type: "uint256",
      },
    ],
    name: "requireUnresolved",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "requireUnresolvedExists",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "firstUnresolvedNodeNum",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "latestCreatedNode",
        type: "uint64",
      },
    ],
    name: "requiredStake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "stakerAddress",
        type: "address",
      },
    ],
    name: "returnOldDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rollupDeploymentBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rollupEventInbox",
    outputs: [
      {
        internalType: "contract IRollupEventInbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sequencerInbox",
    outputs: [
      {
        internalType: "contract ISequencerInbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "nodeNum",
        type: "uint64",
      },
      {
        internalType: "bytes32",
        name: "nodeHash",
        type: "bytes32",
      },
    ],
    name: "stakeOnExistingNode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes32[2]",
                    name: "bytes32Vals",
                    type: "bytes32[2]",
                  },
                  {
                    internalType: "uint64[2]",
                    name: "u64Vals",
                    type: "uint64[2]",
                  },
                ],
                internalType: "struct GlobalState",
                name: "globalState",
                type: "tuple",
              },
              {
                internalType: "enum MachineStatus",
                name: "machineStatus",
                type: "uint8",
              },
            ],
            internalType: "struct RollupLib.ExecutionState",
            name: "beforeState",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes32[2]",
                    name: "bytes32Vals",
                    type: "bytes32[2]",
                  },
                  {
                    internalType: "uint64[2]",
                    name: "u64Vals",
                    type: "uint64[2]",
                  },
                ],
                internalType: "struct GlobalState",
                name: "globalState",
                type: "tuple",
              },
              {
                internalType: "enum MachineStatus",
                name: "machineStatus",
                type: "uint8",
              },
            ],
            internalType: "struct RollupLib.ExecutionState",
            name: "afterState",
            type: "tuple",
          },
          {
            internalType: "uint64",
            name: "numBlocks",
            type: "uint64",
          },
        ],
        internalType: "struct RollupLib.Assertion",
        name: "assertion",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "expectedNodeHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "prevNodeInboxMaxCount",
        type: "uint256",
      },
    ],
    name: "stakeOnNewNode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakeToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakerCount",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalWithdrawableFunds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "validatorUtils",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "validatorWalletCreator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "validatorWhitelistDisabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wasmModuleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawStakerFunds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "withdrawableFunds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "zombieNum",
        type: "uint256",
      },
    ],
    name: "zombieAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "zombieCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "zombieNum",
        type: "uint256",
      },
    ],
    name: "zombieLatestStakedNode",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c0604052306080524660a05234801561001857600080fd5b5060805160a051615b336200004d600039600061289801526000818161121701528181612907015261298c0152615b336000f3fe60806040526004361061036f5760003560e01c80637427be51116101c8578063c4d66de8116100f8578063e78cea921161009b578063e78cea9214610b51578063e8bd492214610b71578063edfd03ed14610c06578063ee35f32714610c26578063ef40a67014610c46578063f065de3f14610c66578063f33e1fac14610c86578063facd743b14610ca6578063fb0e722b14610cd657600080fd5b8063c4d66de814610a74578063cd205fda14610a94578063ce11e6ab14610ab4578063ced01cfb14610ad4578063d01e660214610ae7578063d735e21d14610b07578063dcd030aa14610b1c578063dff6978714610b3c57600080fd5b806391c657e81161016b57806391c657e81461086d57806392c8134c1461088d5780639a8a0592146108ba578063a23c44b1146108d0578063aa38a6e7146109df578063aa65af48146109ff578063b0ebedc714610a1f578063bc45e0ae14610a3f578063c2c2e68e14610a5f57600080fd5b80637427be511461078b57806376e7e23b146107ab578063771b2f97146107c15780637ba9534a146107e85780637e2d2155146107fd5780638640ce5f1461081d5780638da5cb5b146108425780638ee1a1261461085757600080fd5b806351ed6a30116102a357806363721d6b1161024657806363721d6b1461068d57806365f7f80d146106a257806367425daf146106c057806369fd251c146106d55780636b94c33b146106f55780636d08d0a2146107155780636ddd3744146107355780636f57644e1461075557806371ef232c1461077557600080fd5b806351ed6a30146105ab57806352d1902d146105cb57806354ce8961146105e05780635c617e94146106005780635c975abb146106205780635eb405d51461063857806361373919146106585780636177fd181461066d57600080fd5b80632b2af0ab116103165780632b2af0ab146104965780632e7acfa6146104b65780632f30cabd146104ee5780633e96576e1461052457806345c5b2c71461054457806345e38b64146105575780634774e5761461056d5780634ceccfe5146105805780634d26732d1461059657600080fd5b8063014cc92c14610374578063023a96fe146103b15780630357aa49146103d157806312ab3d3b146103f357806318baaab91461041d5780631aeb55a0146104325780631b1689e9146104525780631e83d30f14610476575b600080fd5b34801561038057600080fd5b50606f54610394906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156103bd57600080fd5b50606e54610394906001600160a01b031681565b3480156103dd57600080fd5b506103f16103ec366004614fc1565b610cf6565b005b3480156103ff57600080fd5b50607e5461040d9060ff1681565b60405190151581526020016103a8565b34801561042957600080fd5b506103f1610dc9565b34801561043e57600080fd5b506103f161044d366004615012565b610e43565b34801561045e57600080fd5b50610468607d5481565b6040519081526020016103a8565b34801561048257600080fd5b506103f161049136600461503e565b611003565b3480156104a257600080fd5b506103f16104b136600461503e565b61108d565b3480156104c257600080fd5b506065546104d6906001600160401b031681565b6040516001600160401b0390911681526020016103a8565b3480156104fa57600080fd5b50610468610509366004615057565b6001600160a01b03166000908152607b602052604090205490565b34801561053057600080fd5b506104d661053f366004615057565b611131565b6103f1610552366004615057565b61115f565b34801561056357600080fd5b5061046860735481565b6103f161057b366004615072565b6111c8565b34801561058c57600080fd5b5061046861b2fa81565b3480156105a257600080fd5b506104686111dc565b3480156105b757600080fd5b50607254610394906001600160a01b031681565b3480156105d757600080fd5b5061046861120a565b3480156105ec57600080fd5b506103f16105fb366004615072565b6112cf565b34801561060c57600080fd5b5061046861061b3660046150af565b611532565b34801561062c57600080fd5b5060335460ff1661040d565b34801561064457600080fd5b506103f16106533660046150cc565b611586565b34801561066457600080fd5b506104686118a9565b34801561067957600080fd5b5061040d610688366004615057565b6119a6565b34801561069957600080fd5b50607a54610468565b3480156106ae57600080fd5b506075546001600160401b03166104d6565b3480156106cc57600080fd5b506103f16119ce565b3480156106e157600080fd5b506104d66106f0366004615057565b611a58565b34801561070157600080fd5b506103f1610710366004615057565b611a86565b34801561072157600080fd5b506104686107303660046150af565b611dbe565b34801561074157600080fd5b506103946107503660046150af565b611e41565b34801561076157600080fd5b506103f16107703660046150ff565b611e7a565b34801561078157600080fd5b50610468607c5481565b34801561079757600080fd5b506103f16107a6366004615057565b6124ac565b3480156107b757600080fd5b5061046860675481565b3480156107cd57600080fd5b506065546104d690600160401b90046001600160401b031681565b3480156107f457600080fd5b506104d6612576565b34801561080957600080fd5b506103f16108183660046150cc565b61258c565b34801561082957600080fd5b50607554600160c01b90046001600160401b03166104d6565b34801561084e57600080fd5b506103946126f0565b34801561086357600080fd5b5061046860685481565b34801561087957600080fd5b5061040d610888366004615057565b6126ff565b34801561089957600080fd5b506108ad6108a83660046150af565b612763565b6040516103a8919061519f565b3480156108c657600080fd5b5061046860665481565b3480156108dc57600080fd5b5061098a6108eb366004615057565b6040805160a081018252600080825260208201819052918101829052606081018290526080810191909152506001600160a01b0316600090815260796020908152604091829020825160a081018452815481526001909101546001600160401b0380821693830193909352600160401b8104831693820193909352600160801b83049091166060820152600160c01b90910460ff161515608082015290565b6040516103a89190600060a0820190508251825260208301516001600160401b038082166020850152806040860151166040850152806060860151166060850152505060808301511515608083015292915050565b3480156109eb57600080fd5b50606d54610394906001600160a01b031681565b348015610a0b57600080fd5b5061040d610a1a36600461529b565b61281b565b348015610a2b57600080fd5b50610468610a3a3660046152d0565b612852565b348015610a4b57600080fd5b50607054610394906001600160a01b031681565b348015610a6b57600080fd5b506103f1612872565b348015610a8057600080fd5b506103f1610a8f366004615057565b6128fc565b348015610aa057600080fd5b506072546001600160a01b0316151561040d565b348015610ac057600080fd5b50606b54610394906001600160a01b031681565b6103f1610ae2366004615012565b612abc565b348015610af357600080fd5b50610394610b0236600461503e565b612ad3565b348015610b1357600080fd5b506104d6612ae8565b348015610b2857600080fd5b5061040d610b37366004615057565b612afe565b348015610b4857600080fd5b506078546104d6565b348015610b5d57600080fd5b50606a54610394906001600160a01b031681565b348015610b7d57600080fd5b50610bce610b8c366004615057565b607960205260009081526040902080546001909101546001600160401b0380821691600160401b8104821691600160801b82041690600160c01b900460ff1685565b604080519586526001600160401b0394851660208701529284169285019290925290911660608301521515608082015260a0016103a8565b348015610c1257600080fd5b506103f1610c2136600461503e565b612b41565b348015610c3257600080fd5b50606c54610394906001600160a01b031681565b348015610c5257600080fd5b50610468610c61366004615057565b612c2a565b348015610c7257600080fd5b50607154610394906001600160a01b031681565b348015610c9257600080fd5b506104d6610ca136600461503e565b612c45565b348015610cb257600080fd5b5061040d610cc1366004615057565b60746020526000908152604090205460ff1681565b348015610ce257600080fd5b50606954610394906001600160a01b031681565b60335460ff1615610d225760405162461bcd60e51b8152600401610d1990615312565b60405180910390fd5b606e546001600160a01b03163314610d6b5760405162461bcd60e51b815260206004820152600c60248201526b2ba927a723afa9a2a72222a960a11b6044820152606401610d19565b610d758282612c7c565b6001600160401b03168314610dba5760405162461bcd60e51b815260206004820152600b60248201526a1393d517d25397d0d2105360aa1b6044820152606401610d19565b610dc48282612d4a565b505050565b607e5460ff1615610dec5760405162461bcd60e51b8152600401610d199061533c565b610df4612e00565b610e345760405162461bcd60e51b815260206004820152601160248201527056414c494441544f525f4e4f545f41464b60781b6044820152606401610d19565b607e805460ff19166001179055565b3360009081526074602052604090205460ff1680610e635750607e5460ff165b610e7f5760405162461bcd60e51b8152600401610d1990615368565b60335460ff1615610ea25760405162461bcd60e51b8152600401610d1990615312565b610eab33612afe565b610ec75760405162461bcd60e51b8152600401610d199061538f565b610ecf612ae8565b6001600160401b0316826001600160401b031610158015610f095750610ef3612576565b6001600160401b0316826001600160401b031611155b610f4d5760405162461bcd60e51b81526020600482015260156024820152744e4f44455f4e554d5f4f55545f4f465f52414e474560581b6044820152606401610d19565b6000610f5883612f0a565b905081816005015414610f9a5760405162461bcd60e51b815260206004820152600a6024820152694e4f44455f52454f524760b01b6044820152606401610d19565b60038101546001600160401b0316610fb133611131565b6001600160401b031614610ff95760405162461bcd60e51b815260206004820152600f60248201526e2727aa2fa9aa20a5a2a22fa82922ab60891b6044820152606401610d19565b610dc43384612f24565b3360009081526074602052604090205460ff16806110235750607e5460ff165b61103f5760405162461bcd60e51b8152600401610d1990615368565b60335460ff16156110625760405162461bcd60e51b8152600401610d1990615312565b61106b33612f75565b60006110756111dc565b905080821015611083578091505b610dc43383612fe5565b611095612ae8565b6001600160401b03168110156110df5760405162461bcd60e51b815260206004820152600f60248201526e1053149150511657d11150d2511151608a1b6044820152606401610d19565b6110e7612576565b6001600160401b031681111561112e5760405162461bcd60e51b815260206004820152600c60248201526b1113d154d39517d1561254d560a21b6044820152606401610d19565b50565b6001600160a01b0316600090815260796020526040902060010154600160401b90046001600160401b031690565b3360009081526074602052604090205460ff168061117f5750607e5460ff165b61119b5760405162461bcd60e51b8152600401610d1990615368565b60335460ff16156111be5760405162461bcd60e51b8152600401610d1990615312565b61112e8134613098565b6111d13461310a565b610dc48383836112cf565b6000806111e7612ae8565b905061120443826111f6612576565b6001600160401b031661322c565b91505090565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146112aa5760405162461bcd60e51b815260206004820152603b60248201527f555550534e6f745570677261646561626c653a206d757374206e6f742062652060448201527f63616c6c6564207468726f7567682064656c656761746563616c6c00000000006064820152608401610d19565b507f2b1dbce74324248c222f0ec2d5ed7bd323cfc425b336f0253c5ccfda7265546d90565b3360009081526074602052604090205460ff16806112ef5750607e5460ff165b61130b5760405162461bcd60e51b8152600401610d1990615368565b60335460ff161561132e5760405162461bcd60e51b8152600401610d1990615312565b61133733612afe565b6113535760405162461bcd60e51b8152600401610d199061538f565b600061135e33611131565b9050600061136b82612763565b6101400151611383906001600160401b0316436153c9565b90506073548110156113c45760405162461bcd60e51b815260206004820152600a60248201526954494d455f44454c544160b01b6044820152606401610d19565b60026113d861014087016101208801615405565b60038111156113e9576113e96153e0565b148061141757508261140b61140636889003880160a08901615521565b613494565b6001600160401b031610155b61144f5760405162461bcd60e51b81526020600482015260096024820152681513d3d7d4d350531360ba1b6044820152606401610d19565b6000611463610160870161014088016150af565b6001600160401b0316116114ab5760405162461bcd60e51b815260206004820152600f60248201526e22a6a82a2cafa0a9a9a2a92a24a7a760891b6044820152606401610d19565b60016114bd60a0870160808801615405565b60038111156114ce576114ce6153e0565b1461150d5760405162461bcd60e51b815260206004820152600f60248201526e4241445f505245565f53544154555360881b6044820152606401610d19565b5061151a848284866134a9565b5061152c33611527612576565b612f24565b50505050565b60008061153e607a5490565b90506000805b8281101561157e5761155985610a1a83612ad3565b1561156c57816115688161553d565b9250505b806115768161553d565b915050611544565b509392505050565b3360009081526074602052604090205460ff16806115a65750607e5460ff165b6115c25760405162461bcd60e51b8152600401610d1990615368565b60335460ff16156115e55760405162461bcd60e51b8152600401610d1990615312565b6115ed6119ce565b60006115f7612ae8565b9050600061160482612f0a565b6040805161018081018252825481526001830154602082015260028301549181019190915260038201546001600160401b038082166060840152600160401b80830482166080850152600160801b808404831660a0860152600160c01b93849004831660c0860152600486015480841660e0870152918204831661010086015281048216610120850152919091041661014082015260058201546101608201529091506116b090613a94565b60755460038201546001600160401b039081169116146116d2576116d2615558565b60038101546000906116ec906001600160401b0316612f0a565b6040805161018081018252825481526001830154602082015260028301549181019190915260038201546001600160401b038082166060840152600160401b80830482166080850152600160801b808404831660a0860152600160c01b93849004831660c0860152600486015480841660e08701529182048316610100860152810482166101208501529190910416610140820152600582015461016082015290915061179890613ae3565b6117a26000612b41565b60006117ad84611532565b600384015490915060009082906117cc906001600160401b0316611dbe565b6117d691906153c9565b6003850154909150600160c01b90046001600160401b031682106118295760405162461bcd60e51b815260206004820152600a6024820152694e4f5f5354414b45525360b01b6044820152606401610d19565b6003840154611849908290600160c01b90046001600160401b031661556e565b60048401546001600160401b0316146118955760405162461bcd60e51b815260206004820152600e60248201526d1393d517d0531317d4d51052d15160921b6044820152606401610d19565b6118a0858888613b33565b50505050505050565b3360009081526074602052604081205460ff16806118c95750607e5460ff165b6118e55760405162461bcd60e51b8152600401610d1990615368565b60335460ff16156119085760405162461bcd60e51b8152600401610d1990615312565b600061191333613c82565b604051909150600090339083908381818185875af1925050503d8060008114611958576040519150601f19603f3d011682016040523d82523d6000602084013e61195d565b606091505b50509050806119a05760405162461bcd60e51b815260206004820152600f60248201526e1514905394d1915497d19052531151608a1b6044820152606401610d19565b50905090565b6001600160a01b0316600090815260796020526040902060010154600160c01b900460ff1690565b60006119d8612ae8565b6001600160401b031690506119f56075546001600160401b031690565b6001600160401b031681118015611a1c5750611a0f612576565b6001600160401b03168111155b61112e5760405162461bcd60e51b815260206004820152600d60248201526c1393d7d553949154d3d3159151609a1b6044820152606401610d19565b6001600160a01b0316600090815260796020526040902060010154600160801b90046001600160401b031690565b3360009081526074602052604090205460ff1680611aa65750607e5460ff165b611ac25760405162461bcd60e51b8152600401610d1990615368565b60335460ff1615611ae55760405162461bcd60e51b8152600401610d1990615312565b611aed6119ce565b6000611b016075546001600160401b031690565b90506000611b0d612ae8565b90506000611b1a82612f0a565b60038101549091506001600160401b0384811691161415611d7c57611b3e84612afe565b611b5a5760405162461bcd60e51b8152600401610d199061538f565b611b74611b6685611131565b6001600160401b031661108d565b611b7e828561281b565b15611bbe5760405162461bcd60e51b815260206004820152601060248201526f14d51052d15117d3d397d5105491d15560821b6044820152606401610d19565b6040805161018081018252825481526001830154602082015260028301549181019190915260038201546001600160401b038082166060840152600160401b80830482166080850152600160801b808404831660a0860152600160c01b93849004831660c0860152600486015480841660e087015291820483166101008601528104821661012085015291909104166101408201526005820154610160820152611c6790613a94565b611d19611c7384612f0a565b6040805161018081018252825481526001830154602082015260028301549181019190915260038201546001600160401b038082166060840152600160401b80830482166080850152600160801b808404831660a0860152600160c01b93849004831660c0860152600486015480841660e08701529182048316610100860152810482166101208501529190910416610140820152600590910154610160820152613ae3565b611d236000612b41565b611d2c82611532565b6003820154600160c01b90046001600160401b031614611d7c5760405162461bcd60e51b815260206004820152600b60248201526a4841535f5354414b45525360a81b6044820152606401610d19565b611d84613d03565b6040516001600160401b038316907feaffa3d968707ec919a2fc9f31d5ab2b86c905881ff561725d5a82fc95ad464090600090a250505050565b600080611dca607a5490565b90506000805b8281101561157e576000611de382613d4a565b80549091506001600160401b03878116600160a01b9092041614801590611e1b57508054611e1b9087906001600160a01b031661281b565b15611e2e5782611e2a8161553d565b9350505b5080611e398161553d565b915050611dd0565b60006078826001600160401b031681548110611e5f57611e5f615586565b6000918252602090912001546001600160a01b031692915050565b3360009081526074602052604090205460ff1680611e9a5750607e5460ff165b611eb65760405162461bcd60e51b8152600401610d1990615368565b60335460ff1615611ed95760405162461bcd60e51b8152600401610d1990615312565b611ee960408801602089016150af565b6001600160401b0316611eff60208901896150af565b6001600160401b031610611f435760405162461bcd60e51b815260206004820152600b60248201526a2ba927a723afa7a92222a960a91b6044820152606401610d19565b611f4b612576565b6001600160401b0316611f646040890160208a016150af565b6001600160401b03161115611faa5760405162461bcd60e51b815260206004820152600c60248201526b1393d517d41493d413d4d15160a21b6044820152606401610d19565b611fb760208801886150af565b6001600160401b0316611fd26075546001600160401b031690565b6001600160401b03161061201c5760405162461bcd60e51b81526020600482015260116024820152701053149150511657d0d3d3919254935151607a1b6044820152606401610d19565b600061203c88825b60200201602081019061203791906150af565b612f0a565b9050600061204b896001612024565b600380820154908401549192506001600160401b0391821691161461209e5760405162461bcd60e51b81526020600482015260096024820152682224a3232fa82922ab60b91b6044820152606401610d19565b6120bd8a60005b6020020160208101906120b89190615057565b612f75565b6120c88a60016120a5565b6120ef6120d860208b018b6150af565b8b60005b602002016020810190610a1a9190615057565b6121305760405162461bcd60e51b815260206004820152601260248201527114d51052d1548c57d393d517d4d51052d15160721b6044820152606401610d19565b61214b61214360408b0160208c016150af565b8b60016120dc565b61218c5760405162461bcd60e51b815260206004820152601260248201527114d51052d1548c97d393d517d4d51052d15160721b6044820152606401610d19565b60408051808201825261220d916121fd91908b90600290839083908082843760009201829052506040805180820190915292508c9150600290835b828210156121f3576121e460808302850136819003810190615521565b815260200190600101906121c7565b5050505089613d70565b85358560005b6020020135613e1a565b82600101541461224c5760405162461bcd60e51b815260206004820152600a6024820152694348414c5f484153483160b01b6044820152606401610d19565b61225d856020860135856001612203565b81600101541461229c5760405162461bcd60e51b815260206004820152600a60248201526921a420a62fa420a9a41960b11b6044820152606401610d19565b60655460038301546000916001600160401b03600160401b918290048116926122ca928935929104166153c9565b60038501546122e1906001600160401b0316612f0a565b600401546122ff9190600160401b90046001600160401b031661556e565b612309919061556e565b905060208501358110156123445761233c61232760208d018d615057565b61233760408e0160208f01615057565b612d4a565b5050506124a2565b60006123848c8b8b8b89600c61235b8d358a6153c9565b612365919061559c565b600c61237560208f01358b6153c9565b61237f919061559c565b613e58565b905061240761239660208e018e615057565b8d60016020020160208101906123ac9190615057565b6001600160a01b03918216600090815260796020526040808220600190810180546001600160401b038916600160801b0267ffffffffffffffff60801b19918216811790925594909516835291200180549091169091179055565b6001600160401b0381167f6db7dc2f507647d135035469b27aa79cea90582779d084a7821d6cd092cbd87361243f60208f018f615057565b8e60016020020160208101906124559190615057565b8e600060200201602081019061246b91906150af565b604080516001600160a01b0394851681529390921660208401526001600160401b03169082015260600160405180910390a2505050505b5050505050505050565b3360009081526074602052604090205460ff16806124cc5750607e5460ff165b6124e85760405162461bcd60e51b8152600401610d1990615368565b60335460ff161561250b5760405162461bcd60e51b8152600401610d1990615312565b6075546001600160401b031661252082611131565b6001600160401b031611156125645760405162461bcd60e51b815260206004820152600a6024820152691513d3d7d49150d1539560b21b6044820152606401610d19565b61256d81612f75565b61112e81613f17565b607554600160801b90046001600160401b031690565b3360009081526074602052604090205460ff16806125ac5750607e5460ff165b6125c85760405162461bcd60e51b8152600401610d1990615368565b60335460ff16156125eb5760405162461bcd60e51b8152600401610d1990615312565b607a54821061262d5760405162461bcd60e51b815260206004820152600e60248201526d4e4f5f535543485f5a4f4d42494560901b6044820152606401610d19565b600061263883612ad3565b9050600061264584612c45565b905060008061265c6075546001600160401b031690565b6001600160401b031690505b80836001600160401b03161015801561268057508482105b156126bf57600061269084612f0a565b905061269c8486613fc7565b60038101546001600160401b03169350826126b68161553d565b93505050612668565b80836001600160401b031610156126de576126d986614111565b6126e8565b6126e886846141d7565b505050505050565b60006126fa614220565b905090565b6000805b607a5481101561275a57607a818154811061272057612720615586565b6000918252602090912001546001600160a01b03848116911614156127485750600192915050565b806127528161553d565b915050612703565b50600092915050565b61276b614e80565b61277482612f0a565b6040805161018081018252825481526001830154602082015260028301549181019190915260038201546001600160401b038082166060840152600160401b80830482166080850152600160801b808404831660a0860152600160c01b93849004831660c0860152600486015480841660e0870152918204831661010086015281048216610120850152919091041661014082015260059091015461016082015292915050565b6001600160401b03821660009081526077602090815260408083206001600160a01b038516845290915290205460ff165b92915050565b60006128688484846001600160401b031661322c565b90505b9392505050565b607e5460ff16156128955760405162461bcd60e51b8152600401610d199061533c565b467f00000000000000000000000000000000000000000000000000000000000000001415610e345760405162461bcd60e51b815260206004820152601460248201527310d210525397d25117d393d517d0d2105391d15160621b6044820152606401610d19565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016141561298a5760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b6064820152608401610d19565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166129bc614253565b6001600160a01b031614612a275760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b6064820152608401610d19565b6001600160a01b03811615612a715760405162461bcd60e51b815260206004820152601060248201526f1393d7d513d2d15397d0531313d5d15160821b6044820152606401610d19565b6072546001600160a01b03161561112e5760405162461bcd60e51b815260206004820152600f60248201526e046414345545f4e4f545f455243323608c1b6044820152606401610d19565b612ac53461310a565b612acf8282610e43565b5050565b6000607a8281548110611e5f57611e5f615586565b607554600160401b90046001600160401b031690565b6001600160a01b038116600090815260796020526040812060010154600160c01b900460ff16801561284c575060755461284c906001600160401b03168361281b565b3360009081526074602052604090205460ff1680612b615750607e5460ff165b612b7d5760405162461bcd60e51b8152600401610d1990615368565b60335460ff1615612ba05760405162461bcd60e51b8152600401610d1990615312565b6000612bab607a5490565b90506000612bc16075546001600160401b031690565b6001600160401b03169050825b8281101561152c575b81612be182612c45565b6001600160401b03161015612c1857612bf981614111565b82612c03816155bb565b935050828110612c135750505050565b612bd7565b80612c228161553d565b915050612bce565b6001600160a01b031660009081526079602052604090205490565b6000607a8281548110612c5a57612c5a615586565b600091825260209091200154600160a01b90046001600160401b031692915050565b6001600160a01b03828116600090815260796020526040808220928416825281206001830154919291600160801b90046001600160401b031680612cec5760405162461bcd60e51b81526020600482015260076024820152661393d7d0d2105360ca1b6044820152606401610d19565b60018201546001600160401b03828116600160801b9092041614612d415760405162461bcd60e51b815260206004820152600c60248201526b1112519197d25397d0d2105360a21b6044820152606401610d19565b95945050505050565b6000612d5582612c2a565b90506000612d6284612c2a565b905080821115612d8357612d768382612fe5565b612d8090836153c9565b91505b6000612d906002846155e8565b9050612d9c858261427b565b612da681846153c9565b9250612dda856001600160a01b03166000908152607960205260409020600101805467ffffffffffffffff60801b19169055565b607154612df0906001600160a01b0316846142e0565b612df98461437c565b5050505050565b600080612e0e612037612576565b6040805161018081018252825481526001830154602082015260028301549181019190915260038201546001600160401b038082166060840152600160401b80830482166080850152600160801b808404831660a0860152600160c01b93849004831660c0860152600486015480841660e0870152918204831661010086015281048216610120850152919091041661014082018190526005909201546101608201529150612ebf57600091505090565b606554610140820151439161b2fa91612ee1916001600160401b0316906155fc565b6001600160401b0316612ef4919061556e565b1015612f0257600191505090565b600091505090565b6001600160401b0316600090815260766020526040902090565b6001600160a01b0382166000908152607960205260409020612f468284614422565b60010180546001600160401b03909216600160401b0267ffffffffffffffff60401b1990921691909117905550565b612f7e816119a6565b612f9a5760405162461bcd60e51b8152600401610d199061538f565b6000612fa582611a58565b6001600160401b03161461112e5760405162461bcd60e51b8152602060048201526007602482015266125397d0d2105360ca1b6044820152606401610d19565b6001600160a01b03821660009081526079602052604081208054808411156130425760405162461bcd60e51b815260206004820152601060248201526f544f4f5f4c4954544c455f5354414b4560801b6044820152606401610d19565b600061304e85836153c9565b858455905061305d86826142e0565b60408051838152602081018790526001600160a01b03881691600080516020615ade833981519152910160405180910390a295945050505050565b3360009081526074602052604090205460ff16806130b85750607e5460ff165b6130d45760405162461bcd60e51b8152600401610d1990615368565b60335460ff16156130f75760405162461bcd60e51b8152600401610d1990615312565b61310082612f75565b612acf828261427b565b3360009081526074602052604090205460ff168061312a5750607e5460ff165b6131465760405162461bcd60e51b8152600401610d1990615368565b60335460ff16156131695760405162461bcd60e51b8152600401610d1990615312565b613172336119a6565b1561318f5760405162461bcd60e51b8152600401610d1990615627565b613198336126ff565b156131d85760405162461bcd60e51b815260206004820152601060248201526f5354414b45525f49535f5a4f4d42494560801b6044820152606401610d19565b6131e06111dc565b8110156132225760405162461bcd60e51b815260206004820152601060248201526f4e4f545f454e4f5547485f5354414b4560801b6044820152606401610d19565b61112e3382614602565b60008161323a60018561564f565b6001600160401b03161415613252575060675461286b565b600061325d84612f0a565b60030154600160401b90046001600160401b031690508085101561328557505060675461286b565b6000604051806101400160405280600162ffffff1681526020016201e05b62ffffff1681526020016201f7d162ffffff1681526020016201389162ffffff168152602001620329e162ffffff1681526020016201be4362ffffff1681526020016204cb8c62ffffff1681526020016201fbc462ffffff16815260200162036d3262ffffff1681526020016202797362ffffff1681525090506000604051806101400160405280600162ffffff1681526020016201c03062ffffff1681526020016201b69962ffffff16815260200161fde262ffffff168152602001620265c662ffffff16815260200162013b8e62ffffff168152602001620329e162ffffff1681526020016201389162ffffff1681526020016201f7d162ffffff1681526020016201537562ffffff168152509050600083886133c291906153c9565b6065549091506000906001600160401b03166133df83600a61559c565b6133e991906155e8565b905060006133f8600a836155e8565b61340390600261575b565b9050600085613413600a85615767565b600a811061342357613423615586565b60200201516134379062ffffff168361559c565b9050600085613447600a86615767565b600a811061345757613457615586565b602002015161346b9062ffffff16836155e8565b905080613476575060015b80606754613484919061559c565b9c9b505050505050505050505050565b6020810151600090815b602002015192915050565b600060016134bf61014087016101208801615405565b60038111156134d0576134d06153e0565b14806134fe575060026134eb61014087016101208801615405565b60038111156134fc576134fc6153e0565b145b61353d5760405162461bcd60e51b815260206004820152601060248201526f4241445f41465445525f53544154555360801b6044820152606401610d19565b613545614ee4565b61354e85612763565b6060820152606a54604080516221048360e21b815290516001600160a01b03909216916284120c91600480820192602092909190829003018186803b15801561359657600080fd5b505afa1580156135aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906135ce919061577b565b81526060810151516135e0878661475d565b1461361f5760405162461bcd60e51b815260206004820152600f60248201526e0a0a48aacbea6a882a88abe9082a69608b1b6044820152606401610d19565b600061363661140636899003890160a08a01615521565b9050600061364c611406368a90038a018a615521565b9050806001600160401b0316826001600160401b031610156136a25760405162461bcd60e51b815260206004820152600f60248201526e494e424f585f4241434b574152445360881b6044820152606401610d19565b806001600160401b0316826001600160401b03161415613748576136d36136ce368a90038a018a615521565b6147b7565b6001600160401b03166136f16136ce368b90038b0160a08c01615521565b6001600160401b031610156137485760405162461bcd60e51b815260206004820152601a60248201527f494e424f585f504f535f494e5f4d53475f4241434b57415244530000000000006044820152606401610d19565b600261375c6101408a016101208b01615405565b600381111561376d5761376d6153e0565b14806137965750600061378b6136ce368b90038b0160a08c01615521565b6001600160401b0316115b156137a957816137a581615794565b9250505b82516001600160401b03831611156137f45760405162461bcd60e51b815260206004820152600e60248201526d12539093d617d41054d517d1539160921b6044820152606401610d19565b6001600160401b0382161561389c57606a546001600160a01b03166316bf557961381f60018561564f565b6040516001600160e01b031960e084901b1681526001600160401b03909116600482015260240160206040518083038186803b15801561385e57600080fd5b505afa158015613872573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613896919061577b565b60e08401525b506138b690506138b1368890038801886157fa565b6147c6565b60408201526065546138d1906001600160401b0316436155fc565b6001600160401b0390811660c0830152606082015161012001511615801560a08301526139185761390a81606001516101200151612f0a565b600501546080820152613928565b6060810151610160015160808201525b6139478160a00151826080015183604001518460e00151606854614865565b915082821480613955575082155b6139985760405162461bcd60e51b81526020600482015260146024820152730aa9c8ab0a08a86a88a88be9c9e888abe9082a6960631b6044820152606401610d19565b6139e06139ac8760a001836000015161475d565b6139bd836040015143606854613e1a565b6139d46139cf368b90038b018b6157fa565b6148d2565b888560c00151876148fc565b602082015260006139ef612576565b6139fa9060016155fc565b90506000613a0787612f0a565b9050613a138183614950565b613a2083602001516149c1565b50508181606001516101600151613a35612576565b6001600160401b03167f4f4caa9e67fb994e349dd35d1ad0ce23053d4323f83ce11dc817b5435031d09684604001518a8660e001516068548860000151604051613a839594939291906158f5565b60405180910390a450949350505050565b80608001516001600160401b031643101561112e5760405162461bcd60e51b815260206004820152600f60248201526e4245464f52455f444541444c494e4560881b6044820152606401610d19565b8060a001516001600160401b031643101561112e5760405162461bcd60e51b815260206004820152601060248201526f10d212531117d513d3d7d49150d1539560821b6044820152606401610d19565b6000613b3e84612f0a565b9050613b4a8383614af8565b816002015414613b8b5760405162461bcd60e51b815260206004820152600c60248201526b434f4e4649524d5f4441544160a01b6044820152606401610d19565b606b54604051630502677360e51b815260048101849052602481018590526001600160a01b039091169063a04cee6090604401600060405180830381600087803b158015613bd857600080fd5b505af1158015613bec573d6000803e3d6000fd5b50506075805467ffffffffffffffff19166001600160401b03881617905550613c1890508460016155fc565b6075805467ffffffffffffffff60401b1916600160401b6001600160401b03938416021790556040805185815260208101859052918616917f22ef0479a7ff660660d1c2fe35f1b632cf31675c2d9378db8cec95b00d8ffa3c91015b60405180910390a250505050565b6001600160a01b0381166000908152607b60205260408120805490829055607c80548291908490613cb49084906153c9565b909155505060408051828152600060208201526001600160a01b038516917fa740af14c56e4e04a617b1de1eb20de73270decbaaead14f142aabf3038e5ae2910160405180910390a292915050565b60758054600160401b90046001600160401b0316906008613d2383615794565b91906101000a8154816001600160401b0302191690836001600160401b0316021790555050565b6000607a8281548110613d5f57613d5f615586565b906000526020600020019050919050565b60408051600280825260608201835260009283929190602083019080368337019050508551909150613db290613dad8660005b6020020151614b14565b614b88565b81600081518110613dc557613dc5615586565b6020908102919091010152613de68560016020020151613dad866001613da3565b81600181518110613df957613df9615586565b602002602001018181525050612d416000846001600160401b031683614cac565b6040805160208101859052908101839052606081018290526000906080015b6040516020818303038152906040528051906020012090509392505050565b606e546000906001600160a01b03166314eab5e78535898989613e7e60208f018f615057565b8e6001602002016020810190613e949190615057565b8a8a6040518963ffffffff1660e01b8152600401613eb9989796959493929190615957565b602060405180830381600087803b158015613ed357600080fd5b505af1158015613ee7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613f0b9190615a07565b98975050505050505050565b6001600160a01b038116600090815260796020526040812090613f426075546001600160401b031690565b9050613f4e818461281b565b15613f835760018201546001600160401b03828116600160401b9092041614613f7957613f79615558565b613f838184613fc7565b8154613f8f84826142e0565b613f9884614cc3565b60408051828152600060208201526001600160a01b03861691600080516020615ade8339815191529101613c74565b6001600160401b03821660009081526077602090815260408083206001600160a01b038516845290915290205460ff166140135760405162461bcd60e51b8152600401610d199061538f565b6001600160401b03821660009081526077602090815260408083206001600160a01b03851684529091528120805460ff1916905561405083612f0a565b600381018054919250600160c01b9091046001600160401b031690601861407683615a24565b91906101000a8154816001600160401b0302191690836001600160401b031602179055505060006001600160401b0316836001600160401b03161115610dc45760038101546140cd906001600160401b0316612f0a565b60040180546001600160401b03169060006140e783615a24565b91906101000a8154816001600160401b0302191690836001600160401b0316021790555050505050565b607a8054614121906001906153c9565b8154811061413157614131615586565b90600052602060002001607a828154811061414e5761414e615586565b600091825260209091208254910180546001600160a01b039092166001600160a01b031983168117825592546001600160e01b0319909216909217600160a01b918290046001600160401b0316909102179055607a8054806141b2576141b2615a47565b600082815260209020810160001990810180546001600160e01b031916905501905550565b80607a83815481106141eb576141eb615586565b9060005260206000200160000160146101000a8154816001600160401b0302191690836001600160401b031602179055505050565b60007fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b546001600160a01b0316919050565b60007f2b1dbce74324248c222f0ec2d5ed7bd323cfc425b336f0253c5ccfda7265546d614244565b6001600160a01b0382166000908152607960205260408120805490916142a1848361556e565b80845560408051848152602081018390529192506001600160a01b03871691600080516020615ade833981519152910160405180910390a25050505050565b6001600160a01b0382166000908152607b602052604081205490614304838361556e565b6001600160a01b0385166000908152607b60205260408120829055607c8054929350859290919061433690849061556e565b909155505060408051838152602081018390526001600160a01b038616917fa740af14c56e4e04a617b1de1eb20de73270decbaaead14f142aabf3038e5ae29101613c74565b6001600160a01b03808216600081815260796020908152604080832081518083019092529381526001808501546001600160401b03600160401b9091048116938301938452607a8054928301815590945290517ff0440771a29e57e18c66727944770b82cc77924aef333c927ce6bdd2cdb3ae0390910180549251909316600160a01b026001600160e01b031990921694169390931792909217909155612acf82614cc3565b6001600160401b03821660009081526077602090815260408083206001600160a01b038516845290915290205460ff161561446f5760405162461bcd60e51b8152600401610d1990615627565b6001600160401b03821660009081526077602090815260408083206001600160a01b03851684529091528120805460ff191660011790556144af83612f0a565b6003810154909150600160401b90046001600160401b03166144fd5760405162461bcd60e51b81526020600482015260076024820152664e4f5f4e4f444560c81b6044820152606401610d19565b6003810154600160c01b90046001600160401b031661451d8160016155fc565b6003830180546001600160c01b0316600160c01b6001600160401b039384160217905584161561152c576003820154600090614561906001600160401b0316612f0a565b6004810180549192506001600160401b0390911690600061458183615794565b91906101000a8154816001600160401b0302191690836001600160401b0316021790555050816001600160401b031660001415612df957606554612df9906145d2906001600160401b0316436155fc565b60038301805467ffffffffffffffff60801b1916600160801b6001600160401b0390931692909202919091179055565b6078805460018082019092557f8dc6fb69531d98d70dc0420e638d2dfd04e09e1ec783ede9aac77da9c5a0dac4810180546001600160a01b0319166001600160a01b0386169081179091556040805160a0810182528581526001600160401b038085166020808401918252607580548416858701908152600060608701818152608088018c81528a835260798652898320985189559551978c0180549351915196519888166001600160801b031990941693909317600160401b918816919091021768ffffffffffffffffff60801b1916600160801b9587169590950260ff60c01b191694909417600160c01b9615158702179055805484168352607782528583208784528252858320805460ff191690991790985587546001600160c01b031643909316909302919091179095558151948552840185905291929091600080516020615ade833981519152910160405180910390a2505050565b600061477661477136859003850185615521565b614b14565b8261478760a0860160808701615405565b60405160200161479993929190615a5d565b60405160208183030381529060405280519060200120905092915050565b6020810151600090600161349e565b60006147d0614f35565b825160200151819060038111156147e9576147e96153e0565b908160038111156147fc576147fc6153e0565b90525060208381015181015190820190600381111561481d5761481d6153e0565b90816003811115614830576148306153e0565b90525061483b614f53565b83515181526020808501515190820152604084015161485d9083908390613d70565b949350505050565b60008086614874576000614877565b60015b6040516001600160f81b031960f883901b1660208201526021810188905260418101879052606181018690526081810185905290915060a1016040516020818303038152906040528051906020012091505095945050505050565b600061284c6148e8836020015160000151614e69565b6020840151516148f790614e74565b614af8565b614904614e80565b61490c614e80565b96875250602086019490945260408501929092526001600160401b0390811660608501529081166080840181905260a0840152431661014083015261016082015290565b6004820154600160401b90046001600160401b03166149915760048201805467ffffffffffffffff60401b1916600160401b436001600160401b0316021790555b600490910180546001600160401b03909216600160801b0267ffffffffffffffff60801b19909216919091179055565b60758054600160801b90046001600160401b03169060106149e183615794565b825461010092830a6001600160401b03818102199092169282160291909117909255607554600160801b908190048316600090815260766020908152604091829020875181559087015160018201559086015160028201556060860151600382018054608089015160a08a015160c08b01519489166001600160801b031993841617600160401b928a168302176001600160801b03908116918a1688026001600160c01b0390811692909217600160c01b968b1687021790945560e08b0151600487018054998d01516101208e01516101408f0151938d169b9096169a909a17998b169093029890981790931691881690950290911617939094169093029190911790556101609092015160059092019190915550565b6040805160208101849052908101829052600090606001614799565b8051805160209182015192820151805190830151604080516c23b637b130b61039ba30ba329d60991b81870152602d810194909452604d8401959095526001600160c01b031960c092831b8116606d850152911b1660758201528251808203605d018152607d909101909252815191012090565b60006001836003811115614b9e57614b9e6153e0565b1415614be4576040516b213637b1b59039ba30ba329d60a11b6020820152602c8101839052604c015b60405160208183030381529060405280519060200120905061284c565b6002836003811115614bf857614bf86153e0565b1415614c2e5760405174213637b1b59039ba30ba32961032b93937b932b21d60591b602082015260358101839052605501614bc7565b6003836003811115614c4257614c426153e0565b1415614c715760405174213637b1b59039ba30ba3296103a37b7903330b91d60591b6020820152603501614bc7565b60405162461bcd60e51b815260206004820152601060248201526f4241445f424c4f434b5f53544154555360801b6044820152606401610d19565b6000838383604051602001613e3993929190615a9b565b6001600160a01b03811660009081526079602052604090206001810154600160c01b900460ff16614d065760405162461bcd60e51b8152600401610d199061538f565b600180820154607880546001600160401b03909216929091614d2891906153c9565b81548110614d3857614d38615586565b600091825260209091200154607880546001600160a01b03909216916001600160401b038416908110614d6d57614d6d615586565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555080607960006078846001600160401b031681548110614dbc57614dbc615586565b6000918252602080832091909101546001600160a01b031683528201929092526040019020600101805467ffffffffffffffff19166001600160401b03929092169190911790556078805480614e1457614e14615a47565b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b03949094168152607990935250506040812090815560010180546001600160c81b0319169055565b80516000908161349e565b8051600090600161349e565b6040805161018081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101829052610140810182905261016081019190915290565b60405180610100016040528060008152602001614eff614e80565b815260006020820152604001614f13614e80565b8152600060208201819052604082018190526060820181905260809091015290565b60405180604001604052806002906020820280368337509192915050565b60405180604001604052806002905b614f6a614f80565b815260200190600190039081614f625790505090565b6040518060400160405280614f93614f35565b8152602001614fa0614f35565b905290565b80356001600160a01b0381168114614fbc57600080fd5b919050565b600080600060608486031215614fd657600080fd5b83359250614fe660208501614fa5565b9150614ff460408501614fa5565b90509250925092565b6001600160401b038116811461112e57600080fd5b6000806040838503121561502557600080fd5b823561503081614ffd565b946020939093013593505050565b60006020828403121561505057600080fd5b5035919050565b60006020828403121561506957600080fd5b61286b82614fa5565b60008060008385036101a081121561508957600080fd5b6101608082121561509957600080fd5b9496948701359550505061018085013592915050565b6000602082840312156150c157600080fd5b813561286b81614ffd565b600080604083850312156150df57600080fd5b50508035926020909101359150565b806040810183101561284c57600080fd5b600080600080600080600080610280898b03121561511c57600080fd5b6151268a8a6150ee565b97506151358a60408b016150ee565b96506151448a60808b016150ee565b95506101c089018a81111561515857600080fd5b60c08a0195503561516881614ffd565b93506101e089013592506151808a6102008b016150ee565b91506151908a6102408b016150ee565b90509295985092959890939650565b60006101808201905082518252602083015160208301526040830151604083015260608301516151da60608401826001600160401b03169052565b5060808301516151f560808401826001600160401b03169052565b5060a083015161521060a08401826001600160401b03169052565b5060c083015161522b60c08401826001600160401b03169052565b5060e083015161524660e08401826001600160401b03169052565b50610100838101516001600160401b038116848301525050610120838101516001600160401b038116848301525050610140838101516001600160401b03811684830152505061016092830151919092015290565b600080604083850312156152ae57600080fd5b82356152b981614ffd565b91506152c760208401614fa5565b90509250929050565b6000806000606084860312156152e557600080fd5b8335925060208401356152f781614ffd565b9150604084013561530781614ffd565b809150509250925092565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b60208082526012908201527115d2125511531254d517d11254d05093115160721b604082015260600190565b6020808252600d908201526c2727aa2fab20a624a220aa27a960991b604082015260600190565b6020808252600a90820152691393d517d4d51052d15160b21b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6000828210156153db576153db6153b3565b500390565b634e487b7160e01b600052602160045260246000fd5b803560048110614fbc57600080fd5b60006020828403121561541757600080fd5b61286b826153f6565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b038111828210171561545857615458615420565b60405290565b60006080828403121561547057600080fd5b615478615436565b905082601f83011261548957600080fd5b615491615436565b8060408401858111156154a357600080fd5b845b818110156154bd5780358452602093840193016154a5565b5081845285605f8601126154d057600080fd5b6154d8615436565b925082915060808501868111156154ee57600080fd5b8082101561551357813561550181614ffd565b845260209384019391909101906154ee565b505060208301525092915050565b60006080828403121561553357600080fd5b61286b838361545e565b6000600019821415615551576155516153b3565b5060010190565b634e487b7160e01b600052600160045260246000fd5b60008219821115615581576155816153b3565b500190565b634e487b7160e01b600052603260045260246000fd5b60008160001904831182151516156155b6576155b66153b3565b500290565b6000816155ca576155ca6153b3565b506000190190565b634e487b7160e01b600052601260045260246000fd5b6000826155f7576155f76155d2565b500490565b60006001600160401b0380831681851680830382111561561e5761561e6153b3565b01949350505050565b6020808252600e908201526d1053149150511657d4d51052d15160921b604082015260600190565b60006001600160401b038381169083168181101561566f5761566f6153b3565b039392505050565b600181815b808511156156b2578160001904821115615698576156986153b3565b808516156156a557918102915b93841c939080029061567c565b509250929050565b6000826156c95750600161284c565b816156d65750600061284c565b81600181146156ec57600281146156f657615712565b600191505061284c565b60ff841115615707576157076153b3565b50506001821b61284c565b5060208310610133831016604e8410600b8410161715615735575081810a61284c565b61573f8383615677565b8060001904821115615753576157536153b3565b029392505050565b600061286b83836156ba565b600082615776576157766155d2565b500690565b60006020828403121561578d57600080fd5b5051919050565b60006001600160401b03808316818114156157b1576157b16153b3565b6001019392505050565b600060a082840312156157cd57600080fd5b6157d5615436565b90506157e1838361545e565b81526157ef608083016153f6565b602082015292915050565b6000610160828403121561580d57600080fd5b604051606081018181106001600160401b038211171561582f5761582f615420565b60405261583c84846157bb565b815261584b8460a085016157bb565b602082015261014083013561585f81614ffd565b60408201529392505050565b604081833760006040838101828152908301915b6002811015612df957823561589381614ffd565b6001600160401b031682526020928301929091019060010161587f565b600481106158ce57634e487b7160e01b600052602160045260246000fd5b9052565b6158dc828261586b565b6158e8608082016153f6565b610dc460808401826158b0565b8581526101e0810161590a60208301876158d2565b61591a60c0830160a088016158d2565b61014086013561592981614ffd565b6001600160401b03166101608301526101808201949094526101a08101929092526101c09091015292915050565b888152610200810160208083018a60005b6002811015615993576159838361597e846153f6565b6158b0565b9183019190830190600101615968565b50505050606082018860005b60028110156159c5576159b2838361586b565b608092830192919091019060010161599f565b5050506001600160401b03969096166101608201526001600160a01b03948516610180820152929093166101a08301526101c08201526101e001529392505050565b600060208284031215615a1957600080fd5b815161286b81614ffd565b60006001600160401b03821680615a3d57615a3d6153b3565b6000190192915050565b634e487b7160e01b600052603160045260246000fd5b838152826020820152600060048310615a8657634e487b7160e01b600052602160045260246000fd5b5060f89190911b604082015260410192915050565b83815260006020848184015260408301845182860160005b82811015615acf57815184529284019290840190600101615ab3565b50919897505050505050505056feebd093d389ab57f3566918d2c379a2b4d9539e8eb95efad9d5e465457833fde6a2646970667358221220e9f0d1b062f1e902a4d431634c8a3454dcbad676a601e68d456c42b4c64680d764736f6c63430008090033";

type RollupUserLogicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RollupUserLogicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RollupUserLogic__factory extends ContractFactory {
  constructor(...args: RollupUserLogicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "RollupUserLogic";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RollupUserLogic> {
    return super.deploy(overrides || {}) as Promise<RollupUserLogic>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): RollupUserLogic {
    return super.attach(address) as RollupUserLogic;
  }
  connect(signer: Signer): RollupUserLogic__factory {
    return super.connect(signer) as RollupUserLogic__factory;
  }
  static readonly contractName: "RollupUserLogic";
  public readonly contractName: "RollupUserLogic";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RollupUserLogicInterface {
    return new utils.Interface(_abi) as RollupUserLogicInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RollupUserLogic {
    return new Contract(address, _abi, signerOrProvider) as RollupUserLogic;
  }
}
