/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SequencerInboxStub,
  SequencerInboxStubInterface,
  ISequencerInbox,
} from "../SequencerInboxStub";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IBridge",
        name: "bridge_",
        type: "address",
      },
      {
        internalType: "address",
        name: "sequencer_",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "delayBlocks",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "futureBlocks",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "delaySeconds",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "futureSeconds",
            type: "uint256",
          },
        ],
        internalType: "struct ISequencerInbox.MaxTimeVariation",
        name: "maxTimeVariation_",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyInit",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "AlreadyValidDASKeyset",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "stored",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "received",
        type: "uint256",
      },
    ],
    name: "BadSequencerNumber",
    type: "error",
  },
  {
    inputs: [],
    name: "DataNotAuthenticated",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "dataLength",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxDataLength",
        type: "uint256",
      },
    ],
    name: "DataTooLarge",
    type: "error",
  },
  {
    inputs: [],
    name: "DelayedBackwards",
    type: "error",
  },
  {
    inputs: [],
    name: "DelayedTooFar",
    type: "error",
  },
  {
    inputs: [],
    name: "ForceIncludeBlockTooSoon",
    type: "error",
  },
  {
    inputs: [],
    name: "ForceIncludeTimeTooSoon",
    type: "error",
  },
  {
    inputs: [],
    name: "HadZeroInit",
    type: "error",
  },
  {
    inputs: [],
    name: "IncorrectMessagePreimage",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "NoSuchKeyset",
    type: "error",
  },
  {
    inputs: [],
    name: "NotBatchPoster",
    type: "error",
  },
  {
    inputs: [],
    name: "NotForked",
    type: "error",
  },
  {
    inputs: [],
    name: "NotOrigin",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "NotOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "messageNum",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "InboxMessageDelivered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "messageNum",
        type: "uint256",
      },
    ],
    name: "InboxMessageDeliveredFromOrigin",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "keysetHash",
        type: "bytes32",
      },
    ],
    name: "InvalidateKeyset",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "OwnerFunctionCalled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "batchSequenceNumber",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "SequencerBatchData",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "batchSequenceNumber",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "beforeAcc",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "afterAcc",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "delayedAcc",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "afterDelayedMessagesRead",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint64",
            name: "minTimestamp",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "maxTimestamp",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "minBlockNumber",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "maxBlockNumber",
            type: "uint64",
          },
        ],
        indexed: false,
        internalType: "struct ISequencerInbox.TimeBounds",
        name: "timeBounds",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "enum ISequencerInbox.BatchDataLocation",
        name: "dataLocation",
        type: "uint8",
      },
    ],
    name: "SequencerBatchDelivered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "keysetHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "keysetBytes",
        type: "bytes",
      },
    ],
    name: "SetValidKeyset",
    type: "event",
  },
  {
    inputs: [],
    name: "DATA_AUTHENTICATED_FLAG",
    outputs: [
      {
        internalType: "bytes1",
        name: "",
        type: "bytes1",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "HEADER_LENGTH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
    ],
    name: "addInitMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "sequenceNumber",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "afterDelayedMessagesRead",
        type: "uint256",
      },
      {
        internalType: "contract IGasRefunder",
        name: "gasRefunder",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "prevMessageCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newMessageCount",
        type: "uint256",
      },
    ],
    name: "addSequencerL2Batch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "sequenceNumber",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "afterDelayedMessagesRead",
        type: "uint256",
      },
      {
        internalType: "contract IGasRefunder",
        name: "gasRefunder",
        type: "address",
      },
    ],
    name: "addSequencerL2BatchFromOrigin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "sequenceNumber",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "afterDelayedMessagesRead",
        type: "uint256",
      },
      {
        internalType: "contract IGasRefunder",
        name: "gasRefunder",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "prevMessageCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newMessageCount",
        type: "uint256",
      },
    ],
    name: "addSequencerL2BatchFromOrigin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "batchCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bridge",
    outputs: [
      {
        internalType: "contract IBridge",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "dasKeySetInfo",
    outputs: [
      {
        internalType: "bool",
        name: "isValidKeyset",
        type: "bool",
      },
      {
        internalType: "uint64",
        name: "creationBlock",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_totalDelayedMessagesRead",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "kind",
        type: "uint8",
      },
      {
        internalType: "uint64[2]",
        name: "l1BlockAndTime",
        type: "uint64[2]",
      },
      {
        internalType: "uint256",
        name: "baseFeeL1",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "messageDataHash",
        type: "bytes32",
      },
    ],
    name: "forceInclusion",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "ksHash",
        type: "bytes32",
      },
    ],
    name: "getKeysetCreationBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "inboxAccs",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IBridge",
        name: "bridge_",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "delayBlocks",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "futureBlocks",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "delaySeconds",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "futureSeconds",
            type: "uint256",
          },
        ],
        internalType: "struct ISequencerInbox.MaxTimeVariation",
        name: "maxTimeVariation_",
        type: "tuple",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "ksHash",
        type: "bytes32",
      },
    ],
    name: "invalidateKeysetHash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isBatchPoster",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "ksHash",
        type: "bytes32",
      },
    ],
    name: "isValidKeysetHash",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxTimeVariation",
    outputs: [
      {
        internalType: "uint256",
        name: "delayBlocks",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "futureBlocks",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "delaySeconds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "futureSeconds",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeDelayAfterFork",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rollup",
    outputs: [
      {
        internalType: "contract IOwnable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isBatchPoster_",
        type: "bool",
      },
    ],
    name: "setIsBatchPoster",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "delayBlocks",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "futureBlocks",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "delaySeconds",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "futureSeconds",
            type: "uint256",
          },
        ],
        internalType: "struct ISequencerInbox.MaxTimeVariation",
        name: "maxTimeVariation_",
        type: "tuple",
      },
    ],
    name: "setMaxTimeVariation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "keysetBytes",
        type: "bytes",
      },
    ],
    name: "setValidKeyset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalDelayedMessagesRead",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c0604052306080524660a0523480156200001957600080fd5b506040516200266f3803806200266f8339810160408190526200003c91620000bf565b600180546001600160a01b039485166001600160a01b03199182161782556002805490911633179055815160045560208083015160055560408084015160065560609093015160075592909316600090815260039092529020805460ff1916909117905562000172565b6001600160a01b0381168114620000bc57600080fd5b50565b600080600083850360c0811215620000d657600080fd5b8451620000e381620000a6565b6020860151909450620000f681620000a6565b92506080603f19820112156200010b57600080fd5b50604051608081016001600160401b03811182821017156200013d57634e487b7160e01b600052604160045260246000fd5b806040525060408501518152606085015160208201526080850151604082015260a08501516060820152809150509250925092565b60805160a0516124d7620001986000396000610e920152600061043701526124d76000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c806384420860116100c3578063d9dd67ab1161007c578063d9dd67ab14610306578063e0bc972914610319578063e5a358c81461032c578063e78cea9214610350578063ebea461d14610363578063f19815781461039957600080fd5b806384420860146102875780638f111f3c1461029a57806396cc5c78146102ad578063b31761f8146102b5578063cb23bcb5146102c8578063d1ce8da8146102f357600080fd5b80636633ae85116101155780636633ae85146101d05780636e7df3e7146101e35780636f12b0c9146101f6578063715ea34b1461020957806371c3e6fe1461025b5780637fa3a40e1461027e57600080fd5b806306f13056146101525780631637be481461016d5780631f7a92b2146101a0578063258f0495146101b557806327957a49146101c8575b600080fd5b61015a6103ac565b6040519081526020015b60405180910390f35b61019061017b366004611d1e565b60009081526008602052604090205460ff1690565b6040519015158152602001610164565b6101b36101ae366004611d4f565b61042c565b005b61015a6101c3366004611d1e565b6105e4565b61015a602881565b6101b36101de366004611d1e565b61064d565b6101b36101f1366004611d9e565b610838565b6101b3610204366004611e1f565b61093e565b61023c610217366004611d1e565b60086020526000908152604090205460ff81169061010090046001600160401b031682565b6040805192151583526001600160401b03909116602083015201610164565b610190610269366004611e89565b60036020526000908152604090205460ff1681565b61015a60005481565b6101b3610295366004611d1e565b610b2d565b6101b36102a8366004611ead565b610c80565b6101b3610e8f565b6101b36102c3366004611f29565b610f06565b6002546102db906001600160a01b031681565b6040516001600160a01b039091168152602001610164565b6101b3610301366004611f9c565b611006565b61015a610314366004611d1e565b61124e565b6101b3610327366004611ead565b6112d1565b610337600160fe1b81565b6040516001600160f81b03199091168152602001610164565b6001546102db906001600160a01b031681565b6004546005546006546007546103799392919084565b604080519485526020850193909352918301526060820152608001610164565b6101b36103a7366004611fdd565b611426565b600154604080516221048360e21b815290516000926001600160a01b0316916284120c916004808301926020929190829003018186803b1580156103ef57600080fd5b505afa158015610403573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610427919061204d565b905090565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156104bf5760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b60648201526084015b60405180910390fd5b6001546001600160a01b0316156104e957604051633bcd329760e21b815260040160405180910390fd5b6001600160a01b03821661051057604051631ad0f74360e01b815260040160405180910390fd5b600180546001600160a01b0319166001600160a01b0384169081179091556040805163cb23bcb560e01b8152905163cb23bcb591600480820192602092909190829003018186803b15801561056457600080fd5b505afa158015610578573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059c9190612066565b600280546001600160a01b0319166001600160a01b03929092169190911790558035600490815560208201356005556040820135600655606082013560075581905b50505050565b600081815260086020908152604080832081518083019092525460ff81161515825261010090046001600160401b03169181018290529061063a5760405162f20c5d60e01b8152600481018490526024016104b6565b602001516001600160401b031692915050565b60008160405160200161066291815260200190565b60408051808303601f190181529082905260015481516020830120638db5993b60e01b8452600b6004850152600060248501819052604485019190915291935090916001600160a01b0390911690638db5993b90606401602060405180830381600087803b1580156106d357600080fd5b505af11580156106e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070b919061204d565b905080156107525760405162461bcd60e51b81526020600482015260146024820152731053149150511657d111531056515117d253925560621b60448201526064016104b6565b807fff64905f73a67fb594e0f940a8075a860db489ad991e032f48c81123eb52d60b8360405161078291906120af565b60405180910390a26000806107976001611809565b915091506000806000806107b18660016000806001611835565b9350935093509350836000146107fc5760405162461bcd60e51b815260206004820152601060248201526f1053149150511657d4d15457d253925560821b60448201526064016104b6565b808385600080516020612462833981519152856000548a600260405161082594939291906120e2565b60405180910390a4505050505050505050565b600260009054906101000a90046001600160a01b03166001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561088657600080fd5b505afa15801561089a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108be9190612066565b6001600160a01b0316336001600160a01b03161461090057600254604051631194af8760e11b81526104b69133916001600160a01b0390911690600401612156565b6001600160a01b038216600090815260036020526040808220805460ff19168415151790555160019160008051602061248283398151915291a25050565b8060005a90503332146109645760405163feb3d07160e01b815260040160405180910390fd5b3360009081526003602052604090205460ff1661099457604051632dd9fc9760e01b815260040160405180910390fd5b6000806109a2888888611ad2565b909250905060008080806109b9868b8d8480611835565b93509350935093508c84146109eb5760405163ac7411c960e01b815260048101859052602481018e90526044016104b6565b80838e600080516020612462833981519152856000548a6000604051610a1494939291906120e2565b60405180910390a4505050506001600160a01b038416159150610b249050573660006020610a4383601f612186565b610a4d919061219e565b9050610200610a5d6002836122a4565b610a67919061219e565b610a728260066122b3565b610a7c9190612186565b610a869084612186565b9250333214610a9457600091505b836001600160a01b031663e3db8a49335a610aaf90876122d2565b856040518463ffffffff1660e01b8152600401610ace939291906122e9565b602060405180830381600087803b158015610ae857600080fd5b505af1158015610afc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b20919061230a565b5050505b50505050505050565b600260009054906101000a90046001600160a01b03166001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610b7b57600080fd5b505afa158015610b8f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb39190612066565b6001600160a01b0316336001600160a01b031614610bf557600254604051631194af8760e11b81526104b69133916001600160a01b0390911690600401612156565b60008181526008602052604090205460ff16610c265760405162f20c5d60e01b8152600481018290526024016104b6565b600081815260086020526040808220805460ff191690555182917f5cb4218b272fd214168ac43e90fb4d05d6c36f0b17ffb4c2dd07c234d744eb2a91a260405160039060008051602061248283398151915290600090a250565b8260005a9050333214610ca65760405163feb3d07160e01b815260040160405180910390fd5b3360009081526003602052604090205460ff16610cd657604051632dd9fc9760e01b815260040160405180910390fd5b600080610ce48a8a8a611ad2565b90925090508a81838b8b8a8a6000808080610d0289888a8989611835565b93509350935093508a8414158015610d1c57506000198b14155b15610d445760405163ac7411c960e01b815260048101859052602481018c90526044016104b6565b808385600080516020612462833981519152856000548f6000604051610d6d94939291906120e2565b60405180910390a4505050506001600160a01b038b16159850610e84975050505050505050573660006020610da383601f612186565b610dad919061219e565b9050610200610dbd6002836122a4565b610dc7919061219e565b610dd28260066122b3565b610ddc9190612186565b610de69084612186565b9250333214610df457600091505b836001600160a01b031663e3db8a49335a610e0f90876122d2565b856040518463ffffffff1660e01b8152600401610e2e939291906122e9565b602060405180830381600087803b158015610e4857600080fd5b505af1158015610e5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e80919061230a565b5050505b505050505050505050565b467f00000000000000000000000000000000000000000000000000000000000000001415610ed057604051635180dd8360e11b815260040160405180910390fd5b60408051608081018252600180825260208201819052918101829052606001819052600481905560058190556006819055600755565b600260009054906101000a90046001600160a01b03166001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610f5457600080fd5b505afa158015610f68573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f8c9190612066565b6001600160a01b0316336001600160a01b031614610fce57600254604051631194af8760e11b81526104b69133916001600160a01b0390911690600401612156565b80516004556020810151600555604080820151600655606082015160075551600090600080516020612482833981519152908290a250565b600260009054906101000a90046001600160a01b03166001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561105457600080fd5b505afa158015611068573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061108c9190612066565b6001600160a01b0316336001600160a01b0316146110ce57600254604051631194af8760e11b81526104b69133916001600160a01b0390911690600401612156565b600082826040516110e0929190612327565b604051908190038120607f60f91b6020830152602182015260410160408051601f1981840301815291905280516020909101209050600160ff1b81186201000083106111645760405162461bcd60e51b81526020600482015260136024820152726b657973657420697320746f6f206c6172676560681b60448201526064016104b6565b60008181526008602052604090205460ff161561119757604051637d17eeed60e11b8152600481018290526024016104b6565b60408051808201825260018152436001600160401b0390811660208084019182526000868152600890915284902092518354915168ffffffffffffffffff1990921690151568ffffffffffffffff0019161761010091909216021790555181907fabca9b7986bc22ad0160eb0cb88ae75411eacfba4052af0b457a9335ef655722906112269087908790612337565b60405180910390a260405160029060008051602061248283398151915290600090a250505050565b6001546040516316bf557960e01b8152600481018390526000916001600160a01b0316906316bf55799060240160206040518083038186803b15801561129357600080fd5b505afa1580156112a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112cb919061204d565b92915050565b8260005a3360009081526003602052604090205490915060ff1615801561130357506002546001600160a01b03163314155b1561132157604051632dd9fc9760e01b815260040160405180910390fd5b60008061132f8a8a8a611ad2565b909250905060008b82848b8a8a86808061134c8787838888611835565b929c5090945092509050888a1480159061136857506000198914155b156113905760405163ac7411c960e01b8152600481018b9052602481018a90526044016104b6565b80838b600080516020612462833981519152856000548d60016040516113b994939291906120e2565b60405180910390a4505050505050505050807ffe325ca1efe4c5c1062c981c3ee74b781debe4ea9440306a96d2a55759c66c208c8c6040516113fc929190612337565b60405180910390a25050506001600160a01b03821615610e84573660006020610da383601f612186565b600054861161144857604051633eb9f37d60e11b815260040160405180910390fd5b60006114f8868461145c602089018961237c565b61146c60408a0160208b0161237c565b61147760018d6122d2565b6040805160f89690961b6001600160f81b03191660208088019190915260609590951b6001600160601b031916602187015260c093841b6001600160c01b031990811660358801529290931b909116603d85015260458401526065830188905260858084018790528151808503909101815260a59093019052815191012090565b600454909150439061150d602088018861237c565b6001600160401b03166115209190612186565b1061153e5760405163ad3515d960e01b815260040160405180910390fd5b6006544290611553604088016020890161237c565b6001600160401b03166115669190612186565b106115845760405163c76d17e560e01b815260040160405180910390fd5b6000600188111561161c576001546001600160a01b031663d5719dc26115ab60028b6122d2565b6040518263ffffffff1660e01b81526004016115c991815260200190565b60206040518083038186803b1580156115e157600080fd5b505afa1580156115f5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611619919061204d565b90505b60408051602080820184905281830185905282518083038401815260609092019092528051910120600180546001600160a01b03169063d5719dc290611662908c6122d2565b6040518263ffffffff1660e01b815260040161168091815260200190565b60206040518083038186803b15801561169857600080fd5b505afa1580156116ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116d0919061204d565b146116ee576040516313947fd760e01b815260040160405180910390fd5b6000806116fa8a611809565b9150915060008a90506000600160009054906101000a90046001600160a01b03166001600160a01b0316635fca4a166040518163ffffffff1660e01b815260040160206040518083038186803b15801561175357600080fd5b505afa158015611767573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061178b919061204d565b9050600080548d8361179d9190612186565b6117a791906122d2565b90506000806000806117bd898860008989611835565b9350935093509350808385600080516020612462833981519152856000548d60026040516117ee94939291906120e2565b60405180910390a45050505050505050505050505050505050565b6000611813611cf7565b60008061181f85611c45565b8151602090920191909120969095509350505050565b60008060008060005488101561185e57604051633eb9f37d60e11b815260040160405180910390fd5b600160009054906101000a90046001600160a01b03166001600160a01b031663eca067ad6040518163ffffffff1660e01b815260040160206040518083038186803b1580156118ac57600080fd5b505afa1580156118c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118e4919061204d565b8811156119045760405163925f8bd360e01b815260040160405180910390fd5b60015460405163432cc52b60e11b8152600481018b9052602481018a905260448101889052606481018790526001600160a01b03909116906386598a5690608401608060405180830381600087803b15801561195f57600080fd5b505af1158015611973573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061199791906123a5565b60008c9055929650909450925090508615611ac6576040805142602082015233606081901b6001600160601b03191692820192909252605481018b90526074810186905248609482015260009060b40160408051808303601f190181529082905260015481516020830120637a88b10760e01b84526001600160a01b0386811660048601526024850191909152919350600092911690637a88b10790604401602060405180830381600087803b158015611a5057600080fd5b505af1158015611a64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a88919061204d565b9050807fff64905f73a67fb594e0f940a8075a860db489ad991e032f48c81123eb52d60b83604051611aba91906120af565b60405180910390a25050505b95509550955095915050565b6000611adc611cf7565b84846000611aeb826028612186565b90506201cccc811115611b1d57604051634634691b60e01b8152600481018290526201cccc60248201526044016104b6565b8115801590611b555750600160fe1b808484600081611b3e57611b3e612366565b9050013560f81c60f81b166001600160f81b031916145b15611b7357604051631f97007f60e01b815260040160405180910390fd5b60218210801590611ba1575082826000818110611b9257611b92612366565b90910135600160ff1b16151590505b15611bf5576000611bb66021600185876123db565b611bbf91612405565b60008181526008602052604090205490915060ff16611bf35760405162f20c5d60e01b8152600481018290526024016104b6565b505b600080611c0188611c45565b915091506000828b8b604051602001611c1c93929190612423565b60408051808303601f1901815291905280516020909101209b919a509098505050505050505050565b6060611c4f611cf7565b6000611c59611cec565b90506000816000015182602001518360400151846060015188604051602001611cc195949392919060c095861b6001600160c01b0319908116825294861b8516600882015292851b8416601084015290841b8316601883015290921b16602082015260280190565b60405160208183030381529060405290506028815114611ce357611ce361244b565b94909350915050565b611cf4611cf7565b90565b60408051608081018252600080825260208201819052918101829052606081019190915290565b600060208284031215611d3057600080fd5b5035919050565b6001600160a01b0381168114611d4c57600080fd5b50565b60008082840360a0811215611d6357600080fd5b8335611d6e81611d37565b92506080601f1982011215611d8257600080fd5b506020830190509250929050565b8015158114611d4c57600080fd5b60008060408385031215611db157600080fd5b8235611dbc81611d37565b91506020830135611dcc81611d90565b809150509250929050565b60008083601f840112611de957600080fd5b5081356001600160401b03811115611e0057600080fd5b602083019150836020828501011115611e1857600080fd5b9250929050565b600080600080600060808688031215611e3757600080fd5b8535945060208601356001600160401b03811115611e5457600080fd5b611e6088828901611dd7565b909550935050604086013591506060860135611e7b81611d37565b809150509295509295909350565b600060208284031215611e9b57600080fd5b8135611ea681611d37565b9392505050565b600080600080600080600060c0888a031215611ec857600080fd5b8735965060208801356001600160401b03811115611ee557600080fd5b611ef18a828b01611dd7565b909750955050604088013593506060880135611f0c81611d37565b969995985093969295946080840135945060a09093013592915050565b600060808284031215611f3b57600080fd5b604051608081018181106001600160401b0382111715611f6b57634e487b7160e01b600052604160045260246000fd5b8060405250823581526020830135602082015260408301356040820152606083013560608201528091505092915050565b60008060208385031215611faf57600080fd5b82356001600160401b03811115611fc557600080fd5b611fd185828601611dd7565b90969095509350505050565b60008060008060008060e08789031215611ff657600080fd5b86359550602087013560ff8116811461200e57600080fd5b9450608087018881111561202157600080fd5b60408801945035925060a087013561203881611d37565b8092505060c087013590509295509295509295565b60006020828403121561205f57600080fd5b5051919050565b60006020828403121561207857600080fd5b8151611ea681611d37565b60005b8381101561209e578181015183820152602001612086565b838111156105de5750506000910152565b60208152600082518060208401526120ce816040850160208701612083565b601f01601f19169190910160400192915050565b600060e0820190508582528460208301526001600160401b038085511660408401528060208601511660608401528060408601511660808401528060608601511660a0840152506003831061214757634e487b7160e01b600052602160045260246000fd5b8260c083015295945050505050565b6001600160a01b0392831681529116602082015260400190565b634e487b7160e01b600052601160045260246000fd5b6000821982111561219957612199612170565b500190565b6000826121bb57634e487b7160e01b600052601260045260246000fd5b500490565b600181815b808511156121fb5781600019048211156121e1576121e1612170565b808516156121ee57918102915b93841c93908002906121c5565b509250929050565b600082612212575060016112cb565b8161221f575060006112cb565b8160018114612235576002811461223f5761225b565b60019150506112cb565b60ff84111561225057612250612170565b50506001821b6112cb565b5060208310610133831016604e8410600b841016171561227e575081810a6112cb565b61228883836121c0565b806000190482111561229c5761229c612170565b029392505050565b6000611ea660ff841683612203565b60008160001904831182151516156122cd576122cd612170565b500290565b6000828210156122e4576122e4612170565b500390565b6001600160a01b039390931683526020830191909152604082015260600190565b60006020828403121561231c57600080fd5b8151611ea681611d90565b8183823760009101908152919050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561238e57600080fd5b81356001600160401b0381168114611ea657600080fd5b600080600080608085870312156123bb57600080fd5b505082516020840151604085015160609095015191969095509092509050565b600080858511156123eb57600080fd5b838611156123f857600080fd5b5050820193919092039150565b803560208310156112cb57600019602084900360031b1b1692915050565b60008451612435818460208901612083565b8201838582376000930192835250909392505050565b634e487b7160e01b600052600160045260246000fdfe7394f4a19a13c7b92b5bb71033245305946ef78452f7b4986ac1390b5df4ebd7ea8787f128d10b2cc0317b0c3960f9ad447f7f6c1ed189db1083ccffd20f456ea264697066735822122076022f88cdccc7bfb17967963bdbc0223728077415d76f0c2cea12777085452464736f6c63430008090033";

type SequencerInboxStubConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SequencerInboxStubConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SequencerInboxStub__factory extends ContractFactory {
  constructor(...args: SequencerInboxStubConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "SequencerInboxStub";
  }

  deploy(
    bridge_: string,
    sequencer_: string,
    maxTimeVariation_: ISequencerInbox.MaxTimeVariationStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SequencerInboxStub> {
    return super.deploy(
      bridge_,
      sequencer_,
      maxTimeVariation_,
      overrides || {}
    ) as Promise<SequencerInboxStub>;
  }
  getDeployTransaction(
    bridge_: string,
    sequencer_: string,
    maxTimeVariation_: ISequencerInbox.MaxTimeVariationStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      bridge_,
      sequencer_,
      maxTimeVariation_,
      overrides || {}
    );
  }
  attach(address: string): SequencerInboxStub {
    return super.attach(address) as SequencerInboxStub;
  }
  connect(signer: Signer): SequencerInboxStub__factory {
    return super.connect(signer) as SequencerInboxStub__factory;
  }
  static readonly contractName: "SequencerInboxStub";
  public readonly contractName: "SequencerInboxStub";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SequencerInboxStubInterface {
    return new utils.Interface(_abi) as SequencerInboxStubInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SequencerInboxStub {
    return new Contract(address, _abi, signerOrProvider) as SequencerInboxStub;
  }
}
