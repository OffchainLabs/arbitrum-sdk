/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  L2CustomGatewayToken,
  L2CustomGatewayTokenInterface,
} from "../L2CustomGatewayToken";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "bridgeBurn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "bridgeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimals_",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "l2Gateway_",
        type: "address",
      },
      {
        internalType: "address",
        name: "l1Counterpart_",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "l1Address",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "l2Gateway",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "transferAndCall",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50600054610100900460ff1615808015620000335750600054600160ff909116105b8062000063575062000050306200013d60201b620007ef1760201c565b15801562000063575060005460ff166001145b620000cb5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b6000805460ff191660011790558015620000ef576000805461ff0019166101001790555b801562000136576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b506200014c565b6001600160a01b03163b151590565b611985806200015c6000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c80637ecebe00116100ad578063a9059cbb11610071578063a9059cbb14610284578063c2eeeebd14610297578063c820f146146102aa578063d505accf146102bd578063dd62ed3e146102d057600080fd5b80637ecebe00146102185780638c2a993e1461022b5780638fa74a0e1461023e57806395d89b4114610269578063a457c2d71461027157600080fd5b80633644e515116100f45780633644e515146101ac57806339509351146101b45780634000aea0146101c757806370a08231146101da57806374f4f5471461020357600080fd5b806306fdde0314610131578063095ea7b31461014f57806318160ddd1461017257806323b872dd14610184578063313ce56714610197575b600080fd5b6101396102e3565b604051610146919061139c565b60405180910390f35b61016261015d3660046113d2565b610375565b6040519015158152602001610146565b6035545b604051908152602001610146565b6101626101923660046113fc565b61038f565b60385460405160ff9091168152602001610146565b6101766103b3565b6101626101c23660046113d2565b6103c2565b6101626101d53660046114c4565b6103e4565b6101766101e836600461152f565b6001600160a01b031660009081526033602052604090205490565b6102166102113660046113d2565b61045a565b005b61017661022636600461152f565b61049b565b6102166102393660046113d2565b6104b9565b60cc54610251906001600160a01b031681565b6040516001600160a01b039091168152602001610146565b6101396104ed565b61016261027f3660046113d2565b6104fc565b6101626102923660046113d2565b610577565b60cd54610251906001600160a01b031681565b6102166102b836600461157b565b610585565b6102166102cb366004611611565b610660565b6101766102de36600461167b565b6107c4565b6060603680546102f2906116ae565b80601f016020809104026020016040519081016040528092919081815260200182805461031e906116ae565b801561036b5780601f106103405761010080835404028352916020019161036b565b820191906000526020600020905b81548152906001019060200180831161034e57829003601f168201915b5050505050905090565b6000336103838185856107fe565b60019150505b92915050565b60003361039d858285610923565b6103a885858561099d565b506001949350505050565b60006103bd610b36565b905090565b6000336103838185856103d583836107c4565b6103df91906116e2565b6107fe565b60006103f08484610577565b50836001600160a01b0316336001600160a01b03167fe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c168585604051610436929190611703565b60405180910390a3833b1561045057610450848484610bb1565b5060019392505050565b60cc546001600160a01b0316331461048d5760405162461bcd60e51b815260040161048490611724565b60405180910390fd5b6104978282610c1b565b5050565b6001600160a01b038116600090815260996020526040812054610389565b60cc546001600160a01b031633146104e35760405162461bcd60e51b815260040161048490611724565b6104978282610d3a565b6060603780546102f2906116ae565b6000338161050a82866107c4565b90508381101561056a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610484565b6103a882868684036107fe565b60003361038381858561099d565b600054610100900460ff16158080156105a55750600054600160ff909116105b806105c657506105b4306107ef565b1580156105c6575060005460ff166001145b6105e25760405162461bcd60e51b81526004016104849061174a565b6000805460ff191660011790558015610605576000805461ff0019166101001790555b6106128686868686610de9565b8015610658576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050565b834211156106b05760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606401610484565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886106df8c610ebb565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e001604051602081830303815290604052805190602001209050600061073a82610ee3565b9050600061074a82878787610f31565b9050896001600160a01b0316816001600160a01b0316146107ad5760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152606401610484565b6107b88a8a8a6107fe565b50505050505050505050565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b6001600160a01b03163b151590565b6001600160a01b0383166108605760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610484565b6001600160a01b0382166108c15760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610484565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b600061092f84846107c4565b90506000198114610997578181101561098a5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610484565b61099784848484036107fe565b50505050565b6001600160a01b038316610a015760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610484565b6001600160a01b038216610a635760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610484565b6001600160a01b03831660009081526033602052604090205481811015610adb5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610484565b6001600160a01b03808516600081815260336020526040808220868603905592861680825290839020805486019055915160008051602061193083398151915290610b299086815260200190565b60405180910390a3610997565b60006103bd7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f610b6560655490565b6066546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b604051635260769b60e11b815283906001600160a01b0382169063a4c0ed3690610be390339087908790600401611798565b600060405180830381600087803b158015610bfd57600080fd5b505af1158015610c11573d6000803e3d6000fd5b5050505050505050565b6001600160a01b038216610c7b5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610484565b6001600160a01b03821660009081526033602052604090205481811015610cef5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610484565b6001600160a01b03831660008181526033602090815260408083208686039055603580548790039055518581529192916000805160206119308339815191529101610916565b505050565b6001600160a01b038216610d905760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610484565b8060356000828254610da291906116e2565b90915550506001600160a01b038216600081815260336020908152604080832080548601905551848152600080516020611930833981519152910160405180910390a35050565b6001600160a01b038216610e315760405162461bcd60e51b815260206004820152600f60248201526e494e56414c49445f4741544557415960881b6044820152606401610484565b60cc546001600160a01b031615610e795760405162461bcd60e51b815260206004820152600c60248201526b1053149150511657d253925560a21b6044820152606401610484565b60cc80546001600160a01b038085166001600160a01b03199283161790925560cd805492841692909116919091179055610eb4858585610f59565b5050505050565b6001600160a01b03811660009081526099602052604090208054600181018255905b50919050565b6000610389610ef0610b36565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6000806000610f4287878787611046565b91509150610f4f81611100565b5095945050505050565b600054610100900460ff1615808015610f795750600054600160ff909116105b80610f9a5750610f88306107ef565b158015610f9a575060005460ff166001145b610fb65760405162461bcd60e51b81526004016104849061174a565b6000805460ff191660011790558015610fd9576000805461ff0019166101001790555b610fe284611248565b610fec8484611292565b6038805460ff191660ff84161790558015610997576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150505050565b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b0383111561107357506000905060036110f7565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156110c7573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166110f0576000600192509250506110f7565b9150600090505b94509492505050565b6000816004811115611114576111146117c8565b0361111c5750565b6001816004811115611130576111306117c8565b036111785760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b6044820152606401610484565b600281600481111561118c5761118c6117c8565b036111d95760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610484565b60038160048111156111ed576111ed6117c8565b036112455760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610484565b50565b600054610100900460ff1661126f5760405162461bcd60e51b8152600401610484906117de565b61124581604051806040016040528060018152602001603160f81b8152506112c3565b600054610100900460ff166112b95760405162461bcd60e51b8152600401610484906117de565b6104978282611304565b600054610100900460ff166112ea5760405162461bcd60e51b8152600401610484906117de565b815160209283012081519190920120606591909155606655565b600054610100900460ff1661132b5760405162461bcd60e51b8152600401610484906117de565b6036611337838261186f565b506037611344828261186f565b50506038805460ff1916601217905550565b6000815180845260005b8181101561137c57602081850181015186830182015201611360565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006113af6020830184611356565b9392505050565b80356001600160a01b03811681146113cd57600080fd5b919050565b600080604083850312156113e557600080fd5b6113ee836113b6565b946020939093013593505050565b60008060006060848603121561141157600080fd5b61141a846113b6565b9250611428602085016113b6565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561146957611469611438565b604051601f8501601f19908116603f0116810190828211818310171561149157611491611438565b816040528093508581528686860111156114aa57600080fd5b858560208301376000602087830101525050509392505050565b6000806000606084860312156114d957600080fd5b6114e2846113b6565b925060208401359150604084013567ffffffffffffffff81111561150557600080fd5b8401601f8101861361151657600080fd5b6115258682356020840161144e565b9150509250925092565b60006020828403121561154157600080fd5b6113af826113b6565b600082601f83011261155b57600080fd5b6113af8383356020850161144e565b803560ff811681146113cd57600080fd5b600080600080600060a0868803121561159357600080fd5b853567ffffffffffffffff808211156115ab57600080fd5b6115b789838a0161154a565b965060208801359150808211156115cd57600080fd5b506115da8882890161154a565b9450506115e96040870161156a565b92506115f7606087016113b6565b9150611605608087016113b6565b90509295509295909350565b600080600080600080600060e0888a03121561162c57600080fd5b611635886113b6565b9650611643602089016113b6565b9550604088013594506060880135935061165f6080890161156a565b925060a0880135915060c0880135905092959891949750929550565b6000806040838503121561168e57600080fd5b611697836113b6565b91506116a5602084016113b6565b90509250929050565b600181811c908216806116c257607f821691505b602082108103610edd57634e487b7160e01b600052602260045260246000fd5b8082018082111561038957634e487b7160e01b600052601160045260246000fd5b82815260406020820152600061171c6040830184611356565b949350505050565b6020808252600c908201526b4f4e4c595f4741544557415960a01b604082015260600190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60018060a01b03841681528260208201526060604082015260006117bf6060830184611356565b95945050505050565b634e487b7160e01b600052602160045260246000fd5b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b601f821115610d3557600081815260208120601f850160051c810160208610156118505750805b601f850160051c820191505b818110156106585782815560010161185c565b815167ffffffffffffffff81111561188957611889611438565b61189d8161189784546116ae565b84611829565b602080601f8311600181146118d257600084156118ba5750858301515b600019600386901b1c1916600185901b178555610658565b600085815260208120601f198616915b82811015611901578886015182559484019460019091019084016118e2565b508582101561191f5787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212209a3c742ea0e5dd5d8fbcc7f970f0f2d43a262683aec96099bff10990697385f864736f6c63430008100033";

type L2CustomGatewayTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: L2CustomGatewayTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class L2CustomGatewayToken__factory extends ContractFactory {
  constructor(...args: L2CustomGatewayTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "L2CustomGatewayToken";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<L2CustomGatewayToken> {
    return super.deploy(overrides || {}) as Promise<L2CustomGatewayToken>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): L2CustomGatewayToken {
    return super.attach(address) as L2CustomGatewayToken;
  }
  connect(signer: Signer): L2CustomGatewayToken__factory {
    return super.connect(signer) as L2CustomGatewayToken__factory;
  }
  static readonly contractName: "L2CustomGatewayToken";
  public readonly contractName: "L2CustomGatewayToken";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): L2CustomGatewayTokenInterface {
    return new utils.Interface(_abi) as L2CustomGatewayTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): L2CustomGatewayToken {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as L2CustomGatewayToken;
  }
}
