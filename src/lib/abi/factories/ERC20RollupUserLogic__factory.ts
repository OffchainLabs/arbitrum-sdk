/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC20RollupUserLogic,
  ERC20RollupUserLogicInterface,
} from "../ERC20RollupUserLogic";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "nodeNum",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "blockHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "sendRoot",
        type: "bytes32",
      },
    ],
    name: "NodeConfirmed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "nodeNum",
        type: "uint64",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "parentNodeHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "nodeHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "executionHash",
        type: "bytes32",
      },
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes32[2]",
                    name: "bytes32Vals",
                    type: "bytes32[2]",
                  },
                  {
                    internalType: "uint64[2]",
                    name: "u64Vals",
                    type: "uint64[2]",
                  },
                ],
                internalType: "struct GlobalState",
                name: "globalState",
                type: "tuple",
              },
              {
                internalType: "enum MachineStatus",
                name: "machineStatus",
                type: "uint8",
              },
            ],
            internalType: "struct RollupLib.ExecutionState",
            name: "beforeState",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes32[2]",
                    name: "bytes32Vals",
                    type: "bytes32[2]",
                  },
                  {
                    internalType: "uint64[2]",
                    name: "u64Vals",
                    type: "uint64[2]",
                  },
                ],
                internalType: "struct GlobalState",
                name: "globalState",
                type: "tuple",
              },
              {
                internalType: "enum MachineStatus",
                name: "machineStatus",
                type: "uint8",
              },
            ],
            internalType: "struct RollupLib.ExecutionState",
            name: "afterState",
            type: "tuple",
          },
          {
            internalType: "uint64",
            name: "numBlocks",
            type: "uint64",
          },
        ],
        indexed: false,
        internalType: "struct RollupLib.Assertion",
        name: "assertion",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "afterInboxBatchAcc",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "wasmModuleRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "inboxMaxCount",
        type: "uint256",
      },
    ],
    name: "NodeCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "nodeNum",
        type: "uint64",
      },
    ],
    name: "NodeRejected",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "challengeIndex",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "asserter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "challenger",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "challengedNode",
        type: "uint64",
      },
    ],
    name: "RollupChallengeStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "machineHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
    ],
    name: "RollupInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "UpgradedSecondary",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "initialBalance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "finalBalance",
        type: "uint256",
      },
    ],
    name: "UserStakeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "initialBalance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "finalBalance",
        type: "uint256",
      },
    ],
    name: "UserWithdrawableFundsUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "VALIDATOR_AFK_BLOCKS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_stakerMap",
    outputs: [
      {
        internalType: "uint256",
        name: "amountStaked",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "index",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "latestStakedNode",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "currentChallenge",
        type: "uint64",
      },
      {
        internalType: "bool",
        name: "isStaked",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "stakerAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "addToDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "amountStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseStake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bridge",
    outputs: [
      {
        internalType: "contract IBridge",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "chainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "challengeManager",
    outputs: [
      {
        internalType: "contract IChallengeManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "challengeIndex",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "winningStaker",
        type: "address",
      },
      {
        internalType: "address",
        name: "losingStaker",
        type: "address",
      },
    ],
    name: "completeChallenge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "blockHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "sendRoot",
        type: "bytes32",
      },
    ],
    name: "confirmNextNode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "confirmPeriodBlocks",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "nodeNum",
        type: "uint64",
      },
    ],
    name: "countStakedZombies",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "nodeNum",
        type: "uint64",
      },
    ],
    name: "countZombiesStakedOnChildren",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[2]",
        name: "stakers",
        type: "address[2]",
      },
      {
        internalType: "uint64[2]",
        name: "nodeNums",
        type: "uint64[2]",
      },
      {
        internalType: "enum MachineStatus[2]",
        name: "machineStatuses",
        type: "uint8[2]",
      },
      {
        components: [
          {
            internalType: "bytes32[2]",
            name: "bytes32Vals",
            type: "bytes32[2]",
          },
          {
            internalType: "uint64[2]",
            name: "u64Vals",
            type: "uint64[2]",
          },
        ],
        internalType: "struct GlobalState[2]",
        name: "globalStates",
        type: "tuple[2]",
      },
      {
        internalType: "uint64",
        name: "numBlocks",
        type: "uint64",
      },
      {
        internalType: "bytes32",
        name: "secondExecutionHash",
        type: "bytes32",
      },
      {
        internalType: "uint256[2]",
        name: "proposedBlocks",
        type: "uint256[2]",
      },
      {
        internalType: "bytes32[2]",
        name: "wasmModuleRoots",
        type: "bytes32[2]",
      },
    ],
    name: "createChallenge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "currentChallenge",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentRequiredStake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "extraChallengeTimeBlocks",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "firstUnresolvedNode",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "nodeNum",
        type: "uint64",
      },
    ],
    name: "getNode",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "stateHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "challengeHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "confirmData",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "prevNum",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "deadlineBlock",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "noChildConfirmedBeforeBlock",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "stakerCount",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "childStakerCount",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "firstChildBlock",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "latestChildNumber",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "createdAtBlock",
            type: "uint64",
          },
          {
            internalType: "bytes32",
            name: "nodeHash",
            type: "bytes32",
          },
        ],
        internalType: "struct Node",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "getStaker",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amountStaked",
            type: "uint256",
          },
          {
            internalType: "uint64",
            name: "index",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "latestStakedNode",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "currentChallenge",
            type: "uint64",
          },
          {
            internalType: "bool",
            name: "isStaked",
            type: "bool",
          },
        ],
        internalType: "struct IRollupCore.Staker",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "stakerNum",
        type: "uint64",
      },
    ],
    name: "getStakerAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "inbox",
    outputs: [
      {
        internalType: "contract IInbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_stakeToken",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isERC20Enabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "isStaked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "isStakedOnLatestConfirmed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isValidator",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "isZombie",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastStakeBlock",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestConfirmed",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestNodeCreated",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "latestStakedNode",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "loserStakeEscrow",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minimumAssertionPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "nodeNum",
        type: "uint64",
      },
      {
        internalType: "bytes32",
        name: "nodeHash",
        type: "bytes32",
      },
    ],
    name: "newStakeOnExistingNode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes32[2]",
                    name: "bytes32Vals",
                    type: "bytes32[2]",
                  },
                  {
                    internalType: "uint64[2]",
                    name: "u64Vals",
                    type: "uint64[2]",
                  },
                ],
                internalType: "struct GlobalState",
                name: "globalState",
                type: "tuple",
              },
              {
                internalType: "enum MachineStatus",
                name: "machineStatus",
                type: "uint8",
              },
            ],
            internalType: "struct RollupLib.ExecutionState",
            name: "beforeState",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes32[2]",
                    name: "bytes32Vals",
                    type: "bytes32[2]",
                  },
                  {
                    internalType: "uint64[2]",
                    name: "u64Vals",
                    type: "uint64[2]",
                  },
                ],
                internalType: "struct GlobalState",
                name: "globalState",
                type: "tuple",
              },
              {
                internalType: "enum MachineStatus",
                name: "machineStatus",
                type: "uint8",
              },
            ],
            internalType: "struct RollupLib.ExecutionState",
            name: "afterState",
            type: "tuple",
          },
          {
            internalType: "uint64",
            name: "numBlocks",
            type: "uint64",
          },
        ],
        internalType: "struct RollupLib.Assertion",
        name: "assertion",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "expectedNodeHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "prevNodeInboxMaxCount",
        type: "uint256",
      },
    ],
    name: "newStakeOnNewNode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "nodeNum",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "nodeHasStaker",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "outbox",
    outputs: [
      {
        internalType: "contract IOutbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "target",
        type: "uint256",
      },
    ],
    name: "reduceDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "stakerAddress",
        type: "address",
      },
    ],
    name: "rejectNextNode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "startIndex",
        type: "uint256",
      },
    ],
    name: "removeOldZombies",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeWhitelistAfterFork",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeWhitelistAfterValidatorAfk",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "zombieNum",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxNodes",
        type: "uint256",
      },
    ],
    name: "removeZombie",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "nodeNum",
        type: "uint256",
      },
    ],
    name: "requireUnresolved",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "requireUnresolvedExists",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "firstUnresolvedNodeNum",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "latestCreatedNode",
        type: "uint64",
      },
    ],
    name: "requiredStake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "stakerAddress",
        type: "address",
      },
    ],
    name: "returnOldDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rollupDeploymentBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rollupEventInbox",
    outputs: [
      {
        internalType: "contract IRollupEventInbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sequencerInbox",
    outputs: [
      {
        internalType: "contract ISequencerInbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "nodeNum",
        type: "uint64",
      },
      {
        internalType: "bytes32",
        name: "nodeHash",
        type: "bytes32",
      },
    ],
    name: "stakeOnExistingNode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes32[2]",
                    name: "bytes32Vals",
                    type: "bytes32[2]",
                  },
                  {
                    internalType: "uint64[2]",
                    name: "u64Vals",
                    type: "uint64[2]",
                  },
                ],
                internalType: "struct GlobalState",
                name: "globalState",
                type: "tuple",
              },
              {
                internalType: "enum MachineStatus",
                name: "machineStatus",
                type: "uint8",
              },
            ],
            internalType: "struct RollupLib.ExecutionState",
            name: "beforeState",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes32[2]",
                    name: "bytes32Vals",
                    type: "bytes32[2]",
                  },
                  {
                    internalType: "uint64[2]",
                    name: "u64Vals",
                    type: "uint64[2]",
                  },
                ],
                internalType: "struct GlobalState",
                name: "globalState",
                type: "tuple",
              },
              {
                internalType: "enum MachineStatus",
                name: "machineStatus",
                type: "uint8",
              },
            ],
            internalType: "struct RollupLib.ExecutionState",
            name: "afterState",
            type: "tuple",
          },
          {
            internalType: "uint64",
            name: "numBlocks",
            type: "uint64",
          },
        ],
        internalType: "struct RollupLib.Assertion",
        name: "assertion",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "expectedNodeHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "prevNodeInboxMaxCount",
        type: "uint256",
      },
    ],
    name: "stakeOnNewNode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakeToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakerCount",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalWithdrawableFunds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "validatorUtils",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "validatorWalletCreator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "validatorWhitelistDisabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wasmModuleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawStakerFunds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "withdrawableFunds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "zombieNum",
        type: "uint256",
      },
    ],
    name: "zombieAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "zombieCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "zombieNum",
        type: "uint256",
      },
    ],
    name: "zombieLatestStakedNode",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c0604052306080524660a05234801561001857600080fd5b5060805160a0516159c66200004d6000396000612527015260008181610e5a01528181612596015261261b01526159c66000f3fe608060405234801561001057600080fd5b506004361061037c5760003560e01c8063771b2f97116101d5578063cd205fda11610105578063e8bd4922116100a8578063e8bd492214610886578063edfd03ed1461090e578063ee35f32714610921578063ef40a67014610934578063f065de3f14610947578063f33e1fac1461095a578063f3f0a03e1461096d578063facd743b14610980578063fb0e722b146109a357600080fd5b8063cd205fda14610804578063ce11e6ab14610817578063d01e66021461082a578063d29a4e271461083d578063d735e21d14610850578063dcd030aa14610858578063dff697871461086b578063e78cea921461087357600080fd5b806392c8134c1161017857806392c8134c146106725780639a8a059214610692578063a23c44b11461069b578063aa38a6e71461079d578063aa65af48146107b0578063b0ebedc7146107c3578063bc45e0ae146107d6578063c2c2e68e146107e9578063c4d66de8146107f157600080fd5b8063771b2f97146105ee578063773d984e146106085780637ba9534a1461061b5780637e2d2155146106235780638640ce5f146106365780638da5cb5b1461064e5780638ee1a1261461065657806391c657e81461065f57600080fd5b806354ce8961116102b057806367425daf1161025357806367425daf1461056257806369fd251c1461056a5780636b94c33b1461057d5780636d08d0a2146105905780636ddd3744146105a35780636f57644e146105b657806371ef232c146105c95780637427be51146105d257806376e7e23b146105e557600080fd5b806354ce8961146104ea5780635c617e94146104fd5780635c975abb146105105780635eb405d51461051b578063613739191461052e5780636177fd181461053657806363721d6b1461054957806365f7f80d1461055157600080fd5b80632b2af0ab116103235780632b2af0ab1461043b5780632e7acfa61461044e5780632f30cabd146104795780633e96576e146104a257806345e38b64146104b55780634ceccfe5146104be5780634d26732d146104c757806351ed6a30146104cf57806352d1902d146104e257600080fd5b8063014cc92c14610381578063023a96fe146103b15780630357aa49146103c457806312ab3d3b146103d957806318baaab9146103f65780631aeb55a0146103fe5780631b1689e9146104115780631e83d30f14610428575b600080fd5b606f54610394906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b606e54610394906001600160a01b031681565b6103d76103d2366004614d8c565b6109b6565b005b607e546103e69060ff1681565b60405190151581526020016103a8565b6103d7610a89565b6103d761040c366004614ddd565b610b03565b61041a607d5481565b6040519081526020016103a8565b6103d7610436366004614e09565b610cc3565b6103d7610449366004614e09565b610d4d565b606554610461906001600160401b031681565b6040516001600160401b0390911681526020016103a8565b61041a610487366004614e22565b6001600160a01b03166000908152607b602052604090205490565b6104616104b0366004614e22565b610df1565b61041a60735481565b61041a61b2fa81565b61041a610e1f565b607254610394906001600160a01b031681565b61041a610e4d565b6103d76104f8366004614e56565b610f12565b61041a61050b366004614e8d565b611175565b60335460ff166103e6565b6103d7610529366004614eaa565b6111c9565b61041a6114ec565b6103e6610544366004614e22565b61161e565b607a5461041a565b6075546001600160401b0316610461565b6103d7611646565b610461610578366004614e22565b6116d0565b6103d761058b366004614e22565b6116fe565b61041a61059e366004614e8d565b611a36565b6103946105b1366004614e8d565b611ab9565b6103d76105c4366004614edd565b611af2565b61041a607c5481565b6103d76105e0366004614e22565b612124565b61041a60675481565b60655461046190600160401b90046001600160401b031681565b6103d7610616366004614f7d565b6121ee565b61046161220a565b6103d7610631366004614eaa565b612220565b607554600160c01b90046001600160401b0316610461565b610394612384565b61041a60685481565b6103e661066d366004614e22565b61238e565b610685610680366004614e8d565b6123f2565b6040516103a89190614fb5565b61041a60665481565b6107486106a9366004614e22565b6040805160a081018252600080825260208201819052918101829052606081018290526080810191909152506001600160a01b0316600090815260796020908152604091829020825160a081018452815481526001909101546001600160401b0380821693830193909352600160401b8104831693820193909352600160801b83049091166060820152600160c01b90910460ff161515608082015290565b6040516103a89190600060a0820190508251825260208301516001600160401b038082166020850152806040860151166040850152806060860151166060850152505060808301511515608083015292915050565b606d54610394906001600160a01b031681565b6103e66107be3660046150b1565b6124aa565b61041a6107d13660046150e6565b6124e1565b607054610394906001600160a01b031681565b6103d7612501565b6103d76107ff366004614e22565b61258b565b6072546001600160a01b031615156103e6565b606b54610394906001600160a01b031681565b610394610838366004614e09565b612749565b6103d761084b366004615128565b61275e565b61046161277b565b6103e6610866366004614e22565b612791565b607854610461565b606a54610394906001600160a01b031681565b6108d6610894366004614e22565b607960205260009081526040902080546001909101546001600160401b0380821691600160401b8104821691600160801b82041690600160c01b900460ff1685565b604080519586526001600160401b0394851660208701529284169285019290925290911660608301521515608082015260a0016103a8565b6103d761091c366004614e09565b6127d4565b606c54610394906001600160a01b031681565b61041a610942366004614e22565b6128bd565b607154610394906001600160a01b031681565b610461610968366004614e09565b6128d8565b6103d761097b366004615167565b61290f565b6103e661098e366004614e22565b60746020526000908152604090205460ff1681565b606954610394906001600160a01b031681565b60335460ff16156109e25760405162461bcd60e51b81526004016109d990615183565b60405180910390fd5b606e546001600160a01b03163314610a2b5760405162461bcd60e51b815260206004820152600c60248201526b2ba927a723afa9a2a72222a960a11b60448201526064016109d9565b610a358282612985565b6001600160401b03168314610a7a5760405162461bcd60e51b815260206004820152600b60248201526a1393d517d25397d0d2105360aa1b60448201526064016109d9565b610a848282612a53565b505050565b607e5460ff1615610aac5760405162461bcd60e51b81526004016109d9906151ad565b610ab4612b09565b610af45760405162461bcd60e51b815260206004820152601160248201527056414c494441544f525f4e4f545f41464b60781b60448201526064016109d9565b607e805460ff19166001179055565b3360009081526074602052604090205460ff1680610b235750607e5460ff165b610b3f5760405162461bcd60e51b81526004016109d9906151d9565b60335460ff1615610b625760405162461bcd60e51b81526004016109d990615183565b610b6b33612791565b610b875760405162461bcd60e51b81526004016109d990615200565b610b8f61277b565b6001600160401b0316826001600160401b031610158015610bc95750610bb361220a565b6001600160401b0316826001600160401b031611155b610c0d5760405162461bcd60e51b81526020600482015260156024820152744e4f44455f4e554d5f4f55545f4f465f52414e474560581b60448201526064016109d9565b6000610c1883612c13565b905081816005015414610c5a5760405162461bcd60e51b815260206004820152600a6024820152694e4f44455f52454f524760b01b60448201526064016109d9565b60038101546001600160401b0316610c7133610df1565b6001600160401b031614610cb95760405162461bcd60e51b815260206004820152600f60248201526e2727aa2fa9aa20a5a2a22fa82922ab60891b60448201526064016109d9565b610a843384612c2d565b3360009081526074602052604090205460ff1680610ce35750607e5460ff165b610cff5760405162461bcd60e51b81526004016109d9906151d9565b60335460ff1615610d225760405162461bcd60e51b81526004016109d990615183565b610d2b33612c7e565b6000610d35610e1f565b905080821015610d43578091505b610a843383612cee565b610d5561277b565b6001600160401b0316811015610d9f5760405162461bcd60e51b815260206004820152600f60248201526e1053149150511657d11150d2511151608a1b60448201526064016109d9565b610da761220a565b6001600160401b0316811115610dee5760405162461bcd60e51b815260206004820152600c60248201526b1113d154d39517d1561254d560a21b60448201526064016109d9565b50565b6001600160a01b0316600090815260796020526040902060010154600160401b90046001600160401b031690565b600080610e2a61277b565b9050610e474382610e3961220a565b6001600160401b0316612da1565b91505090565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610eed5760405162461bcd60e51b815260206004820152603b60248201527f555550534e6f745570677261646561626c653a206d757374206e6f742062652060448201527f63616c6c6564207468726f7567682064656c656761746563616c6c000000000060648201526084016109d9565b507f2b1dbce74324248c222f0ec2d5ed7bd323cfc425b336f0253c5ccfda7265546d90565b3360009081526074602052604090205460ff1680610f325750607e5460ff165b610f4e5760405162461bcd60e51b81526004016109d9906151d9565b60335460ff1615610f715760405162461bcd60e51b81526004016109d990615183565b610f7a33612791565b610f965760405162461bcd60e51b81526004016109d990615200565b6000610fa133610df1565b90506000610fae826123f2565b6101400151610fc6906001600160401b03164361523a565b90506073548110156110075760405162461bcd60e51b815260206004820152600a60248201526954494d455f44454c544160b01b60448201526064016109d9565b600261101b61014087016101208801615276565b600381111561102c5761102c615251565b148061105a57508261104e61104936889003880160a08901615392565b613009565b6001600160401b031610155b6110925760405162461bcd60e51b81526020600482015260096024820152681513d3d7d4d350531360ba1b60448201526064016109d9565b60006110a661016087016101408801614e8d565b6001600160401b0316116110ee5760405162461bcd60e51b815260206004820152600f60248201526e22a6a82a2cafa0a9a9a2a92a24a7a760891b60448201526064016109d9565b600161110060a0870160808801615276565b600381111561111157611111615251565b146111505760405162461bcd60e51b815260206004820152600f60248201526e4241445f505245565f53544154555360881b60448201526064016109d9565b5061115d8482848661301e565b5061116f3361116a61220a565b612c2d565b50505050565b600080611181607a5490565b90506000805b828110156111c15761119c856107be83612749565b156111af57816111ab816153ae565b9250505b806111b9816153ae565b915050611187565b509392505050565b3360009081526074602052604090205460ff16806111e95750607e5460ff165b6112055760405162461bcd60e51b81526004016109d9906151d9565b60335460ff16156112285760405162461bcd60e51b81526004016109d990615183565b611230611646565b600061123a61277b565b9050600061124782612c13565b6040805161018081018252825481526001830154602082015260028301549181019190915260038201546001600160401b038082166060840152600160401b80830482166080850152600160801b808404831660a0860152600160c01b93849004831660c0860152600486015480841660e0870152918204831661010086015281048216610120850152919091041661014082015260058201546101608201529091506112f390613609565b60755460038201546001600160401b03908116911614611315576113156153c9565b600381015460009061132f906001600160401b0316612c13565b6040805161018081018252825481526001830154602082015260028301549181019190915260038201546001600160401b038082166060840152600160401b80830482166080850152600160801b808404831660a0860152600160c01b93849004831660c0860152600486015480841660e0870152918204831661010086015281048216610120850152919091041661014082015260058201546101608201529091506113db90613658565b6113e560006127d4565b60006113f084611175565b6003840154909150600090829061140f906001600160401b0316611a36565b611419919061523a565b6003850154909150600160c01b90046001600160401b0316821061146c5760405162461bcd60e51b815260206004820152600a6024820152694e4f5f5354414b45525360b01b60448201526064016109d9565b600384015461148c908290600160c01b90046001600160401b03166153df565b60048401546001600160401b0316146114d85760405162461bcd60e51b815260206004820152600e60248201526d1393d517d0531317d4d51052d15160921b60448201526064016109d9565b6114e38588886136a8565b50505050505050565b3360009081526074602052604081205460ff168061150c5750607e5460ff165b6115285760405162461bcd60e51b81526004016109d9906151d9565b60335460ff161561154b5760405162461bcd60e51b81526004016109d990615183565b6000611556336137f7565b60725460405163a9059cbb60e01b8152336004820152602481018390529192506001600160a01b03169063a9059cbb90604401602060405180830381600087803b1580156115a357600080fd5b505af11580156115b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115db91906153f7565b6116195760405162461bcd60e51b815260206004820152600f60248201526e1514905394d1915497d19052531151608a1b60448201526064016109d9565b905090565b6001600160a01b0316600090815260796020526040902060010154600160c01b900460ff1690565b600061165061277b565b6001600160401b0316905061166d6075546001600160401b031690565b6001600160401b031681118015611694575061168761220a565b6001600160401b03168111155b610dee5760405162461bcd60e51b815260206004820152600d60248201526c1393d7d553949154d3d3159151609a1b60448201526064016109d9565b6001600160a01b0316600090815260796020526040902060010154600160801b90046001600160401b031690565b3360009081526074602052604090205460ff168061171e5750607e5460ff165b61173a5760405162461bcd60e51b81526004016109d9906151d9565b60335460ff161561175d5760405162461bcd60e51b81526004016109d990615183565b611765611646565b60006117796075546001600160401b031690565b9050600061178561277b565b9050600061179282612c13565b60038101549091506001600160401b03848116911614156119f4576117b684612791565b6117d25760405162461bcd60e51b81526004016109d990615200565b6117ec6117de85610df1565b6001600160401b0316610d4d565b6117f682856124aa565b156118365760405162461bcd60e51b815260206004820152601060248201526f14d51052d15117d3d397d5105491d15560821b60448201526064016109d9565b6040805161018081018252825481526001830154602082015260028301549181019190915260038201546001600160401b038082166060840152600160401b80830482166080850152600160801b808404831660a0860152600160c01b93849004831660c0860152600486015480841660e0870152918204831661010086015281048216610120850152919091041661014082015260058201546101608201526118df90613609565b6119916118eb84612c13565b6040805161018081018252825481526001830154602082015260028301549181019190915260038201546001600160401b038082166060840152600160401b80830482166080850152600160801b808404831660a0860152600160c01b93849004831660c0860152600486015480841660e08701529182048316610100860152810482166101208501529190910416610140820152600590910154610160820152613658565b61199b60006127d4565b6119a482611175565b6003820154600160c01b90046001600160401b0316146119f45760405162461bcd60e51b815260206004820152600b60248201526a4841535f5354414b45525360a81b60448201526064016109d9565b6119fc613878565b6040516001600160401b038316907feaffa3d968707ec919a2fc9f31d5ab2b86c905881ff561725d5a82fc95ad464090600090a250505050565b600080611a42607a5490565b90506000805b828110156111c1576000611a5b826138bf565b80549091506001600160401b03878116600160a01b9092041614801590611a9357508054611a939087906001600160a01b03166124aa565b15611aa65782611aa2816153ae565b9350505b5080611ab1816153ae565b915050611a48565b60006078826001600160401b031681548110611ad757611ad7615419565b6000918252602090912001546001600160a01b031692915050565b3360009081526074602052604090205460ff1680611b125750607e5460ff165b611b2e5760405162461bcd60e51b81526004016109d9906151d9565b60335460ff1615611b515760405162461bcd60e51b81526004016109d990615183565b611b616040880160208901614e8d565b6001600160401b0316611b776020890189614e8d565b6001600160401b031610611bbb5760405162461bcd60e51b815260206004820152600b60248201526a2ba927a723afa7a92222a960a91b60448201526064016109d9565b611bc361220a565b6001600160401b0316611bdc6040890160208a01614e8d565b6001600160401b03161115611c225760405162461bcd60e51b815260206004820152600c60248201526b1393d517d41493d413d4d15160a21b60448201526064016109d9565b611c2f6020880188614e8d565b6001600160401b0316611c4a6075546001600160401b031690565b6001600160401b031610611c945760405162461bcd60e51b81526020600482015260116024820152701053149150511657d0d3d3919254935151607a1b60448201526064016109d9565b6000611cb488825b602002016020810190611caf9190614e8d565b612c13565b90506000611cc3896001611c9c565b600380820154908401549192506001600160401b03918216911614611d165760405162461bcd60e51b81526020600482015260096024820152682224a3232fa82922ab60b91b60448201526064016109d9565b611d358a60005b602002016020810190611d309190614e22565b612c7e565b611d408a6001611d1d565b611d67611d5060208b018b614e8d565b8b60005b6020020160208101906107be9190614e22565b611da85760405162461bcd60e51b815260206004820152601260248201527114d51052d1548c57d393d517d4d51052d15160721b60448201526064016109d9565b611dc3611dbb60408b0160208c01614e8d565b8b6001611d54565b611e045760405162461bcd60e51b815260206004820152601260248201527114d51052d1548c97d393d517d4d51052d15160721b60448201526064016109d9565b604080518082018252611e8591611e7591908b90600290839083908082843760009201829052506040805180820190915292508c9150600290835b82821015611e6b57611e5c60808302850136819003810190615392565b81526020019060010190611e3f565b50505050896138e5565b85358560005b602002013561398f565b826001015414611ec45760405162461bcd60e51b815260206004820152600a6024820152694348414c5f484153483160b01b60448201526064016109d9565b611ed5856020860135856001611e7b565b816001015414611f145760405162461bcd60e51b815260206004820152600a60248201526921a420a62fa420a9a41960b11b60448201526064016109d9565b60655460038301546000916001600160401b03600160401b91829004811692611f429289359291041661523a565b6003850154611f59906001600160401b0316612c13565b60040154611f779190600160401b90046001600160401b03166153df565b611f8191906153df565b90506020850135811015611fbc57611fb4611f9f60208d018d614e22565b611faf60408e0160208f01614e22565b612a53565b50505061211a565b6000611ffc8c8b8b8b89600c611fd38d358a61523a565b611fdd919061542f565b600c611fed60208f01358b61523a565b611ff7919061542f565b6139cd565b905061207f61200e60208e018e614e22565b8d60016020020160208101906120249190614e22565b6001600160a01b03918216600090815260796020526040808220600190810180546001600160401b038916600160801b0267ffffffffffffffff60801b19918216811790925594909516835291200180549091169091179055565b6001600160401b0381167f6db7dc2f507647d135035469b27aa79cea90582779d084a7821d6cd092cbd8736120b760208f018f614e22565b8e60016020020160208101906120cd9190614e22565b8e60006020020160208101906120e39190614e8d565b604080516001600160a01b0394851681529390921660208401526001600160401b03169082015260600160405180910390a2505050505b5050505050505050565b3360009081526074602052604090205460ff16806121445750607e5460ff165b6121605760405162461bcd60e51b81526004016109d9906151d9565b60335460ff16156121835760405162461bcd60e51b81526004016109d990615183565b6075546001600160401b031661219882610df1565b6001600160401b031611156121dc5760405162461bcd60e51b815260206004820152600a6024820152691513d3d7d49150d1539560b21b60448201526064016109d9565b6121e581612c7e565b610dee81613a8c565b6121f783613b3c565b6122018282610b03565b610a8483613c5e565b607554600160801b90046001600160401b031690565b3360009081526074602052604090205460ff16806122405750607e5460ff165b61225c5760405162461bcd60e51b81526004016109d9906151d9565b60335460ff161561227f5760405162461bcd60e51b81526004016109d990615183565b607a5482106122c15760405162461bcd60e51b815260206004820152600e60248201526d4e4f5f535543485f5a4f4d42494560901b60448201526064016109d9565b60006122cc83612749565b905060006122d9846128d8565b90506000806122f06075546001600160401b031690565b6001600160401b031690505b80836001600160401b03161015801561231457508482105b1561235357600061232484612c13565b90506123308486613d24565b60038101546001600160401b031693508261234a816153ae565b935050506122fc565b80836001600160401b031610156123725761236d86613e6e565b61237c565b61237c8684613f34565b505050505050565b6000611619613f7d565b6000805b607a548110156123e957607a81815481106123af576123af615419565b6000918252602090912001546001600160a01b03848116911614156123d75750600192915050565b806123e1816153ae565b915050612392565b50600092915050565b6123fa614c4b565b61240382612c13565b6040805161018081018252825481526001830154602082015260028301549181019190915260038201546001600160401b038082166060840152600160401b80830482166080850152600160801b808404831660a0860152600160c01b93849004831660c0860152600486015480841660e0870152918204831661010086015281048216610120850152919091041661014082015260059091015461016082015292915050565b6001600160401b03821660009081526077602090815260408083206001600160a01b038516845290915290205460ff165b92915050565b60006124f78484846001600160401b0316612da1565b90505b9392505050565b607e5460ff16156125245760405162461bcd60e51b81526004016109d9906151ad565b467f00000000000000000000000000000000000000000000000000000000000000001415610af45760405162461bcd60e51b815260206004820152601460248201527310d210525397d25117d393d517d0d2105391d15160621b60448201526064016109d9565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156126195760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b60648201526084016109d9565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661264b613fb0565b6001600160a01b0316146126b65760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b60648201526084016109d9565b6001600160a01b0381166126ff5760405162461bcd60e51b815260206004820152601060248201526f2722a2a22fa9aa20a5a2afaa27a5a2a760811b60448201526064016109d9565b6072546001600160a01b0316610dee5760405162461bcd60e51b815260206004820152600f60248201526e046414345545f4e4f545f455243323608c1b60448201526064016109d9565b6000607a8281548110611ad757611ad7615419565b61276784613b3c565b612772838383610f12565b61116f84613c5e565b607554600160401b90046001600160401b031690565b6001600160a01b038116600090815260796020526040812060010154600160c01b900460ff1680156124db57506075546124db906001600160401b0316836124aa565b3360009081526074602052604090205460ff16806127f45750607e5460ff165b6128105760405162461bcd60e51b81526004016109d9906151d9565b60335460ff16156128335760405162461bcd60e51b81526004016109d990615183565b600061283e607a5490565b905060006128546075546001600160401b031690565b6001600160401b03169050825b8281101561116f575b81612874826128d8565b6001600160401b031610156128ab5761288c81613e6e565b826128968161544e565b9350508281106128a65750505050565b61286a565b806128b5816153ae565b915050612861565b6001600160a01b031660009081526079602052604090205490565b6000607a82815481106128ed576128ed615419565b600091825260209091200154600160a01b90046001600160401b031692915050565b3360009081526074602052604090205460ff168061292f5750607e5460ff165b61294b5760405162461bcd60e51b81526004016109d9906151d9565b60335460ff161561296e5760405162461bcd60e51b81526004016109d990615183565b6129788282613fd8565b61298181613c5e565b5050565b6001600160a01b03828116600090815260796020526040808220928416825281206001830154919291600160801b90046001600160401b0316806129f55760405162461bcd60e51b81526020600482015260076024820152661393d7d0d2105360ca1b60448201526064016109d9565b60018201546001600160401b03828116600160801b9092041614612a4a5760405162461bcd60e51b815260206004820152600c60248201526b1112519197d25397d0d2105360a21b60448201526064016109d9565b95945050505050565b6000612a5e826128bd565b90506000612a6b846128bd565b905080821115612a8c57612a7f8382612cee565b612a89908361523a565b91505b6000612a9960028461547b565b9050612aa58582614046565b612aaf818461523a565b9250612ae3856001600160a01b03166000908152607960205260409020600101805467ffffffffffffffff60801b19169055565b607154612af9906001600160a01b0316846140ab565b612b0284614147565b5050505050565b600080612b17611caf61220a565b6040805161018081018252825481526001830154602082015260028301549181019190915260038201546001600160401b038082166060840152600160401b80830482166080850152600160801b808404831660a0860152600160c01b93849004831660c0860152600486015480841660e0870152918204831661010086015281048216610120850152919091041661014082018190526005909201546101608201529150612bc857600091505090565b606554610140820151439161b2fa91612bea916001600160401b03169061548f565b6001600160401b0316612bfd91906153df565b1015612c0b57600191505090565b600091505090565b6001600160401b0316600090815260766020526040902090565b6001600160a01b0382166000908152607960205260409020612c4f82846141ed565b60010180546001600160401b03909216600160401b0267ffffffffffffffff60401b1990921691909117905550565b612c878161161e565b612ca35760405162461bcd60e51b81526004016109d990615200565b6000612cae826116d0565b6001600160401b031614610dee5760405162461bcd60e51b8152602060048201526007602482015266125397d0d2105360ca1b60448201526064016109d9565b6001600160a01b0382166000908152607960205260408120805480841115612d4b5760405162461bcd60e51b815260206004820152601060248201526f544f4f5f4c4954544c455f5354414b4560801b60448201526064016109d9565b6000612d57858361523a565b8584559050612d6686826140ab565b60408051838152602081018790526001600160a01b03881691600080516020615971833981519152910160405180910390a295945050505050565b600081612daf6001856154ba565b6001600160401b03161415612dc757506067546124fa565b6000612dd284612c13565b60030154600160401b90046001600160401b0316905080851015612dfa5750506067546124fa565b6000604051806101400160405280600162ffffff1681526020016201e05b62ffffff1681526020016201f7d162ffffff1681526020016201389162ffffff168152602001620329e162ffffff1681526020016201be4362ffffff1681526020016204cb8c62ffffff1681526020016201fbc462ffffff16815260200162036d3262ffffff1681526020016202797362ffffff1681525090506000604051806101400160405280600162ffffff1681526020016201c03062ffffff1681526020016201b69962ffffff16815260200161fde262ffffff168152602001620265c662ffffff16815260200162013b8e62ffffff168152602001620329e162ffffff1681526020016201389162ffffff1681526020016201f7d162ffffff1681526020016201537562ffffff16815250905060008388612f37919061523a565b6065549091506000906001600160401b0316612f5483600a61542f565b612f5e919061547b565b90506000612f6d600a8361547b565b612f789060026155c6565b9050600085612f88600a856155d2565b600a8110612f9857612f98615419565b6020020151612fac9062ffffff168361542f565b9050600085612fbc600a866155d2565b600a8110612fcc57612fcc615419565b6020020151612fe09062ffffff168361547b565b905080612feb575060015b80606754612ff9919061542f565b9c9b505050505050505050505050565b6020810151600090815b602002015192915050565b6000600161303461014087016101208801615276565b600381111561304557613045615251565b14806130735750600261306061014087016101208801615276565b600381111561307157613071615251565b145b6130b25760405162461bcd60e51b815260206004820152601060248201526f4241445f41465445525f53544154555360801b60448201526064016109d9565b6130ba614caf565b6130c3856123f2565b6060820152606a54604080516221048360e21b815290516001600160a01b03909216916284120c91600480820192602092909190829003018186803b15801561310b57600080fd5b505afa15801561311f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061314391906155e6565b815260608101515161315587866143cd565b146131945760405162461bcd60e51b815260206004820152600f60248201526e0a0a48aacbea6a882a88abe9082a69608b1b60448201526064016109d9565b60006131ab61104936899003890160a08a01615392565b905060006131c1611049368a90038a018a615392565b9050806001600160401b0316826001600160401b031610156132175760405162461bcd60e51b815260206004820152600f60248201526e494e424f585f4241434b574152445360881b60448201526064016109d9565b806001600160401b0316826001600160401b031614156132bd57613248613243368a90038a018a615392565b614427565b6001600160401b0316613266613243368b90038b0160a08c01615392565b6001600160401b031610156132bd5760405162461bcd60e51b815260206004820152601a60248201527f494e424f585f504f535f494e5f4d53475f4241434b574152445300000000000060448201526064016109d9565b60026132d16101408a016101208b01615276565b60038111156132e2576132e2615251565b148061330b57506000613300613243368b90038b0160a08c01615392565b6001600160401b0316115b1561331e578161331a816155ff565b9250505b82516001600160401b03831611156133695760405162461bcd60e51b815260206004820152600e60248201526d12539093d617d41054d517d1539160921b60448201526064016109d9565b6001600160401b0382161561341157606a546001600160a01b03166316bf55796133946001856154ba565b6040516001600160e01b031960e084901b1681526001600160401b03909116600482015260240160206040518083038186803b1580156133d357600080fd5b505afa1580156133e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061340b91906155e6565b60e08401525b5061342b905061342636889003880188615665565b614436565b6040820152606554613446906001600160401b03164361548f565b6001600160401b0390811660c0830152606082015161012001511615801560a083015261348d5761347f81606001516101200151612c13565b60050154608082015261349d565b6060810151610160015160808201525b6134bc8160a00151826080015183604001518460e001516068546144d5565b9150828214806134ca575082155b61350d5760405162461bcd60e51b81526020600482015260146024820152730aa9c8ab0a08a86a88a88be9c9e888abe9082a6960631b60448201526064016109d9565b6135556135218760a00183600001516143cd565b61353283604001514360685461398f565b613549613544368b90038b018b615665565b614542565b888560c001518761456c565b6020820152600061356461220a565b61356f90600161548f565b9050600061357c87612c13565b905061358881836145c0565b6135958360200151614631565b505081816060015161016001516135aa61220a565b6001600160401b03167f4f4caa9e67fb994e349dd35d1ad0ce23053d4323f83ce11dc817b5435031d09684604001518a8660e0015160685488600001516040516135f8959493929190615760565b60405180910390a450949350505050565b80608001516001600160401b0316431015610dee5760405162461bcd60e51b815260206004820152600f60248201526e4245464f52455f444541444c494e4560881b60448201526064016109d9565b8060a001516001600160401b0316431015610dee5760405162461bcd60e51b815260206004820152601060248201526f10d212531117d513d3d7d49150d1539560821b60448201526064016109d9565b60006136b384612c13565b90506136bf8383614768565b8160020154146137005760405162461bcd60e51b815260206004820152600c60248201526b434f4e4649524d5f4441544160a01b60448201526064016109d9565b606b54604051630502677360e51b815260048101849052602481018590526001600160a01b039091169063a04cee6090604401600060405180830381600087803b15801561374d57600080fd5b505af1158015613761573d6000803e3d6000fd5b50506075805467ffffffffffffffff19166001600160401b0388161790555061378d905084600161548f565b6075805467ffffffffffffffff60401b1916600160401b6001600160401b03938416021790556040805185815260208101859052918616917f22ef0479a7ff660660d1c2fe35f1b632cf31675c2d9378db8cec95b00d8ffa3c91015b60405180910390a250505050565b6001600160a01b0381166000908152607b60205260408120805490829055607c8054829190849061382990849061523a565b909155505060408051828152600060208201526001600160a01b038516917fa740af14c56e4e04a617b1de1eb20de73270decbaaead14f142aabf3038e5ae2910160405180910390a292915050565b60758054600160401b90046001600160401b0316906008613898836155ff565b91906101000a8154816001600160401b0302191690836001600160401b0316021790555050565b6000607a82815481106138d4576138d4615419565b906000526020600020019050919050565b60408051600280825260608201835260009283929190602083019080368337019050508551909150613927906139228660005b6020020151614784565b6147f8565b8160008151811061393a5761393a615419565b602090810291909101015261395b8560016020020151613922866001613918565b8160018151811061396e5761396e615419565b602002602001018181525050612a4a6000846001600160401b03168361491c565b6040805160208101859052908101839052606081018290526000906080015b6040516020818303038152906040528051906020012090509392505050565b606e546000906001600160a01b03166314eab5e785358989896139f360208f018f614e22565b8e6001602002016020810190613a099190614e22565b8a8a6040518963ffffffff1660e01b8152600401613a2e9897969594939291906157c2565b602060405180830381600087803b158015613a4857600080fd5b505af1158015613a5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613a809190615872565b98975050505050505050565b6001600160a01b038116600090815260796020526040812090613ab76075546001600160401b031690565b9050613ac381846124aa565b15613af85760018201546001600160401b03828116600160401b9092041614613aee57613aee6153c9565b613af88184613d24565b8154613b0484826140ab565b613b0d84614933565b60408051828152600060208201526001600160a01b0386169160008051602061597183398151915291016137e9565b3360009081526074602052604090205460ff1680613b5c5750607e5460ff165b613b785760405162461bcd60e51b81526004016109d9906151d9565b60335460ff1615613b9b5760405162461bcd60e51b81526004016109d990615183565b613ba43361161e565b15613bc15760405162461bcd60e51b81526004016109d99061588f565b613bca3361238e565b15613c0a5760405162461bcd60e51b815260206004820152601060248201526f5354414b45525f49535f5a4f4d42494560801b60448201526064016109d9565b613c12610e1f565b811015613c545760405162461bcd60e51b815260206004820152601060248201526f4e4f545f454e4f5547485f5354414b4560801b60448201526064016109d9565b610dee3382614ad9565b6072546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd90606401602060405180830381600087803b158015613cb057600080fd5b505af1158015613cc4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613ce891906153f7565b610dee5760405162461bcd60e51b815260206004820152600d60248201526c1514905394d1915497d1905253609a1b60448201526064016109d9565b6001600160401b03821660009081526077602090815260408083206001600160a01b038516845290915290205460ff16613d705760405162461bcd60e51b81526004016109d990615200565b6001600160401b03821660009081526077602090815260408083206001600160a01b03851684529091528120805460ff19169055613dad83612c13565b600381018054919250600160c01b9091046001600160401b0316906018613dd3836158b7565b91906101000a8154816001600160401b0302191690836001600160401b031602179055505060006001600160401b0316836001600160401b03161115610a84576003810154613e2a906001600160401b0316612c13565b60040180546001600160401b0316906000613e44836158b7565b91906101000a8154816001600160401b0302191690836001600160401b0316021790555050505050565b607a8054613e7e9060019061523a565b81548110613e8e57613e8e615419565b90600052602060002001607a8281548110613eab57613eab615419565b600091825260209091208254910180546001600160a01b039092166001600160a01b031983168117825592546001600160e01b0319909216909217600160a01b918290046001600160401b0316909102179055607a805480613f0f57613f0f6158da565b600082815260209020810160001990810180546001600160e01b031916905501905550565b80607a8381548110613f4857613f48615419565b9060005260206000200160000160146101000a8154816001600160401b0302191690836001600160401b031602179055505050565b60007fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b546001600160a01b0316919050565b60007f2b1dbce74324248c222f0ec2d5ed7bd323cfc425b336f0253c5ccfda7265546d613fa1565b3360009081526074602052604090205460ff1680613ff85750607e5460ff165b6140145760405162461bcd60e51b81526004016109d9906151d9565b60335460ff16156140375760405162461bcd60e51b81526004016109d990615183565b61404082612c7e565b61298182825b6001600160a01b03821660009081526079602052604081208054909161406c84836153df565b80845560408051848152602081018390529192506001600160a01b03871691600080516020615971833981519152910160405180910390a25050505050565b6001600160a01b0382166000908152607b6020526040812054906140cf83836153df565b6001600160a01b0385166000908152607b60205260408120829055607c805492935085929091906141019084906153df565b909155505060408051838152602081018390526001600160a01b038616917fa740af14c56e4e04a617b1de1eb20de73270decbaaead14f142aabf3038e5ae291016137e9565b6001600160a01b03808216600081815260796020908152604080832081518083019092529381526001808501546001600160401b03600160401b9091048116938301938452607a8054928301815590945290517ff0440771a29e57e18c66727944770b82cc77924aef333c927ce6bdd2cdb3ae0390910180549251909316600160a01b026001600160e01b03199092169416939093179290921790915561298182614933565b6001600160401b03821660009081526077602090815260408083206001600160a01b038516845290915290205460ff161561423a5760405162461bcd60e51b81526004016109d99061588f565b6001600160401b03821660009081526077602090815260408083206001600160a01b03851684529091528120805460ff1916600117905561427a83612c13565b6003810154909150600160401b90046001600160401b03166142c85760405162461bcd60e51b81526020600482015260076024820152664e4f5f4e4f444560c81b60448201526064016109d9565b6003810154600160c01b90046001600160401b03166142e881600161548f565b6003830180546001600160c01b0316600160c01b6001600160401b039384160217905584161561116f57600382015460009061432c906001600160401b0316612c13565b6004810180549192506001600160401b0390911690600061434c836155ff565b91906101000a8154816001600160401b0302191690836001600160401b0316021790555050816001600160401b031660001415612b0257606554612b029061439d906001600160401b03164361548f565b60038301805467ffffffffffffffff60801b1916600160801b6001600160401b0390931692909202919091179055565b60006143e66143e136859003850185615392565b614784565b826143f760a0860160808701615276565b604051602001614409939291906158f0565b60405160208183030381529060405280519060200120905092915050565b60208101516000906001613013565b6000614440614d00565b8251602001518190600381111561445957614459615251565b9081600381111561446c5761446c615251565b90525060208381015181015190820190600381111561448d5761448d615251565b908160038111156144a0576144a0615251565b9052506144ab614d1e565b8351518152602080850151519082015260408401516144cd90839083906138e5565b949350505050565b600080866144e45760006144e7565b60015b6040516001600160f81b031960f883901b1660208201526021810188905260418101879052606181018690526081810185905290915060a1016040516020818303038152906040528051906020012091505095945050505050565b60006124db614558836020015160000151614c34565b60208401515161456790614c3f565b614768565b614574614c4b565b61457c614c4b565b96875250602086019490945260408501929092526001600160401b0390811660608501529081166080840181905260a0840152431661014083015261016082015290565b6004820154600160401b90046001600160401b03166146015760048201805467ffffffffffffffff60401b1916600160401b436001600160401b0316021790555b600490910180546001600160401b03909216600160801b0267ffffffffffffffff60801b19909216919091179055565b60758054600160801b90046001600160401b0316906010614651836155ff565b825461010092830a6001600160401b03818102199092169282160291909117909255607554600160801b908190048316600090815260766020908152604091829020875181559087015160018201559086015160028201556060860151600382018054608089015160a08a015160c08b01519489166001600160801b031993841617600160401b928a168302176001600160801b03908116918a1688026001600160c01b0390811692909217600160c01b968b1687021790945560e08b0151600487018054998d01516101208e01516101408f0151938d169b9096169a909a17998b169093029890981790931691881690950290911617939094169093029190911790556101609092015160059092019190915550565b6040805160208101849052908101829052600090606001614409565b8051805160209182015192820151805190830151604080516c23b637b130b61039ba30ba329d60991b81870152602d810194909452604d8401959095526001600160c01b031960c092831b8116606d850152911b1660758201528251808203605d018152607d909101909252815191012090565b6000600183600381111561480e5761480e615251565b1415614854576040516b213637b1b59039ba30ba329d60a11b6020820152602c8101839052604c015b6040516020818303038152906040528051906020012090506124db565b600283600381111561486857614868615251565b141561489e5760405174213637b1b59039ba30ba32961032b93937b932b21d60591b602082015260358101839052605501614837565b60038360038111156148b2576148b2615251565b14156148e15760405174213637b1b59039ba30ba3296103a37b7903330b91d60591b6020820152603501614837565b60405162461bcd60e51b815260206004820152601060248201526f4241445f424c4f434b5f53544154555360801b60448201526064016109d9565b60008383836040516020016139ae9392919061592e565b6001600160a01b03811660009081526079602052604090206001810154600160c01b900460ff166149765760405162461bcd60e51b81526004016109d990615200565b600180820154607880546001600160401b03909216929091614998919061523a565b815481106149a8576149a8615419565b600091825260209091200154607880546001600160a01b03909216916001600160401b0384169081106149dd576149dd615419565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555080607960006078846001600160401b031681548110614a2c57614a2c615419565b6000918252602080832091909101546001600160a01b031683528201929092526040019020600101805467ffffffffffffffff19166001600160401b03929092169190911790556078805480614a8457614a846158da565b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b03949094168152607990935250506040812090815560010180546001600160c81b0319169055565b6078805460018082019092557f8dc6fb69531d98d70dc0420e638d2dfd04e09e1ec783ede9aac77da9c5a0dac4810180546001600160a01b0319166001600160a01b0386169081179091556040805160a0810182528581526001600160401b038085166020808401918252607580548416858701908152600060608701818152608088018c81528a835260798652898320985189559551978c0180549351915196519888166001600160801b031990941693909317600160401b918816919091021768ffffffffffffffffff60801b1916600160801b9587169590950260ff60c01b191694909417600160c01b9615158702179055805484168352607782528583208784528252858320805460ff191690991790985587546001600160c01b031643909316909302919091179095558151948552840185905291929091600080516020615971833981519152910160405180910390a2505050565b805160009081613013565b80516000906001613013565b6040805161018081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101829052610140810182905261016081019190915290565b60405180610100016040528060008152602001614cca614c4b565b815260006020820152604001614cde614c4b565b8152600060208201819052604082018190526060820181905260809091015290565b60405180604001604052806002906020820280368337509192915050565b60405180604001604052806002905b614d35614d4b565b815260200190600190039081614d2d5790505090565b6040518060400160405280614d5e614d00565b8152602001614d6b614d00565b905290565b80356001600160a01b0381168114614d8757600080fd5b919050565b600080600060608486031215614da157600080fd5b83359250614db160208501614d70565b9150614dbf60408501614d70565b90509250925092565b6001600160401b0381168114610dee57600080fd5b60008060408385031215614df057600080fd5b8235614dfb81614dc8565b946020939093013593505050565b600060208284031215614e1b57600080fd5b5035919050565b600060208284031215614e3457600080fd5b6124fa82614d70565b60006101608284031215614e5057600080fd5b50919050565b60008060006101a08486031215614e6c57600080fd5b614e768585614e3d565b956101608501359550610180909401359392505050565b600060208284031215614e9f57600080fd5b81356124fa81614dc8565b60008060408385031215614ebd57600080fd5b50508035926020909101359150565b80604081018310156124db57600080fd5b600080600080600080600080610280898b031215614efa57600080fd5b614f048a8a614ecc565b9750614f138a60408b01614ecc565b9650614f228a60808b01614ecc565b95506101c089018a811115614f3657600080fd5b60c08a01955035614f4681614dc8565b93506101e08901359250614f5e8a6102008b01614ecc565b9150614f6e8a6102408b01614ecc565b90509295985092959890939650565b600080600060608486031215614f9257600080fd5b833592506020840135614fa481614dc8565b929592945050506040919091013590565b6000610180820190508251825260208301516020830152604083015160408301526060830151614ff060608401826001600160401b03169052565b50608083015161500b60808401826001600160401b03169052565b5060a083015161502660a08401826001600160401b03169052565b5060c083015161504160c08401826001600160401b03169052565b5060e083015161505c60e08401826001600160401b03169052565b50610100838101516001600160401b038116848301525050610120838101516001600160401b038116848301525050610140838101516001600160401b03811684830152505061016092830151919092015290565b600080604083850312156150c457600080fd5b82356150cf81614dc8565b91506150dd60208401614d70565b90509250929050565b6000806000606084860312156150fb57600080fd5b83359250602084013561510d81614dc8565b9150604084013561511d81614dc8565b809150509250925092565b6000806000806101c0858703121561513f57600080fd5b843593506151508660208701614e3d565b9396939550505050610180820135916101a0013590565b6000806040838503121561517a57600080fd5b614dfb83614d70565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b60208082526012908201527115d2125511531254d517d11254d05093115160721b604082015260600190565b6020808252600d908201526c2727aa2fab20a624a220aa27a960991b604082015260600190565b6020808252600a90820152691393d517d4d51052d15160b21b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008282101561524c5761524c615224565b500390565b634e487b7160e01b600052602160045260246000fd5b803560048110614d8757600080fd5b60006020828403121561528857600080fd5b6124fa82615267565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b03811182821017156152c9576152c9615291565b60405290565b6000608082840312156152e157600080fd5b6152e96152a7565b905082601f8301126152fa57600080fd5b6153026152a7565b80604084018581111561531457600080fd5b845b8181101561532e578035845260209384019301615316565b5081845285605f86011261534157600080fd5b6153496152a7565b9250829150608085018681111561535f57600080fd5b8082101561538457813561537281614dc8565b8452602093840193919091019061535f565b505060208301525092915050565b6000608082840312156153a457600080fd5b6124fa83836152cf565b60006000198214156153c2576153c2615224565b5060010190565b634e487b7160e01b600052600160045260246000fd5b600082198211156153f2576153f2615224565b500190565b60006020828403121561540957600080fd5b815180151581146124fa57600080fd5b634e487b7160e01b600052603260045260246000fd5b600081600019048311821515161561544957615449615224565b500290565b60008161545d5761545d615224565b506000190190565b634e487b7160e01b600052601260045260246000fd5b60008261548a5761548a615465565b500490565b60006001600160401b038083168185168083038211156154b1576154b1615224565b01949350505050565b60006001600160401b03838116908316818110156154da576154da615224565b039392505050565b600181815b8085111561551d57816000190482111561550357615503615224565b8085161561551057918102915b93841c93908002906154e7565b509250929050565b600082615534575060016124db565b81615541575060006124db565b816001811461555757600281146155615761557d565b60019150506124db565b60ff84111561557257615572615224565b50506001821b6124db565b5060208310610133831016604e8410600b84101617156155a0575081810a6124db565b6155aa83836154e2565b80600019048211156155be576155be615224565b029392505050565b60006124fa8383615525565b6000826155e1576155e1615465565b500690565b6000602082840312156155f857600080fd5b5051919050565b60006001600160401b038083168181141561561c5761561c615224565b6001019392505050565b600060a0828403121561563857600080fd5b6156406152a7565b905061564c83836152cf565b815261565a60808301615267565b602082015292915050565b6000610160828403121561567857600080fd5b604051606081018181106001600160401b038211171561569a5761569a615291565b6040526156a78484615626565b81526156b68460a08501615626565b60208201526101408301356156ca81614dc8565b60408201529392505050565b604081833760006040838101828152908301915b6002811015612b025782356156fe81614dc8565b6001600160401b03168252602092830192909101906001016156ea565b6004811061573957634e487b7160e01b600052602160045260246000fd5b9052565b61574782826156d6565b61575360808201615267565b610a84608084018261571b565b8581526101e08101615775602083018761573d565b61578560c0830160a0880161573d565b61014086013561579481614dc8565b6001600160401b03166101608301526101808201949094526101a08101929092526101c09091015292915050565b888152610200810160208083018a60005b60028110156157fe576157ee836157e984615267565b61571b565b91830191908301906001016157d3565b50505050606082018860005b60028110156158305761581d83836156d6565b608092830192919091019060010161580a565b5050506001600160401b03969096166101608201526001600160a01b03948516610180820152929093166101a08301526101c08201526101e001529392505050565b60006020828403121561588457600080fd5b81516124fa81614dc8565b6020808252600e908201526d1053149150511657d4d51052d15160921b604082015260600190565b60006001600160401b038216806158d0576158d0615224565b6000190192915050565b634e487b7160e01b600052603160045260246000fd5b83815282602082015260006004831061591957634e487b7160e01b600052602160045260246000fd5b5060f89190911b604082015260410192915050565b83815260006020848184015260408301845182860160005b8281101561596257815184529284019290840190600101615946565b50919897505050505050505056feebd093d389ab57f3566918d2c379a2b4d9539e8eb95efad9d5e465457833fde6a264697066735822122031bde65b110fb88cb6050244d578a72c251415b43d4a634665a9407656ce8b3964736f6c63430008090033";

type ERC20RollupUserLogicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20RollupUserLogicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20RollupUserLogic__factory extends ContractFactory {
  constructor(...args: ERC20RollupUserLogicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ERC20RollupUserLogic";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC20RollupUserLogic> {
    return super.deploy(overrides || {}) as Promise<ERC20RollupUserLogic>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC20RollupUserLogic {
    return super.attach(address) as ERC20RollupUserLogic;
  }
  connect(signer: Signer): ERC20RollupUserLogic__factory {
    return super.connect(signer) as ERC20RollupUserLogic__factory;
  }
  static readonly contractName: "ERC20RollupUserLogic";
  public readonly contractName: "ERC20RollupUserLogic";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20RollupUserLogicInterface {
    return new utils.Interface(_abi) as ERC20RollupUserLogicInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20RollupUserLogic {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC20RollupUserLogic;
  }
}
