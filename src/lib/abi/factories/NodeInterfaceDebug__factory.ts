/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  NodeInterfaceDebug,
  NodeInterfaceDebugInterface,
} from "../NodeInterfaceDebug";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "ticket",
        type: "bytes32",
      },
    ],
    name: "getRetryable",
    outputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "timeout",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "beneficiary",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "tries",
            type: "uint64",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct NodeInterfaceDebug.RetryableInfo",
        name: "retryable",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class NodeInterfaceDebug__factory {
  static readonly abi = _abi;
  static createInterface(): NodeInterfaceDebugInterface {
    return new utils.Interface(_abi) as NodeInterfaceDebugInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NodeInterfaceDebug {
    return new Contract(address, _abi, signerOrProvider) as NodeInterfaceDebug;
  }
}
