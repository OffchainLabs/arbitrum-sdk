/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RollupProxy,
  RollupProxyInterface,
  ConfigStruct,
  ContractDependenciesStruct,
} from "../RollupProxy";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "confirmPeriodBlocks",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "extraChallengeTimeBlocks",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "stakeToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "baseStake",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "wasmModuleRoot",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "loserStakeEscrow",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
          {
            internalType: "uint64",
            name: "genesisBlockNum",
            type: "uint64",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "delayBlocks",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "futureBlocks",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "delaySeconds",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "futureSeconds",
                type: "uint256",
              },
            ],
            internalType: "struct ISequencerInbox.MaxTimeVariation",
            name: "sequencerInboxMaxTimeVariation",
            type: "tuple",
          },
        ],
        internalType: "struct Config",
        name: "config",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "contract IBridge",
            name: "bridge",
            type: "address",
          },
          {
            internalType: "contract ISequencerInbox",
            name: "sequencerInbox",
            type: "address",
          },
          {
            internalType: "contract IInbox",
            name: "inbox",
            type: "address",
          },
          {
            internalType: "contract IOutbox",
            name: "outbox",
            type: "address",
          },
          {
            internalType: "contract IRollupEventInbox",
            name: "rollupEventInbox",
            type: "address",
          },
          {
            internalType: "contract IChallengeManager",
            name: "challengeManager",
            type: "address",
          },
          {
            internalType: "contract IRollupAdmin",
            name: "rollupAdminLogic",
            type: "address",
          },
          {
            internalType: "contract IRollupUser",
            name: "rollupUserLogic",
            type: "address",
          },
          {
            internalType: "address",
            name: "validatorUtils",
            type: "address",
          },
          {
            internalType: "address",
            name: "validatorWalletCreator",
            type: "address",
          },
        ],
        internalType: "struct ContractDependencies",
        name: "connectedContracts",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "UpgradedSecondary",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "";

type RollupProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RollupProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RollupProxy__factory extends ContractFactory {
  constructor(...args: RollupProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "RollupProxy";
  }

  deploy(
    config: ConfigStruct,
    connectedContracts: ContractDependenciesStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RollupProxy> {
    return super.deploy(
      config,
      connectedContracts,
      overrides || {}
    ) as Promise<RollupProxy>;
  }
  getDeployTransaction(
    config: ConfigStruct,
    connectedContracts: ContractDependenciesStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      config,
      connectedContracts,
      overrides || {}
    );
  }
  attach(address: string): RollupProxy {
    return super.attach(address) as RollupProxy;
  }
  connect(signer: Signer): RollupProxy__factory {
    return super.connect(signer) as RollupProxy__factory;
  }
  static readonly contractName: "RollupProxy";
  public readonly contractName: "RollupProxy";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RollupProxyInterface {
    return new utils.Interface(_abi) as RollupProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RollupProxy {
    return new Contract(address, _abi, signerOrProvider) as RollupProxy;
  }
}
