/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  HashProofHelper,
  HashProofHelperInterface,
} from "../HashProofHelper";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "fullHash",
        type: "bytes32",
      },
      {
        internalType: "uint64",
        name: "offset",
        type: "uint64",
      },
    ],
    name: "NotProven",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "fullHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "offset",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "part",
        type: "bytes",
      },
    ],
    name: "PreimagePartProven",
    type: "event",
  },
  {
    inputs: [],
    name: "clearSplitProof",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "fullHash",
        type: "bytes32",
      },
      {
        internalType: "uint64",
        name: "offset",
        type: "uint64",
      },
    ],
    name: "getPreimagePart",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "keccakStates",
    outputs: [
      {
        internalType: "uint64",
        name: "offset",
        type: "uint64",
      },
      {
        internalType: "bytes",
        name: "part",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint64",
        name: "offset",
        type: "uint64",
      },
    ],
    name: "proveWithFullPreimage",
    outputs: [
      {
        internalType: "bytes32",
        name: "fullHash",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint64",
        name: "offset",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "flags",
        type: "uint256",
      },
    ],
    name: "proveWithSplitPreimage",
    outputs: [
      {
        internalType: "bytes32",
        name: "fullHash",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "";

type HashProofHelperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HashProofHelperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HashProofHelper__factory extends ContractFactory {
  constructor(...args: HashProofHelperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "HashProofHelper";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<HashProofHelper> {
    return super.deploy(overrides || {}) as Promise<HashProofHelper>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): HashProofHelper {
    return super.attach(address) as HashProofHelper;
  }
  connect(signer: Signer): HashProofHelper__factory {
    return super.connect(signer) as HashProofHelper__factory;
  }
  static readonly contractName: "HashProofHelper";
  public readonly contractName: "HashProofHelper";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HashProofHelperInterface {
    return new utils.Interface(_abi) as HashProofHelperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HashProofHelper {
    return new Contract(address, _abi, signerOrProvider) as HashProofHelper;
  }
}
