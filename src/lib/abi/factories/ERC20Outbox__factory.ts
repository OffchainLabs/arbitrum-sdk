/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ERC20Outbox, ERC20OutboxInterface } from "../ERC20Outbox";

const _abi = [
  {
    inputs: [],
    name: "AlreadyInit",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "AlreadySpent",
    type: "error",
  },
  {
    inputs: [],
    name: "BridgeCallFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "HadZeroInit",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "actualLength",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxProofLength",
        type: "uint256",
      },
    ],
    name: "MerkleProofTooLong",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "rollup",
        type: "address",
      },
    ],
    name: "NotRollup",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxIndex",
        type: "uint256",
      },
    ],
    name: "PathNotMinimal",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proofLength",
        type: "uint256",
      },
    ],
    name: "ProofTooLong",
    type: "error",
  },
  {
    inputs: [],
    name: "SimulationOnlyEntrypoint",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "UnknownRoot",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "l2Sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "zero",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "transactionIndex",
        type: "uint256",
      },
    ],
    name: "OutBoxTransactionExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "outputRoot",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "l2BlockHash",
        type: "bytes32",
      },
    ],
    name: "SendRootUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "OUTBOX_VERSION",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bridge",
    outputs: [
      {
        internalType: "contract IBridge",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "l2Sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "l2Block",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "l1Block",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "l2Timestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "calculateItemHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
      {
        internalType: "uint256",
        name: "path",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "item",
        type: "bytes32",
      },
    ],
    name: "calculateMerkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "l2Sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "l2Block",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "l1Block",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "l2Timestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "executeTransaction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "l2Sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "l2Block",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "l1Block",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "l2Timestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "executeTransactionSimulation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IBridge",
        name: "_bridge",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "isSpent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "l2ToL1BatchNum",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "l2ToL1Block",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "l2ToL1EthBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "l2ToL1OutputId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "l2ToL1Sender",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "l2ToL1Timestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "l2ToL1WithdrawalAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rollup",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "roots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "spent",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "l2BlockHash",
        type: "bytes32",
      },
    ],
    name: "updateSendRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b50608051611376610030600039600061053b01526113766000f3fe608060405234801561001057600080fd5b50600436106101105760003560e01c80639f0c04bf116100ad578063c75184df11610071578063c75184df14610226578063cb23bcb514610246578063cbf96f6314610259578063d5b5cc2314610261578063e78cea921461028157600080fd5b80639f0c04bf146101c5578063a04cee60146101d8578063ae6dead7146101eb578063b0f305371461020b578063c4d66de81461021357600080fd5b80627436d31461011557806308635a951461013b5780631198527114610150578063288e5b1014610157578063465477901461016a5780635a129efe1461017257806372f2a8c71461019557806380648b021461019d5780638515bc6a146101bd575b600080fd5b610128610123366004610cb2565b610294565b6040519081526020015b60405180910390f35b61014e610149366004610dd2565b6102d1565b005b6000610128565b61014e610165366004610ec6565b610344565b61012861037f565b610185610180366004610f61565b6103ae565b6040519015158152602001610132565b6101286103cb565b6101a56103e8565b6040516001600160a01b039091168152602001610132565b610128610409565b6101286101d3366004610f7a565b61043f565b61014e6101e6366004611008565b610484565b6101286101f9366004610f61565b60036020526000908152604090205481565b610128610508565b61014e61022136600461102a565b610530565b61022e600281565b6040516001600160801b039091168152602001610132565b6000546101a5906001600160a01b031681565b610128610711565b61012861026f366004610f61565b60026020526000908152604090205481565b6001546101a5906001600160a01b031681565b60006102c98484846040516020016102ae91815260200190565b60405160208183030381529060405280519060200120610729565b949350505050565b60006102e3898989898989898961043f565b90506103258c8c808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152508e92508591506107cc9050565b6103368a8a8a8a8a8a8a8a8a6108d5565b505050505050505050505050565b331561036357604051630e13b69d60e01b815260040160405180910390fd5b6103748989898989898989896108d5565b505050505050505050565b6004546000906001600160801b03908116908114156103a057600091505090565b6001600160801b0316919050565b60008060006103bc84610b58565b92509250506102c98282610b95565b6005546000906000198114156103e357506000919050565b919050565b6006546000906001600160a01b03908116908114156103e357600091505090565b6006546000906001600160601b03600160a01b90910481169081141561043157600091505090565b6001600160601b0316919050565b6000888888888888888860405160200161046098979695949392919061104e565b60405160208183030381529060405280519060200120905098975050505050505050565b6000546001600160a01b031633146104c957600054604051630e4cf1bf60e21b81523360048201526001600160a01b0390911660248201526044015b60405180910390fd5b60008281526003602052604080822083905551829184917fb4df3847300f076a369cd76d2314b470a1194d9e8a6bb97f1860aee88a5f67489190a35050565b6004546000906001600160801b03600160801b9091048116908114156103a057600091505090565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156105be5760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b60648201526084016104c0565b6001600160a01b0381166105e557604051631ad0f74360e01b815260040160405180910390fd5b6001546001600160a01b03161561060f57604051633bcd329760e21b815260040160405180910390fd5b6040805160c0810182526001600160801b038082526020808301919091526000198284018190526001600160a01b03606084018190526001600160601b03608085015260a0909301819052600481815560058290556006829055600791909155600180546001600160a01b0319169386169384179055835163cb23bcb560e01b81529351929363cb23bcb59381830193929091829003018186803b1580156106b657600080fd5b505afa1580156106ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ee91906110a2565b600080546001600160a01b0319166001600160a01b039290921691909117905550565b6007546000906000198114156103e357600091505090565b825160009061010081111561075c57604051637ed6198f60e11b81526004810182905261010060248201526044016104c0565b8260005b828110156107c257600087828151811061077c5761077c6110bf565b60200260200101519050816001901b8716600014156107a9578260005280602052604060002092506107b9565b8060005282602052604060002092505b50600101610760565b5095945050505050565b6101008351106107f457825160405163ab6a068360e01b81526004016104c091815260200190565b82516108019060026111cf565b821061083857818351600261081691906111cf565b604051630b8a724b60e01b8152600481019290925260248201526044016104c0565b6000610845848484610294565b600081815260036020526040902054909150610877576040516310e61af960e31b8152600481018290526024016104c0565b600080600061088586610b58565b9250925092506108958282610b95565b156108b657604051639715b8d360e01b8152600481018790526024016104c0565b600092835260026020526040909220600190911b909117905550505050565b6000886001600160a01b0316886001600160a01b03167f20af7f3bbfe38132b8900ae295cd9c8d1914be7052d061a511f3f728dab189648c60405161091c91815260200190565b60405180910390a4600060046040518060c00160405290816000820160009054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016000820160109054906101000a90046001600160801b03166001600160801b03166001600160801b03168152602001600182015481526020016002820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016002820160149054906101000a90046001600160601b03166001600160601b03166001600160601b0316815260200160038201548152505090506040518060c00160405280886001600160801b03168152602001866001600160801b031681526020018b60001b81526020018a6001600160a01b03168152602001876001600160601b03168152602001610a5c8690565b905280516020808301516001600160801b03908116600160801b02921691909117600455604080830151600555606083015160808401516001600160601b0316600160a01b026001600160a01b039091161760065560a0909201516007558151601f8501829004820281018201909252838252610af8918a918791908790879081908401838280828437600092019190915250610ba492505050565b805160208201516001600160801b03908116600160801b029116176004556040810151600555606081015160808201516001600160601b0316600160a01b026001600160a01b039091161760065560a00151600755505050505050505050565b6000808080610b6860ff866111f1565b90506000610b7760ff87611205565b60008381526002602052604090205492979096509194509092505050565b80821c60011615155b92915050565b600154604051639e5d4c4960e01b815260009182916001600160a01b0390911690639e5d4c4990610bdd90889088908890600401611249565b600060405180830381600087803b158015610bf757600080fd5b505af1158015610c0b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610c339190810190611292565b9150915081610c6557805115610c4c5780518082602001fd5b604051631bb7daad60e11b815260040160405180910390fd5b5050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715610caa57610caa610c6c565b604052919050565b600080600060608486031215610cc757600080fd5b83356001600160401b0380821115610cde57600080fd5b818601915086601f830112610cf257600080fd5b8135602082821115610d0657610d06610c6c565b8160051b9250610d17818401610c82565b828152928401810192818101908a851115610d3157600080fd5b948201945b84861015610d4f57853582529482019490820190610d36565b9a918901359950506040909701359695505050505050565b6001600160a01b0381168114610d7c57600080fd5b50565b80356103e381610d67565b60008083601f840112610d9c57600080fd5b5081356001600160401b03811115610db357600080fd5b602083019150836020828501011115610dcb57600080fd5b9250929050565b60008060008060008060008060008060006101208c8e031215610df457600080fd5b8b356001600160401b0380821115610e0b57600080fd5b818e0191508e601f830112610e1f57600080fd5b813581811115610e2e57600080fd5b8f60208260051b8501011115610e4357600080fd5b60208381019e50909c508e01359a50610e5e60408f01610d7f565b9950610e6c60608f01610d7f565b985060808e0135975060a08e0135965060c08e0135955060e08e013594506101008e0135915080821115610e9f57600080fd5b50610eac8e828f01610d8a565b915080935050809150509295989b509295989b9093969950565b60008060008060008060008060006101008a8c031215610ee557600080fd5b8935985060208a0135610ef781610d67565b975060408a0135610f0781610d67565b965060608a0135955060808a0135945060a08a0135935060c08a0135925060e08a01356001600160401b03811115610f3e57600080fd5b610f4a8c828d01610d8a565b915080935050809150509295985092959850929598565b600060208284031215610f7357600080fd5b5035919050565b60008060008060008060008060e0898b031215610f9657600080fd5b8835610fa181610d67565b97506020890135610fb181610d67565b965060408901359550606089013594506080890135935060a0890135925060c08901356001600160401b03811115610fe857600080fd5b610ff48b828c01610d8a565b999c989b5096995094979396929594505050565b6000806040838503121561101b57600080fd5b50508035926020909101359150565b60006020828403121561103c57600080fd5b813561104781610d67565b9392505050565b60006001600160601b0319808b60601b168352808a60601b16601484015250876028830152866048830152856068830152846088830152828460a8840137506000910160a801908152979650505050505050565b6000602082840312156110b457600080fd5b815161104781610d67565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600181815b8085111561112657816000190482111561110c5761110c6110d5565b8085161561111957918102915b93841c93908002906110f0565b509250929050565b60008261113d57506001610b9e565b8161114a57506000610b9e565b8160018114611160576002811461116a57611186565b6001915050610b9e565b60ff84111561117b5761117b6110d5565b50506001821b610b9e565b5060208310610133831016604e8410600b84101617156111a9575081810a610b9e565b6111b383836110eb565b80600019048211156111c7576111c76110d5565b029392505050565b6000611047838361112e565b634e487b7160e01b600052601260045260246000fd5b600082611200576112006111db565b500490565b600082611214576112146111db565b500690565b60005b8381101561123457818101518382015260200161121c565b83811115611243576000848401525b50505050565b60018060a01b0384168152826020820152606060408201526000825180606084015261127c816080850160208701611219565b601f01601f191691909101608001949350505050565b600080604083850312156112a557600080fd5b825180151581146112b557600080fd5b60208401519092506001600160401b03808211156112d257600080fd5b818501915085601f8301126112e657600080fd5b8151818111156112f8576112f8610c6c565b61130b601f8201601f1916602001610c82565b915080825286602082850101111561132257600080fd5b611333816020840160208601611219565b508092505050925092905056fea26469706673582212206cedb707793f75df6a85df408f1dc8dde2d347be9381b8cdde8daa7d1dcbc8a964736f6c63430008090033";

type ERC20OutboxConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20OutboxConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20Outbox__factory extends ContractFactory {
  constructor(...args: ERC20OutboxConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ERC20Outbox";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC20Outbox> {
    return super.deploy(overrides || {}) as Promise<ERC20Outbox>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC20Outbox {
    return super.attach(address) as ERC20Outbox;
  }
  connect(signer: Signer): ERC20Outbox__factory {
    return super.connect(signer) as ERC20Outbox__factory;
  }
  static readonly contractName: "ERC20Outbox";
  public readonly contractName: "ERC20Outbox";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20OutboxInterface {
    return new utils.Interface(_abi) as ERC20OutboxInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20Outbox {
    return new Contract(address, _abi, signerOrProvider) as ERC20Outbox;
  }
}
