/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TimedOutChallengeManager,
  TimedOutChallengeManagerInterface,
} from "../TimedOutChallengeManager";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "challengeIndex",
        type: "uint64",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "challengeRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "challengedSegmentStart",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "challengedSegmentLength",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32[]",
        name: "chainHashes",
        type: "bytes32[]",
      },
    ],
    name: "Bisected",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "challengeIndex",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "enum IChallengeManager.ChallengeTerminationType",
        name: "kind",
        type: "uint8",
      },
    ],
    name: "ChallengeEnded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "challengeIndex",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "blockSteps",
        type: "uint256",
      },
    ],
    name: "ExecutionChallengeBegun",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "challengeIndex",
        type: "uint64",
      },
      {
        components: [
          {
            internalType: "bytes32[2]",
            name: "bytes32Vals",
            type: "bytes32[2]",
          },
          {
            internalType: "uint64[2]",
            name: "u64Vals",
            type: "uint64[2]",
          },
        ],
        indexed: false,
        internalType: "struct GlobalState",
        name: "startState",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes32[2]",
            name: "bytes32Vals",
            type: "bytes32[2]",
          },
          {
            internalType: "uint64[2]",
            name: "u64Vals",
            type: "uint64[2]",
          },
        ],
        indexed: false,
        internalType: "struct GlobalState",
        name: "endState",
        type: "tuple",
      },
    ],
    name: "InitiatedChallenge",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "challengeIndex",
        type: "uint64",
      },
    ],
    name: "OneStepProofCompleted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "challengeIndex",
        type: "uint64",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "oldSegmentsStart",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "oldSegmentsLength",
            type: "uint256",
          },
          {
            internalType: "bytes32[]",
            name: "oldSegments",
            type: "bytes32[]",
          },
          {
            internalType: "uint256",
            name: "challengePosition",
            type: "uint256",
          },
        ],
        internalType: "struct ChallengeLib.SegmentSelection",
        name: "selection",
        type: "tuple",
      },
      {
        internalType: "bytes32[]",
        name: "newSegments",
        type: "bytes32[]",
      },
    ],
    name: "bisectExecution",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "bridge",
    outputs: [
      {
        internalType: "contract IBridge",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "challengeIndex",
        type: "uint64",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "oldSegmentsStart",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "oldSegmentsLength",
            type: "uint256",
          },
          {
            internalType: "bytes32[]",
            name: "oldSegments",
            type: "bytes32[]",
          },
          {
            internalType: "uint256",
            name: "challengePosition",
            type: "uint256",
          },
        ],
        internalType: "struct ChallengeLib.SegmentSelection",
        name: "selection",
        type: "tuple",
      },
      {
        internalType: "enum MachineStatus[2]",
        name: "machineStatuses",
        type: "uint8[2]",
      },
      {
        internalType: "bytes32[2]",
        name: "globalStateHashes",
        type: "bytes32[2]",
      },
      {
        internalType: "uint256",
        name: "numSteps",
        type: "uint256",
      },
    ],
    name: "challengeExecution",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "challengeIndex",
        type: "uint64",
      },
    ],
    name: "challengeInfo",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "addr",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "timeLeft",
                type: "uint256",
              },
            ],
            internalType: "struct ChallengeLib.Participant",
            name: "current",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "addr",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "timeLeft",
                type: "uint256",
              },
            ],
            internalType: "struct ChallengeLib.Participant",
            name: "next",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "lastMoveTimestamp",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "wasmModuleRoot",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "challengeStateHash",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "maxInboxMessages",
            type: "uint64",
          },
          {
            internalType: "enum ChallengeLib.ChallengeMode",
            name: "mode",
            type: "uint8",
          },
        ],
        internalType: "struct ChallengeLib.Challenge",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "challenges",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "timeLeft",
            type: "uint256",
          },
        ],
        internalType: "struct ChallengeLib.Participant",
        name: "current",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "timeLeft",
            type: "uint256",
          },
        ],
        internalType: "struct ChallengeLib.Participant",
        name: "next",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "lastMoveTimestamp",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "wasmModuleRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "challengeStateHash",
        type: "bytes32",
      },
      {
        internalType: "uint64",
        name: "maxInboxMessages",
        type: "uint64",
      },
      {
        internalType: "enum ChallengeLib.ChallengeMode",
        name: "mode",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "challengeIndex",
        type: "uint64",
      },
    ],
    name: "clearChallenge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "wasmModuleRoot_",
        type: "bytes32",
      },
      {
        internalType: "enum MachineStatus[2]",
        name: "startAndEndMachineStatuses_",
        type: "uint8[2]",
      },
      {
        components: [
          {
            internalType: "bytes32[2]",
            name: "bytes32Vals",
            type: "bytes32[2]",
          },
          {
            internalType: "uint64[2]",
            name: "u64Vals",
            type: "uint64[2]",
          },
        ],
        internalType: "struct GlobalState[2]",
        name: "startAndEndGlobalStates_",
        type: "tuple[2]",
      },
      {
        internalType: "uint64",
        name: "numBlocks",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "asserter_",
        type: "address",
      },
      {
        internalType: "address",
        name: "challenger_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "asserterTimeLeft_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "challengerTimeLeft_",
        type: "uint256",
      },
    ],
    name: "createChallenge",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "challengeIndex",
        type: "uint64",
      },
    ],
    name: "currentResponder",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IChallengeResultReceiver",
        name: "resultReceiver_",
        type: "address",
      },
      {
        internalType: "contract ISequencerInbox",
        name: "sequencerInbox_",
        type: "address",
      },
      {
        internalType: "contract IBridge",
        name: "bridge_",
        type: "address",
      },
      {
        internalType: "contract IOneStepProofEntry",
        name: "osp_",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "isTimedOut",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "challengeIndex",
        type: "uint64",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "oldSegmentsStart",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "oldSegmentsLength",
            type: "uint256",
          },
          {
            internalType: "bytes32[]",
            name: "oldSegments",
            type: "bytes32[]",
          },
          {
            internalType: "uint256",
            name: "challengePosition",
            type: "uint256",
          },
        ],
        internalType: "struct ChallengeLib.SegmentSelection",
        name: "selection",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
    ],
    name: "oneStepProveExecution",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "osp",
    outputs: [
      {
        internalType: "contract IOneStepProofEntry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "resultReceiver",
    outputs: [
      {
        internalType: "contract IChallengeResultReceiver",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sequencerInbox",
    outputs: [
      {
        internalType: "contract ISequencerInbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "challengeIndex",
        type: "uint64",
      },
    ],
    name: "timeout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalChallengesCreated",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b50608051611cd761003060003960006109d30152611cd76000f3fe608060405234801561001057600080fd5b50600436106100e05760003560e01c80639ede42b9116100875780639ede42b914610251578063a521b03214610275578063d248d12414610288578063e78cea921461029b578063ee35f327146102ae578063f26a62c6146102c1578063f8c8765e146102d4578063fb7be0a1146102e757600080fd5b806314eab5e7146100e55780631b45c86a1461011557806323a9ef231461012a5780633504f1d71461015557806356e9df97146101685780635ef489e61461017b5780637fd07a9c1461018e5780638f1d3776146101ae575b600080fd5b6100f86100f336600461152d565b6102fa565b6040516001600160401b0390911681526020015b60405180910390f35b6101286101233660046115c0565b610602565b005b61013d6101383660046115c0565b61068a565b6040516001600160a01b03909116815260200161010c565b60025461013d906001600160a01b031681565b6101286101763660046115c0565b6106ae565b6000546100f8906001600160401b031681565b6101a161019c3660046115c0565b61081c565b60405161010c919061161d565b61023e6101bc36600461168f565b6001602081815260009283526040928390208351808501855281546001600160a01b0390811682529382015481840152845180860190955260028201549093168452600381015491840191909152600481015460058201546006830154600790930154939493919290916001600160401b03811690600160401b900460ff1687565b60405161010c97969594939291906116a8565b61026561025f3660046115c0565b50600190565b604051901515815260200161010c565b610128610283366004611705565b6108f5565b6101286102963660046117a9565b6109a0565b60045461013d906001600160a01b031681565b60035461013d906001600160a01b031681565b60055461013d906001600160a01b031681565b6101286102e236600461183b565b6109c8565b6101286102f5366004611897565b610b39565b6002546000906001600160a01b0316331461034f5760405162461bcd60e51b815260206004820152601060248201526f13d3931657d493d313155417d0d2105360821b60448201526064015b60405180910390fd5b6040805160028082526060820183526000926020830190803683370190505090506103a561038060208b018b61193b565b6103a08a60005b6080020180360381019061039b91906119fa565b610b61565b610be2565b816000815181106103b8576103b8611925565b60209081029190910101526103e78960016020020160208101906103dc919061193b565b6103a08a6001610387565b816001815181106103fa576103fa611925565b6020908102919091010152600080548190819061041f906001600160401b0316611aa8565b91906101000a8154816001600160401b0302191690836001600160401b031602179055905060006001600160401b0316816001600160401b0316141561046757610467611acf565b6001600160401b0381166000908152600160205260408120600581018d9055906104a161049c368d90038d0160808e016119fa565b610d0c565b905060026104b560408e0160208f0161193b565b60038111156104c6576104c66115f3565b14806104f4575060006104e96104e4368e90038e0160808f016119fa565b610d21565b6001600160401b0316115b15610507578061050381611aa8565b9150505b6007820180546040805180820182526001600160a01b038d811680835260209283018d90526002880180546001600160a01b03199081169092179055600388018d905583518085018552918e16808352919092018b90528654909116178555600185018990554260048601556001600160401b0384811668ffffffffffffffffff1990931692909217600160401b179092559051908416907f76604fe17af46c9b5f53ffe99ff23e0f655dab91886b07ac1fc0254319f7145a906105d1908e906080820190611b2f565b60405180910390a26105ef8360008c6001600160401b031687610d30565b5090925050505b98975050505050505050565b60006001600160401b038216600090815260016020526040902060070154600160401b900460ff16600281111561063b5761063b6115f3565b1415604051806040016040528060078152602001661393d7d0d2105360ca1b8152509061067b5760405162461bcd60e51b81526004016103469190611b4b565b50610687816000610dc6565b50565b6001600160401b03166000908152600160205260409020546001600160a01b031690565b6002546001600160a01b031633146106fb5760405162461bcd60e51b815260206004820152601060248201526f2727aa2fa922a9afa922a1a2a4ab22a960811b6044820152606401610346565b60006001600160401b038216600090815260016020526040902060070154600160401b900460ff166002811115610734576107346115f3565b1415604051806040016040528060078152602001661393d7d0d2105360ca1b815250906107745760405162461bcd60e51b81526004016103469190611b4b565b506001600160401b038116600081815260016020819052604080832080546001600160a01b031990811682559281018490556002810180549093169092556003808301849055600483018490556005830184905560068301939093556007909101805468ffffffffffffffffff19169055517ffdaece6c274a4b56af16761f83fd6b1062823192630ea08e019fdf9b2d747f409161081191611ba0565b60405180910390a250565b610824611488565b6001600160401b0382811660009081526001602081815260409283902083516101208101855281546001600160a01b0390811660e0830190815294830154610100830152938152845180860186526002808401549095168152600383015481850152928101929092526004810154938201939093526005830154606082015260068301546080820152600783015493841660a08201529260c0840191600160401b90910460ff16908111156108db576108db6115f3565b60028111156108ec576108ec6115f3565b90525092915050565b6001600160401b03841660009081526001602052604081208591859161091a8461068a565b6001600160a01b0316336001600160a01b0316146109685760405162461bcd60e51b815260206004820152600b60248201526a21a420a62fa9a2a72222a960a91b6044820152606401610346565b60405162461bcd60e51b815260206004820152600d60248201526c4348414c5f444541444c494e4560981b6044820152606401610346565b6001600160401b03841660009081526001602052604090208490849060029061091a8461068a565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161415610a565760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b6064820152608401610346565b6002546001600160a01b031615610a9e5760405162461bcd60e51b815260206004820152600c60248201526b1053149150511657d253925560a21b6044820152606401610346565b6001600160a01b038416610ae95760405162461bcd60e51b81526020600482015260126024820152712727afa922a9aaa62a2fa922a1a2a4ab22a960711b6044820152606401610346565b600280546001600160a01b039586166001600160a01b0319918216179091556003805494861694821694909417909355600480549285169284169290921790915560058054919093169116179055565b6001600160401b03851660009081526001602081905260409091208691869161091a8461068a565b80518051602091820151828401518051908401516040516c23b637b130b61039ba30ba329d60991b95810195909552602d850193909352604d8401919091526001600160c01b031960c091821b8116606d85015291901b166075820152600090607d015b604051602081830303815290604052805190602001209050919050565b60006001836003811115610bf857610bf86115f3565b1415610c3e576040516b213637b1b59039ba30ba329d60a11b6020820152602c8101839052604c015b604051602081830303815290604052805190602001209050610d06565b6002836003811115610c5257610c526115f3565b1415610c885760405174213637b1b59039ba30ba32961032b93937b932b21d60591b602082015260358101839052605501610c21565b6003836003811115610c9c57610c9c6115f3565b1415610ccb5760405174213637b1b59039ba30ba3296103a37b7903330b91d60591b6020820152603501610c21565b60405162461bcd60e51b815260206004820152601060248201526f4241445f424c4f434b5f53544154555360801b6044820152606401610346565b92915050565b6020810151600090815b602002015192915050565b60208101516000906001610d16565b6001821015610d4157610d41611acf565b600281511015610d5357610d53611acf565b6000610d60848484610ef4565b6001600160401b038616600081815260016020526040908190206006018390555191925082917f86b34e9455464834eca718f62d4481437603bb929d8a78ccde5d1bc79fa06d6890610db790889088908890611bba565b60405180910390a35050505050565b6001600160401b03821660008181526001602081905260408083206002808201805483546001600160a01b0319808216865596850188905595811690915560038301869055600480840187905560058401879055600684019690965560078301805468ffffffffffffffffff1916905590549251630357aa4960e01b8152948501959095526001600160a01b03948516602485018190529285166044850181905290949293909290911690630357aa4990606401600060405180830381600087803b158015610e9457600080fd5b505af1158015610ea8573d6000803e3d6000fd5b50505050846001600160401b03167ffdaece6c274a4b56af16761f83fd6b1062823192630ea08e019fdf9b2d747f4085604051610ee59190611ba0565b60405180910390a25050505050565b6000838383604051602001610f0b93929190611c0f565b6040516020818303038152906040528051906020012090505b9392505050565b6040805180820190915260008082526020820152815260200190600190039081610f2b575050604080518082018252600080825260209182018190528251808401909352600483529082015290915081600081518110610f8d57610f8d611925565b6020026020010181905250610fa2600061109c565b81600181518110610fb557610fb5611925565b6020026020010181905250610fca600061109c565b81600281518110610fdd57610fdd611925565b602090810291909101810191909152604080518083018252838152815180830190925280825260009282019290925261102d60408051606080820183529181019182529081526000602082015290565b604080518082018252606080825260006020808401829052845161012081018652828152908101879052938401859052908301829052608083018a905260a0830181905260c0830181905260e083015261010082018890529061108f816110cf565b9998505050505050505050565b604080518082019091526000808252602082015250604080518082019091526000815263ffffffff909116602082015290565b600080825160038111156110e5576110e56115f3565b141561119b576110f882602001516112a5565b61110583604001516112a5565b611112846060015161132a565b608085015160a086015160c087015160e0808901516101008a01516040516f26b0b1b434b73290393ab73734b7339d60811b602082015260308101999099526050890197909752607088019590955260908701939093526001600160e01b031991831b821660b0870152821b811660b486015291901b1660b883015260bc82015260dc01610bc5565b6001825160038111156111b0576111b06115f3565b14156111e85760808201516040517026b0b1b434b732903334b734b9b432b21d60791b60208201526031810191909152605101610bc5565b6002825160038111156111fd576111fd6115f3565b1415611227576040516f26b0b1b434b7329032b93937b932b21d60811b6020820152603001610bc5565b60038251600381111561123c5761123c6115f3565b1415611266576040516f26b0b1b434b732903a37b7903330b91d60811b6020820152603001610bc5565b60405162461bcd60e51b815260206004820152600f60248201526e4241445f4d4143485f53544154555360881b6044820152606401610346565b919050565b60208101518151515160005b818110156113235783516112ce906112c990836113c3565b6113fb565b6040516b2b30b63ab29039ba30b1b59d60a11b6020820152602c810191909152604c8101849052606c01604051602081830303815290604052805190602001209250808061131b90611c51565b9150506112b1565b5050919050565b602081015160005b8251518110156113bd576113628360000151828151811061135557611355611925565b6020026020010151611418565b6040517129ba30b1b590333930b6b29039ba30b1b59d60711b602082015260328101919091526052810183905260720160405160208183030381529060405280519060200120915080806113b590611c51565b915050611332565b50919050565b604080518082019091526000808252602082015282518051839081106113eb576113eb611925565b6020026020010151905092915050565b600081600001518260200151604051602001610bc5929190611c6c565b600061142782600001516113fb565b602080840151604080860151606087015191516b29ba30b1b590333930b6b29d60a11b94810194909452602c840194909452604c8301919091526001600160e01b031960e093841b8116606c840152921b9091166070820152607401610bc5565b604080516101208101909152600060e08201818152610100830191909152819081526020016114c7604080518082019091526000808252602082015290565b815260006020820181905260408201819052606082018190526080820181905260a09091015290565b8060408101831015610d0657600080fd5b80356001600160401b03811681146112a057600080fd5b6001600160a01b038116811461068757600080fd5b600080600080600080600080610200898b03121561154a57600080fd5b8835975061155b8a60208b016114f0565b965061016089018a81111561156f57600080fd5b60608a01965061157e81611501565b95505061018089013561159081611518565b93506101a08901356115a181611518565b979a96995094979396929592945050506101c0820135916101e0013590565b6000602082840312156115d257600080fd5b610f2482611501565b80516001600160a01b03168252602090810151910152565b634e487b7160e01b600052602160045260246000fd5b60038110611619576116196115f3565b9052565b6000610120820190506116318284516115db565b602083015161164360408401826115db565b5060408301516080830152606083015160a0830152608083015160c08301526001600160401b0360a08401511660e083015260c0830151611688610100840182611609565b5092915050565b6000602082840312156116a157600080fd5b5035919050565b61012081016116b7828a6115db565b6116c460408301896115db565b8660808301528560a08301528460c08301526001600160401b03841660e08301526105f6610100830184611609565b6000608082840312156113bd57600080fd5b6000806000806060858703121561171b57600080fd5b61172485611501565b935060208501356001600160401b038082111561174057600080fd5b61174c888389016116f3565b9450604087013591508082111561176257600080fd5b818701915087601f83011261177657600080fd5b81358181111561178557600080fd5b8860208260051b850101111561179a57600080fd5b95989497505060200194505050565b600080600080606085870312156117bf57600080fd5b6117c885611501565b935060208501356001600160401b03808211156117e457600080fd5b6117f0888389016116f3565b9450604087013591508082111561180657600080fd5b818701915087601f83011261181a57600080fd5b81358181111561182957600080fd5b88602082850101111561179a57600080fd5b6000806000806080858703121561185157600080fd5b843561185c81611518565b9350602085013561186c81611518565b9250604085013561187c81611518565b9150606085013561188c81611518565b939692955090935050565b600080600080600060e086880312156118af57600080fd5b6118b886611501565b945060208601356001600160401b038111156118d357600080fd5b6118df888289016116f3565b9450506118ef87604088016114f0565b92506118fe87608088016114f0565b9497939650919460c0013592915050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60006020828403121561194d57600080fd5b813560048110610f2457600080fd5b604080519081016001600160401b038111828210171561197e5761197e61190f565b60405290565b600082601f83011261199557600080fd5b604051604081018181106001600160401b03821117156119b7576119b761190f565b80604052508060408401858111156119ce57600080fd5b845b818110156119ef576119e181611501565b8352602092830192016119d0565b509195945050505050565b600060808284031215611a0c57600080fd5b604051604081018181106001600160401b0382111715611a2e57611a2e61190f565b604052601f83018413611a4057600080fd5b611a4861195c565b806040850186811115611a5a57600080fd5b855b81811015611a74578035845260209384019301611a5c565b50818452611a828782611984565b6020850152509195945050505050565b634e487b7160e01b600052601160045260246000fd5b60006001600160401b0380831681811415611ac557611ac5611a92565b6001019392505050565b634e487b7160e01b600052600160045260246000fd5b604081833760006040838101828152908301915b6002811015611b28576001600160401b03611b1384611501565b16825260209283019290910190600101611af9565b5050505050565b6101008101611b3e8285611ae5565b610f246080830184611ae5565b600060208083528351808285015260005b81811015611b7857858101830151858201604001528201611b5c565b81811115611b8a576000604083870101525b50601f01601f1916929092016040019392505050565b6020810160048310611bb457611bb46115f3565b91905290565b6000606082018583526020858185015260606040850152818551808452608086019150828701935060005b81811015611c0157845183529383019391830191600101611be5565b509098975050505050505050565b83815260006020848184015260408301845182860160005b82811015611c4357815184529284019290840190600101611c27565b509198975050505050505050565b6000600019821415611c6557611c65611a92565b5060010190565b652b30b63ab29d60d11b8152600060078410611c8a57611c8a6115f3565b5060f89290921b600683015260078201526027019056fea2646970667358221220fe02de4c4370d7bf1a1997bda9a23dc3a76dca96ce2610357e42d1fb3393f7d864736f6c63430008090033";

type TimedOutChallengeManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TimedOutChallengeManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TimedOutChallengeManager__factory extends ContractFactory {
  constructor(...args: TimedOutChallengeManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "TimedOutChallengeManager";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TimedOutChallengeManager> {
    return super.deploy(overrides || {}) as Promise<TimedOutChallengeManager>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TimedOutChallengeManager {
    return super.attach(address) as TimedOutChallengeManager;
  }
  connect(signer: Signer): TimedOutChallengeManager__factory {
    return super.connect(signer) as TimedOutChallengeManager__factory;
  }
  static readonly contractName: "TimedOutChallengeManager";
  public readonly contractName: "TimedOutChallengeManager";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TimedOutChallengeManagerInterface {
    return new utils.Interface(_abi) as TimedOutChallengeManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TimedOutChallengeManager {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TimedOutChallengeManager;
  }
}
