/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  IBridgeCreator,
  IBridgeCreatorInterface,
} from "../IBridgeCreator";

const _abi = [
  {
    inputs: [],
    name: "bridgeTemplate",
    outputs: [
      {
        internalType: "contract IBridge",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "inboxTemplate",
    outputs: [
      {
        internalType: "contract IInboxBase",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "outboxTemplate",
    outputs: [
      {
        internalType: "contract Outbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rollupEventInboxTemplate",
    outputs: [
      {
        internalType: "contract IRollupEventInbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sequencerInboxTemplate",
    outputs: [
      {
        internalType: "contract SequencerInbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_bridgeTemplate",
        type: "address",
      },
      {
        internalType: "address",
        name: "_sequencerInboxTemplate",
        type: "address",
      },
      {
        internalType: "address",
        name: "_inboxTemplate",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rollupEventInboxTemplate",
        type: "address",
      },
      {
        internalType: "address",
        name: "_outboxTemplate",
        type: "address",
      },
    ],
    name: "updateTemplates",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IBridgeCreator__factory {
  static readonly abi = _abi;
  static createInterface(): IBridgeCreatorInterface {
    return new utils.Interface(_abi) as IBridgeCreatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IBridgeCreator {
    return new Contract(address, _abi, signerOrProvider) as IBridgeCreator;
  }
}
