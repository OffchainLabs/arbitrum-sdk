/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  BoldRollupUserLogic,
  BoldRollupUserLogicInterface,
} from "../BoldRollupUserLogic";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "assertionHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "blockHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "sendRoot",
        type: "bytes32",
      },
    ],
    name: "AssertionConfirmed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "assertionHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "parentAssertionHash",
        type: "bytes32",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "bytes32",
                name: "prevPrevAssertionHash",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "sequencerBatchAcc",
                type: "bytes32",
              },
              {
                components: [
                  {
                    internalType: "bytes32",
                    name: "wasmModuleRoot",
                    type: "bytes32",
                  },
                  {
                    internalType: "uint256",
                    name: "requiredStake",
                    type: "uint256",
                  },
                  {
                    internalType: "address",
                    name: "challengeManager",
                    type: "address",
                  },
                  {
                    internalType: "uint64",
                    name: "confirmPeriodBlocks",
                    type: "uint64",
                  },
                  {
                    internalType: "uint64",
                    name: "nextInboxPosition",
                    type: "uint64",
                  },
                ],
                internalType: "struct ConfigData",
                name: "configData",
                type: "tuple",
              },
            ],
            internalType: "struct BeforeStateData",
            name: "beforeStateData",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes32[2]",
                    name: "bytes32Vals",
                    type: "bytes32[2]",
                  },
                  {
                    internalType: "uint64[2]",
                    name: "u64Vals",
                    type: "uint64[2]",
                  },
                ],
                internalType: "struct GlobalState",
                name: "globalState",
                type: "tuple",
              },
              {
                internalType: "enum MachineStatus",
                name: "machineStatus",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "endHistoryRoot",
                type: "bytes32",
              },
            ],
            internalType: "struct AssertionState",
            name: "beforeState",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes32[2]",
                    name: "bytes32Vals",
                    type: "bytes32[2]",
                  },
                  {
                    internalType: "uint64[2]",
                    name: "u64Vals",
                    type: "uint64[2]",
                  },
                ],
                internalType: "struct GlobalState",
                name: "globalState",
                type: "tuple",
              },
              {
                internalType: "enum MachineStatus",
                name: "machineStatus",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "endHistoryRoot",
                type: "bytes32",
              },
            ],
            internalType: "struct AssertionState",
            name: "afterState",
            type: "tuple",
          },
        ],
        indexed: false,
        internalType: "struct AssertionInputs",
        name: "assertion",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "afterInboxBatchAcc",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "inboxMaxCount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "wasmModuleRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "requiredStake",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "challengeManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "confirmPeriodBlocks",
        type: "uint64",
      },
    ],
    name: "AssertionCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "challengeIndex",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "asserter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "challenger",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "challengedAssertion",
        type: "uint64",
      },
    ],
    name: "RollupChallengeStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "machineHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
    ],
    name: "RollupInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "UpgradedSecondary",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "initialBalance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "finalBalance",
        type: "uint256",
      },
    ],
    name: "UserStakeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "initialBalance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "finalBalance",
        type: "uint256",
      },
    ],
    name: "UserWithdrawableFundsUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "VALIDATOR_AFK_BLOCKS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_stakerMap",
    outputs: [
      {
        internalType: "uint256",
        name: "amountStaked",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "latestStakedAssertion",
        type: "bytes32",
      },
      {
        internalType: "uint64",
        name: "index",
        type: "uint64",
      },
      {
        internalType: "bool",
        name: "isStaked",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "stakerAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "addToDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "amountStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "anyTrustFastConfirmer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseStake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bridge",
    outputs: [
      {
        internalType: "contract IBridge",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "chainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "challengeGracePeriodBlocks",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "challengeManager",
    outputs: [
      {
        internalType: "contract IEdgeChallengeManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "prevAssertionHash",
        type: "bytes32",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "bytes32[2]",
                name: "bytes32Vals",
                type: "bytes32[2]",
              },
              {
                internalType: "uint64[2]",
                name: "u64Vals",
                type: "uint64[2]",
              },
            ],
            internalType: "struct GlobalState",
            name: "globalState",
            type: "tuple",
          },
          {
            internalType: "enum MachineStatus",
            name: "machineStatus",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "endHistoryRoot",
            type: "bytes32",
          },
        ],
        internalType: "struct AssertionState",
        name: "state",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "inboxAcc",
        type: "bytes32",
      },
    ],
    name: "computeAssertionHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "assertionHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "prevAssertionHash",
        type: "bytes32",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "bytes32[2]",
                name: "bytes32Vals",
                type: "bytes32[2]",
              },
              {
                internalType: "uint64[2]",
                name: "u64Vals",
                type: "uint64[2]",
              },
            ],
            internalType: "struct GlobalState",
            name: "globalState",
            type: "tuple",
          },
          {
            internalType: "enum MachineStatus",
            name: "machineStatus",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "endHistoryRoot",
            type: "bytes32",
          },
        ],
        internalType: "struct AssertionState",
        name: "confirmState",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "winningEdgeId",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "wasmModuleRoot",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "requiredStake",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "challengeManager",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "confirmPeriodBlocks",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "nextInboxPosition",
            type: "uint64",
          },
        ],
        internalType: "struct ConfigData",
        name: "prevConfig",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "inboxAcc",
        type: "bytes32",
      },
    ],
    name: "confirmAssertion",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "confirmPeriodBlocks",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "assertionHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "parentAssertionHash",
        type: "bytes32",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "bytes32[2]",
                name: "bytes32Vals",
                type: "bytes32[2]",
              },
              {
                internalType: "uint64[2]",
                name: "u64Vals",
                type: "uint64[2]",
              },
            ],
            internalType: "struct GlobalState",
            name: "globalState",
            type: "tuple",
          },
          {
            internalType: "enum MachineStatus",
            name: "machineStatus",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "endHistoryRoot",
            type: "bytes32",
          },
        ],
        internalType: "struct AssertionState",
        name: "confirmState",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "inboxAcc",
        type: "bytes32",
      },
    ],
    name: "fastConfirmAssertion",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes32",
                name: "prevPrevAssertionHash",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "sequencerBatchAcc",
                type: "bytes32",
              },
              {
                components: [
                  {
                    internalType: "bytes32",
                    name: "wasmModuleRoot",
                    type: "bytes32",
                  },
                  {
                    internalType: "uint256",
                    name: "requiredStake",
                    type: "uint256",
                  },
                  {
                    internalType: "address",
                    name: "challengeManager",
                    type: "address",
                  },
                  {
                    internalType: "uint64",
                    name: "confirmPeriodBlocks",
                    type: "uint64",
                  },
                  {
                    internalType: "uint64",
                    name: "nextInboxPosition",
                    type: "uint64",
                  },
                ],
                internalType: "struct ConfigData",
                name: "configData",
                type: "tuple",
              },
            ],
            internalType: "struct BeforeStateData",
            name: "beforeStateData",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes32[2]",
                    name: "bytes32Vals",
                    type: "bytes32[2]",
                  },
                  {
                    internalType: "uint64[2]",
                    name: "u64Vals",
                    type: "uint64[2]",
                  },
                ],
                internalType: "struct GlobalState",
                name: "globalState",
                type: "tuple",
              },
              {
                internalType: "enum MachineStatus",
                name: "machineStatus",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "endHistoryRoot",
                type: "bytes32",
              },
            ],
            internalType: "struct AssertionState",
            name: "beforeState",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes32[2]",
                    name: "bytes32Vals",
                    type: "bytes32[2]",
                  },
                  {
                    internalType: "uint64[2]",
                    name: "u64Vals",
                    type: "uint64[2]",
                  },
                ],
                internalType: "struct GlobalState",
                name: "globalState",
                type: "tuple",
              },
              {
                internalType: "enum MachineStatus",
                name: "machineStatus",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "endHistoryRoot",
                type: "bytes32",
              },
            ],
            internalType: "struct AssertionState",
            name: "afterState",
            type: "tuple",
          },
        ],
        internalType: "struct AssertionInputs",
        name: "assertion",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "expectedAssertionHash",
        type: "bytes32",
      },
    ],
    name: "fastConfirmNewAssertion",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "genesisAssertionHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "assertionHash",
        type: "bytes32",
      },
    ],
    name: "getAssertion",
    outputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "firstChildBlock",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "secondChildBlock",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "createdAtBlock",
            type: "uint64",
          },
          {
            internalType: "bool",
            name: "isFirstChild",
            type: "bool",
          },
          {
            internalType: "enum AssertionStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "configHash",
            type: "bytes32",
          },
        ],
        internalType: "struct AssertionNode",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "assertionHash",
        type: "bytes32",
      },
    ],
    name: "getAssertionCreationBlockForLogLookup",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "assertionHash",
        type: "bytes32",
      },
    ],
    name: "getFirstChildCreationBlock",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "assertionHash",
        type: "bytes32",
      },
    ],
    name: "getSecondChildCreationBlock",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "getStaker",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amountStaked",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "latestStakedAssertion",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "index",
            type: "uint64",
          },
          {
            internalType: "bool",
            name: "isStaked",
            type: "bool",
          },
        ],
        internalType: "struct IRollupCore.Staker",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "stakerNum",
        type: "uint64",
      },
    ],
    name: "getStakerAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "inbox",
    outputs: [
      {
        internalType: "contract IInboxBase",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_stakeToken",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "assertionHash",
        type: "bytes32",
      },
    ],
    name: "isFirstChild",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "assertionHash",
        type: "bytes32",
      },
    ],
    name: "isPending",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "isStaked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isValidator",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestConfirmed",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "latestStakedAssertion",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "loserStakeEscrow",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minimumAssertionPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "bytes32",
                name: "prevPrevAssertionHash",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "sequencerBatchAcc",
                type: "bytes32",
              },
              {
                components: [
                  {
                    internalType: "bytes32",
                    name: "wasmModuleRoot",
                    type: "bytes32",
                  },
                  {
                    internalType: "uint256",
                    name: "requiredStake",
                    type: "uint256",
                  },
                  {
                    internalType: "address",
                    name: "challengeManager",
                    type: "address",
                  },
                  {
                    internalType: "uint64",
                    name: "confirmPeriodBlocks",
                    type: "uint64",
                  },
                  {
                    internalType: "uint64",
                    name: "nextInboxPosition",
                    type: "uint64",
                  },
                ],
                internalType: "struct ConfigData",
                name: "configData",
                type: "tuple",
              },
            ],
            internalType: "struct BeforeStateData",
            name: "beforeStateData",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes32[2]",
                    name: "bytes32Vals",
                    type: "bytes32[2]",
                  },
                  {
                    internalType: "uint64[2]",
                    name: "u64Vals",
                    type: "uint64[2]",
                  },
                ],
                internalType: "struct GlobalState",
                name: "globalState",
                type: "tuple",
              },
              {
                internalType: "enum MachineStatus",
                name: "machineStatus",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "endHistoryRoot",
                type: "bytes32",
              },
            ],
            internalType: "struct AssertionState",
            name: "beforeState",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes32[2]",
                    name: "bytes32Vals",
                    type: "bytes32[2]",
                  },
                  {
                    internalType: "uint64[2]",
                    name: "u64Vals",
                    type: "uint64[2]",
                  },
                ],
                internalType: "struct GlobalState",
                name: "globalState",
                type: "tuple",
              },
              {
                internalType: "enum MachineStatus",
                name: "machineStatus",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "endHistoryRoot",
                type: "bytes32",
              },
            ],
            internalType: "struct AssertionState",
            name: "afterState",
            type: "tuple",
          },
        ],
        internalType: "struct AssertionInputs",
        name: "assertion",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "expectedAssertionHash",
        type: "bytes32",
      },
    ],
    name: "newStakeOnNewAssertion",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "outbox",
    outputs: [
      {
        internalType: "contract IOutbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "target",
        type: "uint256",
      },
    ],
    name: "reduceDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeWhitelistAfterFork",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeWhitelistAfterValidatorAfk",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "returnOldDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rollupDeploymentBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rollupEventInbox",
    outputs: [
      {
        internalType: "contract IRollupEventInbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sequencerInbox",
    outputs: [
      {
        internalType: "contract ISequencerInbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes32",
                name: "prevPrevAssertionHash",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "sequencerBatchAcc",
                type: "bytes32",
              },
              {
                components: [
                  {
                    internalType: "bytes32",
                    name: "wasmModuleRoot",
                    type: "bytes32",
                  },
                  {
                    internalType: "uint256",
                    name: "requiredStake",
                    type: "uint256",
                  },
                  {
                    internalType: "address",
                    name: "challengeManager",
                    type: "address",
                  },
                  {
                    internalType: "uint64",
                    name: "confirmPeriodBlocks",
                    type: "uint64",
                  },
                  {
                    internalType: "uint64",
                    name: "nextInboxPosition",
                    type: "uint64",
                  },
                ],
                internalType: "struct ConfigData",
                name: "configData",
                type: "tuple",
              },
            ],
            internalType: "struct BeforeStateData",
            name: "beforeStateData",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes32[2]",
                    name: "bytes32Vals",
                    type: "bytes32[2]",
                  },
                  {
                    internalType: "uint64[2]",
                    name: "u64Vals",
                    type: "uint64[2]",
                  },
                ],
                internalType: "struct GlobalState",
                name: "globalState",
                type: "tuple",
              },
              {
                internalType: "enum MachineStatus",
                name: "machineStatus",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "endHistoryRoot",
                type: "bytes32",
              },
            ],
            internalType: "struct AssertionState",
            name: "beforeState",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes32[2]",
                    name: "bytes32Vals",
                    type: "bytes32[2]",
                  },
                  {
                    internalType: "uint64[2]",
                    name: "u64Vals",
                    type: "uint64[2]",
                  },
                ],
                internalType: "struct GlobalState",
                name: "globalState",
                type: "tuple",
              },
              {
                internalType: "enum MachineStatus",
                name: "machineStatus",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "endHistoryRoot",
                type: "bytes32",
              },
            ],
            internalType: "struct AssertionState",
            name: "afterState",
            type: "tuple",
          },
        ],
        internalType: "struct AssertionInputs",
        name: "assertion",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "expectedAssertionHash",
        type: "bytes32",
      },
    ],
    name: "stakeOnNewAssertion",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakeToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakerCount",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalWithdrawableFunds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "assertionHash",
        type: "bytes32",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "bytes32[2]",
                name: "bytes32Vals",
                type: "bytes32[2]",
              },
              {
                internalType: "uint64[2]",
                name: "u64Vals",
                type: "uint64[2]",
              },
            ],
            internalType: "struct GlobalState",
            name: "globalState",
            type: "tuple",
          },
          {
            internalType: "enum MachineStatus",
            name: "machineStatus",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "endHistoryRoot",
            type: "bytes32",
          },
        ],
        internalType: "struct AssertionState",
        name: "state",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "prevAssertionHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "inboxAcc",
        type: "bytes32",
      },
    ],
    name: "validateAssertionHash",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "assertionHash",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "wasmModuleRoot",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "requiredStake",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "challengeManager",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "confirmPeriodBlocks",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "nextInboxPosition",
            type: "uint64",
          },
        ],
        internalType: "struct ConfigData",
        name: "configData",
        type: "tuple",
      },
    ],
    name: "validateConfig",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "validatorWalletCreator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "validatorWhitelistDisabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wasmModuleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawStakerFunds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "withdrawableFunds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60e0604052620000196200003a60201b62001cef1760201c565b15156080523060a0524660c0523480156200003357600080fd5b5062000108565b60408051600481526024810182526020810180516001600160e01b03166302881c7960e11b1790529051600091829182916064916200007a9190620000d7565b600060405180830381855afa9150503d8060008114620000b7576040519150601f19603f3d011682016040523d82523d6000602084013e620000bc565b606091505b5091509150818015620000d0575080516020145b9250505090565b6000825160005b81811015620000fa5760208186018101518583015201620000de565b506000920191825250919050565b60805160a05160c0516145786200014d60003960006119490152600081816113b5015281816119bf0152611a55015260008181610d020152612de201526145786000f3fe608060405234801561001057600080fd5b506004361061036d5760003560e01c80636177fd18116101d3578063c2c2e68e11610104578063e8bd4922116100a2578063f065de3f1161007c578063f065de3f14610885578063f3f0a03e14610898578063facd743b146108ab578063fb0e722b146108ce57600080fd5b8063e8bd4922146107dd578063ee35f32714610854578063ef40a6701461085c57600080fd5b8063dff69787116100de578063dff697871461079c578063e51019a6146107a4578063e531d8c7146107b7578063e78cea92146107ca57600080fd5b8063c2c2e68e1461076e578063c4d66de814610776578063ce11e6ab1461078957600080fd5b806388302884116101715780639a8a05921161014b5780639a8a05921461066f578063a23c44b114610678578063aa38a6e714610748578063bc45e0ae1461075b57600080fd5b8063883028841461063e5780638da5cb5b1461065e5780638ee1a1261461066657600080fd5b80636ddd3744116101ad5780636ddd37441461060657806371ef232c146106195780637300201c1461062257806376e7e23b1461063557600080fd5b80636177fd18146105b55780636420fb9f146105eb57806365f7f80d146105fe57600080fd5b806333635fc2116102ad57806352d1902d1161024b57806357ef4ab91161022557806357ef4ab9146105875780635c975abb1461058f5780636096686d1461059a57806361373919146105ad57600080fd5b806352d1902d1461055457806355840a581461055c57806356bbc9e61461057457600080fd5b80633be680ea116102875780633be680ea1461050257806345e38b641461052e5780634ceccfe51461053757806351ed6a301461054157600080fd5b806333635fc2146104d4578063353325e0146104e75780633b86de19146104ef57600080fd5b806318baaab91161031a5780632abdd230116102f45780632abdd230146104585780632e7acfa6146104845780632f30cabd1461049857806330836228146104c157600080fd5b806318baaab9146104345780631b1689e91461043c5780631e83d30f1461044557600080fd5b8063117155851161034b57806311715585146103ca57806312ab3d3b146103f657806313c56ca71461041357600080fd5b8063023a96fe1461037257806304972af9146103a257806310b98a35146103b7575b600080fd5b606954610385906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6103b56103b0366004613b89565b6108e1565b005b6103b56103c5366004613bc8565b6108fb565b6103dd6103d8366004613c26565b610ce2565b60405167ffffffffffffffff9091168152602001610399565b607a546104039060ff1681565b6040519015158152602001610399565b610426610421366004613c26565b610cfe565b604051908152602001610399565b6103b5610e46565b61042660795481565b6103b5610453366004613c26565b610f1a565b610426610466366004613c54565b6001600160a01b031660009081526076602052604090206001015490565b6066546103dd9067ffffffffffffffff1681565b6104266104a6366004613c54565b6001600160a01b031660009081526077602052604090205490565b6104036104cf366004613c26565b610f91565b6104266104e2366004613c71565b610fad565b610426610fd2565b6103b56104fd366004613cbb565b61100e565b6069546103dd9074010000000000000000000000000000000000000000900467ffffffffffffffff1681565b61042660715481565b6104266203138081565b607054610385906001600160a01b031681565b6104266113a8565b607a546103859061010090046001600160a01b031681565b6103dd610582366004613c26565b61146d565b6103b5611490565b60335460ff16610403565b6103b56105a8366004613ce8565b611508565b610426611581565b6104036105c3366004613c54565b6001600160a01b0316600090815260766020526040902060020154600160401b900460ff1690565b6103b56105f9366004613cbb565b611604565b607354610426565b610385610614366004613d3e565b6117c2565b61042660785481565b6103b5610630366004613d5b565b6117fc565b61042660675481565b61065161064c366004613c26565b61181d565b6040516103999190613dc7565b6103856118e9565b61042660685481565b61042660655481565b610709610686366004613c54565b604080516080810182526000808252602082018190529181018290526060810191909152506001600160a01b03166000908152607660209081526040918290208251608081018452815481526001820154928101929092526002015467ffffffffffffffff811692820192909252600160401b90910460ff161515606082015290565b6040516103999190815181526020808301519082015260408083015167ffffffffffffffff169082015260609182015115159181019190915260800190565b606d54610385906001600160a01b031681565b606e54610385906001600160a01b031681565b6103b56118f3565b6103b5610784366004613c54565b6119b5565b606c54610385906001600160a01b031681565b6075546103dd565b6103b56107b2366004613e28565b611b5a565b6104036107c5366004613c26565b611bc1565b606b54610385906001600160a01b031681565b6108226107eb366004613c54565b60766020526000908152604090208054600182015460029092015490919067ffffffffffffffff811690600160401b900460ff1684565b6040516103999493929190938452602084019290925267ffffffffffffffff1660408301521515606082015260800190565b610385611bf1565b61042661086a366004613c54565b6001600160a01b031660009081526076602052604090205490565b606f54610385906001600160a01b031681565b6103b56108a6366004613e66565b611c78565b6104036108b9366004613c54565b60726020526000908152604090205460ff1681565b606a54610385906001600160a01b031681565b6108f7816108ee84611db5565b60010154611e16565b5050565b3360009081526072602052604090205460ff168061091b5750607a5460ff165b61095c5760405162461bcd60e51b815260206004820152600d60248201526c2727aa2fab20a624a220aa27a960991b60448201526064015b60405180910390fd5b610964611f1b565b600061096f87611db5565b9050600061097c87611db5565b905061098c848260010154611e16565b61099c6080850160608601613d3e565b82546109b99190600160801b900467ffffffffffffffff16613ea8565b67ffffffffffffffff16431015610a125760405162461bcd60e51b815260206004820152600f60248201527f4245464f52455f444541444c494e4500000000000000000000000000000000006044820152606401610953565b6073548714610a635760405162461bcd60e51b815260206004820152601960248201527f505245565f4e4f545f4c41544553545f434f4e4649524d4544000000000000006044820152606401610953565b8054600160401b900467ffffffffffffffff1615610ccc576000610a8d6060860160408701613c54565b6001600160a01b031663fda2892e876040518263ffffffff1660e01b8152600401610aba91815260200190565b6101e060405180830381865afa158015610ad8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610afc9190613f72565b9050888160e0015114610b515760405162461bcd60e51b815260206004820152600a60248201527f4e4f545f57494e4e4552000000000000000000000000000000000000000000006044820152606401610953565b60018161016001516001811115610b6a57610b6a613d93565b14610bb75760405162461bcd60e51b815260206004820152601260248201527f454447455f4e4f545f434f4e4649524d454400000000000000000000000000006044820152606401610953565b80610140015167ffffffffffffffff16600003610c165760405162461bcd60e51b815260206004820152601760248201527f5a45524f5f434f4e4649524d45445f41545f424c4f434b0000000000000000006044820152606401610953565b606954610140820151610c4b9174010000000000000000000000000000000000000000900467ffffffffffffffff1690613ea8565b67ffffffffffffffff16431015610cca5760405162461bcd60e51b815260206004820152602160248201527f4348414c4c454e47455f47524143455f504552494f445f4e4f545f504153534560448201527f44000000000000000000000000000000000000000000000000000000000000006064820152608401610953565b505b610cd888888886611f6e565b5050505050505050565b6000610ced82611db5565b5467ffffffffffffffff1692915050565b60007f000000000000000000000000000000000000000000000000000000000000000015610d88576000828152607b602052604090205480610d825760405162461bcd60e51b815260206004820152600c60248201527f4e4f5f415353455254494f4e00000000000000000000000000000000000000006044820152606401610953565b92915050565b6000610d9383611db5565b6040805160c081018252825467ffffffffffffffff8082168352600160401b820481166020840152600160801b8204169282019290925260ff600160c01b8304811615156060830152929350610e2992909184916080840191600160c81b9004166002811115610e0557610e05613d93565b6002811115610e1657610e16613d93565b8152602001600182015481525050612185565b54600160801b900467ffffffffffffffff1692915050565b919050565b607a5460ff1615610e995760405162461bcd60e51b815260206004820152601260248201527f57484954454c4953545f44495341424c454400000000000000000000000000006044820152606401610953565b610ea16121ea565b610eed5760405162461bcd60e51b815260206004820152601160248201527f56414c494441544f525f4e4f545f41464b0000000000000000000000000000006044820152606401610953565b607a80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b3360009081526072602052604090205460ff1680610f3a5750607a5460ff165b610f765760405162461bcd60e51b815260206004820152600d60248201526c2727aa2fab20a624a220aa27a960991b6044820152606401610953565b610f7e611f1b565b610f87336122fa565b6108f733826123eb565b6000610f9c82611db5565b54600160c01b900460ff1692915050565b6000610fc884610fc23686900386018661417f565b846124bd565b90505b9392505050565b6000610fdc613b2e565b6040805160608101825282815260016020820152600091810182905290806110058184816124bd565b94505050505090565b3360009081526072602052604090205460ff168061102e5750607a5460ff165b61106a5760405162461bcd60e51b815260206004820152600d60248201526c2727aa2fab20a624a220aa27a960991b6044820152606401610953565b611072611f1b565b8015806110a35750600061108582611db5565b54600160c81b900460ff1660028111156110a1576110a1613d93565b145b6110ef5760405162461bcd60e51b815260206004820152601760248201527f45585045435445445f415353455254494f4e5f5345454e0000000000000000006044820152606401610953565b33600090815260766020526040902060020154600160401b900460ff166111455760405162461bcd60e51b815260206004820152600a6024820152691393d517d4d51052d15160b21b6044820152606401610953565b33600090815260766020526040902054606083013511156111a85760405162461bcd60e51b815260206004820152601260248201527f494e53554646494349454e545f5354414b4500000000000000000000000000006044820152606401610953565b60006111cb83356111c136869003860160e0870161417f565b60208601356124bd565b90506112446111d982611db5565b6040805160c081018252825467ffffffffffffffff8082168352600160401b820481166020840152600160801b8204169282019290925260ff600160c01b83048116151560608301529092916080840191600160c81b909104166002811115610e0557610e05613d93565b33600090815260766020526040902060010154818114806112785750600061126b82611db5565b5467ffffffffffffffff16115b6112c45760405162461bcd60e51b815260206004820152601860248201527f5354414b45445f4f4e5f414e4f544845525f4252414e434800000000000000006044820152606401610953565b6000806112d2868587612501565b33600090815260766020526040902060010182905590925090508061136e5760006112fc85611db5565b5461131890600160801b900467ffffffffffffffff16436141e6565b905060715481101561136c5760405162461bcd60e51b815260206004820152600a60248201527f54494d455f44454c5441000000000000000000000000000000000000000000006044820152606401610953565b505b61137782611db5565b54600160c01b900460ff166113a057606f546113a0906001600160a01b03166060880135612e85565b505050505050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146114485760405162461bcd60e51b815260206004820152603b60248201527f555550534e6f745570677261646561626c653a206d757374206e6f742062652060448201527f63616c6c6564207468726f7567682064656c656761746563616c6c00000000006064820152608401610953565b507f2b1dbce74324248c222f0ec2d5ed7bd323cfc425b336f0253c5ccfda7265546d90565b600061147882611db5565b54600160401b900467ffffffffffffffff1692915050565b3360009081526072602052604090205460ff16806114b05750607a5460ff165b6114ec5760405162461bcd60e51b815260206004820152600d60248201526c2727aa2fab20a624a220aa27a960991b6044820152606401610953565b6114f4611f1b565b6114fd336122fa565b61150633612f2a565b565b611510611f1b565b607a5461010090046001600160a01b0316331461156f5760405162461bcd60e51b815260206004820152601260248201527f4e4f545f464153545f434f4e4649524d455200000000000000000000000000006044820152606401610953565b61157b84848484611f6e565b50505050565b600061158b611f1b565b600061159633612fa1565b9050600081116115e85760405162461bcd60e51b815260206004820152601460248201527f4e4f5f46554e44535f544f5f57495448445241570000000000000000000000006044820152606401610953565b6070546115ff906001600160a01b03163383613022565b905090565b61160c611f1b565b806116595760405162461bcd60e51b815260206004820152601760248201527f45585045435445445f415353455254494f4e5f484153480000000000000000006044820152606401610953565b600061166482611db5565b54600160c81b900460ff1690506000611694843561168a36879003870160e0880161417f565b60208701356124bd565b90506116a26111d982611db5565b60008260028111156116b6576116b6613d93565b036116ff5760006116c8858386612501565b5090506116d481611db5565b54600160c01b900460ff166116fd57606f546116fd906001600160a01b03166060870135612e85565b505b606b5461157b90849083906101a08801906001600160a01b03166316bf55796001611737611732368d90038d01866141f9565b6130cb565b6117419190614215565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815267ffffffffffffffff9091166004820152602401602060405180830381865afa15801561179e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a89190614236565b600060758267ffffffffffffffff16815481106117e1576117e161424f565b6000918252602090912001546001600160a01b031692915050565b611805836130e0565b61180f828261100e565b611818836131b8565b505050565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a081019190915261185882611db5565b6040805160c081018252825467ffffffffffffffff8082168352600160401b820481166020840152600160801b8204169282019290925260ff600160c01b83048116151560608301529092916080840191600160c81b9091041660028111156118c3576118c3613d93565b60028111156118d4576118d4613d93565b81526020016001820154815250509050919050565b60006115ff6131d0565b607a5460ff16156119465760405162461bcd60e51b815260206004820152601260248201527f57484954454c4953545f44495341424c454400000000000000000000000000006044820152606401610953565b467f000000000000000000000000000000000000000000000000000000000000000003610eed5760405162461bcd60e51b815260206004820152601460248201527f434841494e5f49445f4e4f545f4348414e4745440000000000000000000000006044820152606401610953565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003611a535760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c00000000000000000000000000000000000000006064820152608401610953565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316611a85613203565b6001600160a01b031614611b015760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f787900000000000000000000000000000000000000006064820152608401610953565b6001600160a01b038116611b575760405162461bcd60e51b815260206004820152601060248201527f4e4545445f5354414b455f544f4b454e000000000000000000000000000000006044820152606401610953565b50565b611b7382611b6d3686900386018661417f565b836124bd565b841461157b5760405162461bcd60e51b815260206004820152601660248201527f494e56414c49445f415353455254494f4e5f48415348000000000000000000006044820152606401610953565b60006001611bce83611db5565b54600160c81b900460ff166002811115611bea57611bea613d93565b1492915050565b606b54604080517fee35f32700000000000000000000000000000000000000000000000000000000815290516000926001600160a01b03169163ee35f3279160048083019260209291908290030181865afa158015611c54573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115ff9190614265565b3360009081526072602052604090205460ff1680611c985750607a5460ff165b611cd45760405162461bcd60e51b815260206004820152600d60248201526c2727aa2fab20a624a220aa27a960991b6044820152606401610953565b611cdc611f1b565b611ce6828261322b565b6108f7816131b8565b60408051600481526024810182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f051038f200000000000000000000000000000000000000000000000000000000179052905160009182918291606491611d5b91906142a6565b600060405180830381855afa9150503d8060008114611d96576040519150601f19603f3d011682016040523d82523d6000602084013e611d9b565b606091505b5091509150818015611dae575080516020145b9250505090565b600081611e045760405162461bcd60e51b815260206004820152601b60248201527f415353455254494f4e5f49445f43414e4e4f545f42455f5a45524f00000000006044820152606401610953565b50600090815260746020526040902090565b611ecd82356020840135611e306060860160408701613c54565b611e406080870160608801613d3e565b611e5060a0880160808901613d3e565b60408051602080820197909752808201959095526bffffffffffffffffffffffff19606094851b16938501939093527fffffffffffffffff00000000000000000000000000000000000000000000000060c092831b81166074860152911b16607c8301528051606481840301815260849092019052805191012090565b81146108f75760405162461bcd60e51b815260206004820152601460248201527f434f4e4649475f484153485f4d49534d415443480000000000000000000000006044820152606401610953565b60335460ff16156115065760405162461bcd60e51b815260206004820152601060248201527f5061757361626c653a20706175736564000000000000000000000000000000006044820152606401610953565b6000611f7985611db5565b905060018154600160c81b900460ff166002811115611f9a57611f9a613d93565b14611fe75760405162461bcd60e51b815260206004820152600b60248201527f4e4f545f50454e44494e470000000000000000000000000000000000000000006044820152606401610953565b611ffa84610fc23686900386018661417f565b85146120485760405162461bcd60e51b815260206004820152600c60248201527f434f4e4649524d5f4441544100000000000000000000000000000000000000006044820152606401610953565b600061206161205c368690038601866141f9565b6132f8565b9050600061207c612077368790038701876141f9565b613303565b606c546040517fa04cee6000000000000000000000000000000000000000000000000000000000815260048101839052602481018590529192506001600160a01b03169063a04cee6090604401600060405180830381600087803b1580156120e357600080fd5b505af11580156120f7573d6000803e3d6000fd5b50505060738890555082547fffffffffffff00ffffffffffffffffffffffffffffffffffffffffffffffffff167902000000000000000000000000000000000000000000000000001783556040805183815260208101839052815189927ffc42829b29c259a7370ab56c8f69fce23b5f351a9ce151da453281993ec0090c928290030190a250505050505050565b60008160800151600281111561219d5761219d613d93565b03611b575760405162461bcd60e51b815260206004820152601360248201527f415353455254494f4e5f4e4f545f4558495354000000000000000000000000006044820152606401610953565b6000806121fe6121f960735490565b611db5565b6040805160c081018252825467ffffffffffffffff8082168352600160401b820481166020840152600160801b8204169282019290925260ff600160c01b83048116151560608301529092916080840191600160c81b90910416600281111561226957612269613d93565b600281111561227a5761227a613d93565b81526020016001820154815250509050806040015167ffffffffffffffff166000036122a857600091505090565b805167ffffffffffffffff16156122dc57805143906122d590620313809067ffffffffffffffff166142c2565b1091505090565b4362031380826040015167ffffffffffffffff166122d591906142c2565b6001600160a01b038116600090815260766020526040902060020154600160401b900460ff166123595760405162461bcd60e51b815260206004820152600a6024820152691393d517d4d51052d15160b21b6044820152606401610953565b6001600160a01b0381166000908152607660205260408120600101546073549091908214908061238884611db5565b5467ffffffffffffffff16119050818061239f5750805b61157b5760405162461bcd60e51b815260206004820152600c60248201527f5354414b455f41435449564500000000000000000000000000000000000000006044820152606401610953565b6001600160a01b03821660009081526076602052604081208054808411156124555760405162461bcd60e51b815260206004820152601060248201527f544f4f5f4c4954544c455f5354414b45000000000000000000000000000000006044820152606401610953565b600061246185836141e6565b85845590506124708682612e85565b60408051838152602081018790526001600160a01b038816917febd093d389ab57f3566918d2c379a2b4d9539e8eb95efad9d5e465457833fde6910160405180910390a295945050505050565b6000610fc8846124cc8561330f565b604080516020808201949094528082019290925260608083018790528151808403909101815260809092019052805191012090565b600080612514604086016108ee86611db5565b6001612528610240870161022088016142d5565b600281111561253957612539613d93565b148061256757506002612554610240870161022088016142d5565b600281111561256557612565613d93565b145b6125b35760405162461bcd60e51b815260206004820152601060248201527f4241445f41465445525f535441545553000000000000000000000000000000006044820152606401610953565b836125d586356125cb36899003890160e08a0161417f565b60208901356124bd565b146126225760405162461bcd60e51b815260206004820152601460248201527f494e56414c49445f4245464f52455f53544154450000000000000000000000006044820152606401610953565b6001612636610180870161016088016142d5565b600281111561264757612647613d93565b146126945760405162461bcd60e51b815260206004820152600f60248201527f4241445f505245565f53544154555300000000000000000000000000000000006044820152606401610953565b600061269f85611db5565b90506000806101a0880160e08901826126b8838361333f565b12156127065760405162461bcd60e51b815260206004820152600f60248201527f494e424f585f4241434b574152445300000000000000000000000000000000006044820152606401610953565b600061272c61271b60e08d0160c08e01613d3e565b849067ffffffffffffffff1661344c565b9050600081131561277f5760405162461bcd60e51b815260206004820152600d60248201527f494e424f585f544f4f5f464152000000000000000000000000000000000000006044820152606401610953565b60026127936102408d016102208e016142d5565b60028111156127a4576127a4613d93565b141580156127b25750600081125b15612814576001965060006127c7848461333f565b136128145760405162461bcd60e51b815260206004820152601360248201527f4f564552464c4f575f5354414e445354494c4c000000000000000000000000006044820152606401610953565b606b54604080517e84120c00000000000000000000000000000000000000000000000000000000815290516000926001600160a01b0316916284120c9160048083019260209291908290030181865afa158015612875573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128999190614236565b905060006128a7858361344c565b13156128f55760405162461bcd60e51b815260206004820152600e60248201527f494e424f585f504153545f454e440000000000000000000000000000000000006044820152606401610953565b8061290660e08e0160c08f01613d3e565b67ffffffffffffffff16111561295e5760405162461bcd60e51b815260206004820152601360248201527f494e424f585f4e4f545f504f50554c41544544000000000000000000000000006044820152606401610953565b6000612972611732368790038701876141f9565b67ffffffffffffffff169050818103612997576129908260016142c2565b965061299b565b8196505b806000036129eb5760405162461bcd60e51b815260206004820152601160248201527f454d5054595f494e424f585f434f554e540000000000000000000000000000006044820152606401610953565b606b546001600160a01b03166316bf5579612a076001846141e6565b6040518263ffffffff1660e01b8152600401612a2591815260200190565b602060405180830381865afa158015612a42573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a669190614236565b95505050505050612a8687896101a001803603810190611b6d919061417f565b945085851480612a94575085155b612ae05760405162461bcd60e51b815260206004820152601960248201527f554e45585045435445445f415353455254494f4e5f48415348000000000000006044820152606401610953565b6000612aeb86611db5565b54600160c81b900460ff166002811115612b0757612b07613d93565b14612b545760405162461bcd60e51b815260206004820152600e60248201527f415353455254494f4e5f5345454e0000000000000000000000000000000000006044820152606401610953565b825460685460675460695460665460408051602080820196909652808201949094526bffffffffffffffffffffffff19606093841b16838501527fffffffffffffffff00000000000000000000000000000000000000000000000060c092831b8116607486015288831b16607c85015280516064818603018152608485018083528151918701919091206101448601835260009182905260a4860182905260c4860182905260e4860182905261010486018290526101249095018190528151928301825280835294820185905267ffffffffffffffff43811691830191909152909416159084015260a08301526001608083015250612c52846134db565b60008681526074602090815260409182902083518154928501519385015160608601511515600160c01b027fffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffffffff67ffffffffffffffff928316600160801b02167fffffffffffffff000000000000000000ffffffffffffffffffffffffffffffff968316600160401b027fffffffffffffffffffffffffffffffff00000000000000000000000000000000909616929093169190911793909317939093169290921717808255608083015183929182907fffffffffffff00ffffffffffffffffffffffffffffffffffffffffffffffffff16600160c81b836002811115612d5a57612d5a613d93565b021790555060a0820151816001015590505087867f901c3aee23cf4478825462caaab375c606ab83516060388344f06503407536308b8587606854606754606960009054906101000a90046001600160a01b0316606660009054906101000a900467ffffffffffffffff16604051612dd89796959493929190614368565b60405180910390a37f000000000000000000000000000000000000000000000000000000000000000015612e795760646001600160a01b031663a3b1b31d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612e45573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e699190614236565b6000878152607b60205260409020555b50505050935093915050565b6001600160a01b03821660009081526077602052604081205490612ea983836142c2565b6001600160a01b0385166000908152607760205260408120829055607880549293508592909190612edb9084906142c2565b909155505060408051838152602081018390526001600160a01b038616917fa740af14c56e4e04a617b1de1eb20de73270decbaaead14f142aabf3038e5ae2910160405180910390a250505050565b6001600160a01b03811660009081526076602052604090208054612f4e8382612e85565b612f578361355f565b60408051828152600060208201526001600160a01b038516917febd093d389ab57f3566918d2c379a2b4d9539e8eb95efad9d5e465457833fde691015b60405180910390a2505050565b6001600160a01b0381166000908152607760205260408120805490829055607880548291908490612fd39084906141e6565b909155505060408051828152600060208201526001600160a01b038516917fa740af14c56e4e04a617b1de1eb20de73270decbaaead14f142aabf3038e5ae2910160405180910390a292915050565b6040516001600160a01b0383166024820152604481018290526118189084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152613747565b6020810151600090815b602002015192915050565b3360009081526072602052604090205460ff16806131005750607a5460ff165b61313c5760405162461bcd60e51b815260206004820152600d60248201526c2727aa2fab20a624a220aa27a960991b6044820152606401610953565b613144611f1b565b33600090815260766020526040902060020154600160401b900460ff16156131ae5760405162461bcd60e51b815260206004820152600e60248201527f414c52454144595f5354414b45440000000000000000000000000000000000006044820152606401610953565b611b57338261382c565b607054611b57906001600160a01b0316333084613943565b60007fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b546001600160a01b0316919050565b60007f2b1dbce74324248c222f0ec2d5ed7bd323cfc425b336f0253c5ccfda7265546d6131f4565b3360009081526072602052604090205460ff168061324b5750607a5460ff165b6132875760405162461bcd60e51b815260206004820152600d60248201526c2727aa2fab20a624a220aa27a960991b6044820152606401610953565b61328f611f1b565b6001600160a01b038216600090815260766020526040902060020154600160401b900460ff166132ee5760405162461bcd60e51b815260206004820152600a6024820152691393d517d4d51052d15160b21b6044820152606401610953565b6108f78282613994565b8051600090816130d5565b805160009060016130d5565b6000816040516020016133229190614454565b604051602081830303815290604052805190602001209050919050565b600080613354611732368690038601866141f9565b9050600061336a611732368690038601866141f9565b90508067ffffffffffffffff168267ffffffffffffffff1610156133945760001992505050610d82565b8067ffffffffffffffff168267ffffffffffffffff1611156133bb57600192505050610d82565b60006133d46133cf368890038801886141f9565b613a0b565b905060006133ea6133cf368890038801886141f9565b90508067ffffffffffffffff168267ffffffffffffffff16101561341657600019945050505050610d82565b8067ffffffffffffffff168267ffffffffffffffff16111561343f576001945050505050610d82565b6000945050505050610d82565b600080613461611732368690038601866141f9565b9050828167ffffffffffffffff16101561348057600019915050610d82565b828167ffffffffffffffff16111561349c576001915050610d82565b60006134b06133cf368790038701876141f9565b67ffffffffffffffff1611156134ca576001915050610d82565b6000915050610d82565b5092915050565b805467ffffffffffffffff1660000361350b57805467ffffffffffffffff19164367ffffffffffffffff16179055565b8054600160401b900467ffffffffffffffff16600003611b575780547fffffffffffffffffffffffffffffffff0000000000000000ffffffffffffffff16600160401b4367ffffffffffffffff1602179055565b6001600160a01b03811660009081526076602052604090206002810154600160401b900460ff166135bf5760405162461bcd60e51b815260206004820152600a6024820152691393d517d4d51052d15160b21b6044820152606401610953565b60028101546075805467ffffffffffffffff909216916135e1906001906141e6565b815481106135f1576135f161424f565b600091825260209091200154607580546001600160a01b039092169167ffffffffffffffff84169081106136275761362761424f565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550806076600060758467ffffffffffffffff16815481106136775761367761424f565b6000918252602080832091909101546001600160a01b031683528201929092526040019020600201805467ffffffffffffffff191667ffffffffffffffff9290921691909117905560758054806136d0576136d06144de565b60008281526020808220830160001990810180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690559092019092556001600160a01b0394909416815260769093525050604081208181556001810191909155600201805468ffffffffffffffffff19169055565b600061379c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316613a1a9092919063ffffffff16565b80519091501561181857808060200190518101906137ba91906144f4565b6118185760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610953565b6075805460018082019092557f9a8d93986a7b9e6294572ea6736696119c195c1a9f5eae642d3c5fcd44e49dea810180546001600160a01b0386167fffffffffffffffffffffffff0000000000000000000000000000000000000000909116811790915560408051608081018252858152607354602082810191825267ffffffffffffffff80871684860190815260608501898152600088815260769094528684209551865593519885019890985596516002909301805492511515600160401b0268ffffffffffffffffff1990931693909716929092171790945551919290917febd093d389ab57f3566918d2c379a2b4d9539e8eb95efad9d5e465457833fde691612f94918690918252602082015260400190565b6040516001600160a01b038085166024830152831660448201526064810182905261157b9085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401613067565b6001600160a01b0382166000908152607660205260408120805490916139ba84836142c2565b80845560408051848152602081018390529192506001600160a01b038716917febd093d389ab57f3566918d2c379a2b4d9539e8eb95efad9d5e465457833fde6910160405180910390a25050505050565b602081015160009060016130d5565b6060610fc88484600085856001600160a01b0385163b613a7c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610953565b600080866001600160a01b03168587604051613a9891906142a6565b60006040518083038185875af1925050503d8060008114613ad5576040519150601f19603f3d011682016040523d82523d6000602084013e613ada565b606091505b5091509150613aea828286613af5565b979650505050505050565b60608315613b04575081610fcb565b825115613b145782518084602001fd5b8160405162461bcd60e51b8152600401610953919061450f565b6040518060400160405280613b41613b53565b8152602001613b4e613b53565b905290565b60405180604001604052806002906020820280368337509192915050565b600060a08284031215613b8357600080fd5b50919050565b60008060c08385031215613b9c57600080fd5b82359150613bad8460208501613b71565b90509250929050565b600060c08284031215613b8357600080fd5b6000806000806000806101e08789031215613be257600080fd5b8635955060208701359450613bfa8860408901613bb6565b93506101008701359250613c12886101208901613b71565b91506101c087013590509295509295509295565b600060208284031215613c3857600080fd5b5035919050565b6001600160a01b0381168114611b5757600080fd5b600060208284031215613c6657600080fd5b8135610fcb81613c3f565b60008060006101008486031215613c8757600080fd5b83359250613c988560208601613bb6565b915060e084013590509250925092565b60006102608284031215613b8357600080fd5b6000806102808385031215613ccf57600080fd5b613cd98484613ca8565b94610260939093013593505050565b6000806000806101208587031215613cff57600080fd5b8435935060208501359250613d178660408701613bb6565b939692955092936101000135925050565b67ffffffffffffffff81168114611b5757600080fd5b600060208284031215613d5057600080fd5b8135610fcb81613d28565b60008060006102a08486031215613d7157600080fd5b83359250613d828560208601613ca8565b915061028084013590509250925092565b634e487b7160e01b600052602160045260246000fd5b60038110611b5757634e487b7160e01b600052602160045260246000fd5b600060c08201905067ffffffffffffffff808451168352806020850151166020840152806040850151166040840152506060830151151560608301526080830151613e1181613da9565b8060808401525060a083015160a083015292915050565b6000806000806101208587031215613e3f57600080fd5b84359350613e508660208701613bb6565b939693955050505060e082013591610100013590565b60008060408385031215613e7957600080fd5b8235613e8481613c3f565b946020939093013593505050565b634e487b7160e01b600052601160045260246000fd5b67ffffffffffffffff8181168382160190808211156134d4576134d4613e92565b634e487b7160e01b600052604160045260246000fd5b6040516101e0810167ffffffffffffffff81118282101715613f0357613f03613ec9565b60405290565b6040805190810167ffffffffffffffff81118282101715613f0357613f03613ec9565b8051610e4181613c3f565b8051610e4181613d28565b805160028110610e4157600080fd5b805160ff81168114610e4157600080fd5b80518015158114610e4157600080fd5b60006101e08284031215613f8557600080fd5b613f8d613edf565b825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c082015260e083015160e0820152610100613fe5818501613f2c565b90820152610120613ff7848201613f37565b90820152610140614009848201613f37565b9082015261016061401b848201613f42565b9082015261018061402d848201613f51565b908201526101a061403f848201613f62565b908201526101c0614051848201613f37565b908201529392505050565b600082601f83011261406d57600080fd5b6040516040810181811067ffffffffffffffff8211171561409057614090613ec9565b80604052508060408401858111156140a757600080fd5b845b818110156140ca5780356140bc81613d28565b8352602092830192016140a9565b509195945050505050565b6000608082840312156140e757600080fd5b6040516040810181811067ffffffffffffffff8211171561410a5761410a613ec9565b604052905080601f8301841361411f57600080fd5b614127613f09565b80604085018681111561413957600080fd5b855b8181101561415357803584526020938401930161413b565b50818452614161878261405c565b60208501525050505092915050565b803560038110610e4157600080fd5b600060c0828403121561419157600080fd5b6040516060810181811067ffffffffffffffff821117156141b4576141b4613ec9565b6040526141c184846140d5565b81526141cf60808401614170565b602082015260a09290920135604083015250919050565b81810381811115610d8257610d82613e92565b60006080828403121561420b57600080fd5b610fcb83836140d5565b67ffffffffffffffff8281168282160390808211156134d4576134d4613e92565b60006020828403121561424857600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561427757600080fd5b8151610fcb81613c3f565b60005b8381101561429d578181015183820152602001614285565b50506000910152565b600082516142b8818460208701614282565b9190910192915050565b80820180821115610d8257610d82613e92565b6000602082840312156142e757600080fd5b610fcb82614170565b6142f981613da9565b9052565b6040818337604082016040820160005b600281101561434057813561432181613d28565b67ffffffffffffffff168352602092830192919091019060010161430d565b50505061434f60808201614170565b61435881613da9565b608083015260a090810135910152565b6000610320820190508835825260208901356020830152604089013560408301526060890135606083015260808901356143a181613c3f565b6001600160a01b0316608083015260a08901356143bd81613d28565b67ffffffffffffffff90811660a084015260c08a0135906143dd82613d28565b1660c08301526143f360e0808401908b016142fd565b6101a0614404818401828c016142fd565b508761026083015286610280830152856102a0830152846102c08301526144376102e08301856001600160a01b03169052565b67ffffffffffffffff831661030083015298975050505050505050565b8151805160c0830191908360005b6002811015614481578251825260209283019290910190600101614462565b505050602090810151906040840160005b60028110156144b957835167ffffffffffffffff1682529282019290820190600101614492565b505084015190506144cd60808401826142f0565b50604083015160a083015292915050565b634e487b7160e01b600052603160045260246000fd5b60006020828403121561450657600080fd5b610fcb82613f62565b602081526000825180602084015261452e816040850160208701614282565b601f01601f1916919091016040019291505056fea26469706673582212208223e2bb339e2bb0c7eb802ad0b013035cf5e86297ccbc3fba2e9a6b81f7e86d64736f6c63430008110033";

type BoldRollupUserLogicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BoldRollupUserLogicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BoldRollupUserLogic__factory extends ContractFactory {
  constructor(...args: BoldRollupUserLogicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "BoldRollupUserLogic";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BoldRollupUserLogic> {
    return super.deploy(overrides || {}) as Promise<BoldRollupUserLogic>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BoldRollupUserLogic {
    return super.attach(address) as BoldRollupUserLogic;
  }
  connect(signer: Signer): BoldRollupUserLogic__factory {
    return super.connect(signer) as BoldRollupUserLogic__factory;
  }
  static readonly contractName: "BoldRollupUserLogic";
  public readonly contractName: "BoldRollupUserLogic";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BoldRollupUserLogicInterface {
    return new utils.Interface(_abi) as BoldRollupUserLogicInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BoldRollupUserLogic {
    return new Contract(address, _abi, signerOrProvider) as BoldRollupUserLogic;
  }
}
