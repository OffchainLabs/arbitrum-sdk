/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC20RollupEventInbox,
  ERC20RollupEventInboxInterface,
} from "../ERC20RollupEventInbox";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyInit",
    type: "error",
  },
  {
    inputs: [],
    name: "HadZeroInit",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "messageNum",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "InboxMessageDelivered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "messageNum",
        type: "uint256",
      },
    ],
    name: "InboxMessageDeliveredFromOrigin",
    type: "event",
  },
  {
    inputs: [],
    name: "bridge",
    outputs: [
      {
        internalType: "contract IBridge",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IBridge",
        name: "_bridge",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rollup",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "chainConfig",
        type: "string",
      },
    ],
    name: "rollupInitialized",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b5060805161070f61002f600039600060c6015261070f6000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063c4d66de814610051578063cb23bcb514610066578063cf8d56d614610095578063e78cea92146100a8575b600080fd5b61006461005f366004610534565b6100bb565b005b600154610079906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b6100646100a3366004610551565b61024e565b600054610079906001600160a01b031681565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016141561014e5760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b60648201526084015b60405180910390fd5b6000546001600160a01b03161561017857604051633bcd329760e21b815260040160405180910390fd5b6001600160a01b03811661019f57604051631ad0f74360e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b0383169081179091556040805163cb23bcb560e01b8152905163cb23bcb591600480820192602092909190829003018186803b1580156101f357600080fd5b505afa158015610207573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022b91906105cd565b600180546001600160a01b0319166001600160a01b039290921691909117905550565b6001546001600160a01b031633146102965760405162461bcd60e51b815260206004820152600b60248201526a04f4e4c595f524f4c4c55560ac1b6044820152606401610145565b806102d85760405162461bcd60e51b8152602060048201526012602482015271454d5054595f434841494e5f434f4e46494760701b6044820152606401610145565b6001486102e36103e1565b1561036757606c6001600160a01b031663f5d6ded76040518163ffffffff1660e01b815260040160206040518083038186803b15801561032257600080fd5b505afa158015610336573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035a91906105ea565b6103649082610603565b90505b60008583838787604051602001610382959493929190610629565b6040516020818303038152906040529050600061039e82610479565b9050807fff64905f73a67fb594e0f940a8075a860db489ad991e032f48c81123eb52d60b836040516103d0919061068a565b60405180910390a250505050505050565b60408051600481526024810182526020810180516001600160e01b03166302881c7960e11b17905290516000918291829160649161041f91906106bd565b600060405180830381855afa9150503d806000811461045a576040519150601f19603f3d011682016040523d82523d6000602084013e61045f565b606091505b5091509150818015610472575080516020145b9250505090565b60008054825160208401206040516375d81e2560e01b8152600b60048201526024810184905260448101919091526064810183905282916001600160a01b0316906375d81e2590608401602060405180830381600087803b1580156104dd57600080fd5b505af11580156104f1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051591906105ea565b9392505050565b6001600160a01b038116811461053157600080fd5b50565b60006020828403121561054657600080fd5b81356105158161051c565b60008060006040848603121561056657600080fd5b83359250602084013567ffffffffffffffff8082111561058557600080fd5b818601915086601f83011261059957600080fd5b8135818111156105a857600080fd5b8760208285010111156105ba57600080fd5b6020830194508093505050509250925092565b6000602082840312156105df57600080fd5b81516105158161051c565b6000602082840312156105fc57600080fd5b5051919050565b6000821982111561062457634e487b7160e01b600052601160045260246000fd5b500190565b85815260ff60f81b8560f81b1660208201528360218201528183604183013760009101604101908152949350505050565b60005b8381101561067557818101518382015260200161065d565b83811115610684576000848401525b50505050565b60208152600082518060208401526106a981604085016020870161065a565b601f01601f19169190910160400192915050565b600082516106cf81846020870161065a565b919091019291505056fea264697066735822122002035b44429f177fd76ade8dbaaf9c161a82e1bb7fd591b41db6a8241b5bfe5864736f6c63430008090033";

type ERC20RollupEventInboxConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20RollupEventInboxConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20RollupEventInbox__factory extends ContractFactory {
  constructor(...args: ERC20RollupEventInboxConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ERC20RollupEventInbox";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC20RollupEventInbox> {
    return super.deploy(overrides || {}) as Promise<ERC20RollupEventInbox>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC20RollupEventInbox {
    return super.attach(address) as ERC20RollupEventInbox;
  }
  connect(signer: Signer): ERC20RollupEventInbox__factory {
    return super.connect(signer) as ERC20RollupEventInbox__factory;
  }
  static readonly contractName: "ERC20RollupEventInbox";
  public readonly contractName: "ERC20RollupEventInbox";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20RollupEventInboxInterface {
    return new utils.Interface(_abi) as ERC20RollupEventInboxInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20RollupEventInbox {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC20RollupEventInbox;
  }
}
