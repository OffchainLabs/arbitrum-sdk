/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RollupAdminLogic,
  RollupAdminLogicInterface,
} from "../RollupAdminLogic";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "nodeNum",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "blockHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "sendRoot",
        type: "bytes32",
      },
    ],
    name: "NodeConfirmed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "nodeNum",
        type: "uint64",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "parentNodeHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "nodeHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "executionHash",
        type: "bytes32",
      },
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes32[2]",
                    name: "bytes32Vals",
                    type: "bytes32[2]",
                  },
                  {
                    internalType: "uint64[2]",
                    name: "u64Vals",
                    type: "uint64[2]",
                  },
                ],
                internalType: "struct GlobalState",
                name: "globalState",
                type: "tuple",
              },
              {
                internalType: "enum MachineStatus",
                name: "machineStatus",
                type: "uint8",
              },
            ],
            internalType: "struct RollupLib.ExecutionState",
            name: "beforeState",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes32[2]",
                    name: "bytes32Vals",
                    type: "bytes32[2]",
                  },
                  {
                    internalType: "uint64[2]",
                    name: "u64Vals",
                    type: "uint64[2]",
                  },
                ],
                internalType: "struct GlobalState",
                name: "globalState",
                type: "tuple",
              },
              {
                internalType: "enum MachineStatus",
                name: "machineStatus",
                type: "uint8",
              },
            ],
            internalType: "struct RollupLib.ExecutionState",
            name: "afterState",
            type: "tuple",
          },
          {
            internalType: "uint64",
            name: "numBlocks",
            type: "uint64",
          },
        ],
        indexed: false,
        internalType: "struct RollupLib.Assertion",
        name: "assertion",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "afterInboxBatchAcc",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "wasmModuleRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "inboxMaxCount",
        type: "uint256",
      },
    ],
    name: "NodeCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "nodeNum",
        type: "uint64",
      },
    ],
    name: "NodeRejected",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "OwnerFunctionCalled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "challengeIndex",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "asserter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "challenger",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "challengedNode",
        type: "uint64",
      },
    ],
    name: "RollupChallengeStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "machineHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
    ],
    name: "RollupInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "UpgradedSecondary",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "initialBalance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "finalBalance",
        type: "uint256",
      },
    ],
    name: "UserStakeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "initialBalance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "finalBalance",
        type: "uint256",
      },
    ],
    name: "UserWithdrawableFundsUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_stakerMap",
    outputs: [
      {
        internalType: "uint256",
        name: "amountStaked",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "index",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "latestStakedNode",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "currentChallenge",
        type: "uint64",
      },
      {
        internalType: "bool",
        name: "isStaked",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "amountStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseStake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bridge",
    outputs: [
      {
        internalType: "contract IBridge",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "chainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "challengeManager",
    outputs: [
      {
        internalType: "contract IChallengeManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "confirmPeriodBlocks",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes32[2]",
                    name: "bytes32Vals",
                    type: "bytes32[2]",
                  },
                  {
                    internalType: "uint64[2]",
                    name: "u64Vals",
                    type: "uint64[2]",
                  },
                ],
                internalType: "struct GlobalState",
                name: "globalState",
                type: "tuple",
              },
              {
                internalType: "enum MachineStatus",
                name: "machineStatus",
                type: "uint8",
              },
            ],
            internalType: "struct RollupLib.ExecutionState",
            name: "beforeState",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes32[2]",
                    name: "bytes32Vals",
                    type: "bytes32[2]",
                  },
                  {
                    internalType: "uint64[2]",
                    name: "u64Vals",
                    type: "uint64[2]",
                  },
                ],
                internalType: "struct GlobalState",
                name: "globalState",
                type: "tuple",
              },
              {
                internalType: "enum MachineStatus",
                name: "machineStatus",
                type: "uint8",
              },
            ],
            internalType: "struct RollupLib.ExecutionState",
            name: "afterState",
            type: "tuple",
          },
          {
            internalType: "uint64",
            name: "numBlocks",
            type: "uint64",
          },
        ],
        internalType: "struct RollupLib.Assertion",
        name: "assertion",
        type: "tuple",
      },
    ],
    name: "createNitroMigrationGenesis",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "currentChallenge",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "extraChallengeTimeBlocks",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "firstUnresolvedNode",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "nodeNum",
        type: "uint64",
      },
      {
        internalType: "bytes32",
        name: "blockHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "sendRoot",
        type: "bytes32",
      },
    ],
    name: "forceConfirmNode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "prevNode",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "prevNodeInboxMaxCount",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes32[2]",
                    name: "bytes32Vals",
                    type: "bytes32[2]",
                  },
                  {
                    internalType: "uint64[2]",
                    name: "u64Vals",
                    type: "uint64[2]",
                  },
                ],
                internalType: "struct GlobalState",
                name: "globalState",
                type: "tuple",
              },
              {
                internalType: "enum MachineStatus",
                name: "machineStatus",
                type: "uint8",
              },
            ],
            internalType: "struct RollupLib.ExecutionState",
            name: "beforeState",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes32[2]",
                    name: "bytes32Vals",
                    type: "bytes32[2]",
                  },
                  {
                    internalType: "uint64[2]",
                    name: "u64Vals",
                    type: "uint64[2]",
                  },
                ],
                internalType: "struct GlobalState",
                name: "globalState",
                type: "tuple",
              },
              {
                internalType: "enum MachineStatus",
                name: "machineStatus",
                type: "uint8",
              },
            ],
            internalType: "struct RollupLib.ExecutionState",
            name: "afterState",
            type: "tuple",
          },
          {
            internalType: "uint64",
            name: "numBlocks",
            type: "uint64",
          },
        ],
        internalType: "struct RollupLib.Assertion",
        name: "assertion",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "expectedNodeHash",
        type: "bytes32",
      },
    ],
    name: "forceCreateNode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "staker",
        type: "address[]",
      },
    ],
    name: "forceRefundStaker",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "stakerA",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "stakerB",
        type: "address[]",
      },
    ],
    name: "forceResolveChallenge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "nodeNum",
        type: "uint64",
      },
    ],
    name: "getNode",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "stateHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "challengeHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "confirmData",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "prevNum",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "deadlineBlock",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "noChildConfirmedBeforeBlock",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "stakerCount",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "childStakerCount",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "firstChildBlock",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "latestChildNumber",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "createdAtBlock",
            type: "uint64",
          },
          {
            internalType: "bytes32",
            name: "nodeHash",
            type: "bytes32",
          },
        ],
        internalType: "struct Node",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "getStaker",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amountStaked",
            type: "uint256",
          },
          {
            internalType: "uint64",
            name: "index",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "latestStakedNode",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "currentChallenge",
            type: "uint64",
          },
          {
            internalType: "bool",
            name: "isStaked",
            type: "bool",
          },
        ],
        internalType: "struct IRollupCore.Staker",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "stakerNum",
        type: "uint64",
      },
    ],
    name: "getStakerAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "inbox",
    outputs: [
      {
        internalType: "contract IInbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "confirmPeriodBlocks",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "extraChallengeTimeBlocks",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "stakeToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "baseStake",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "wasmModuleRoot",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "loserStakeEscrow",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
          {
            internalType: "uint64",
            name: "genesisBlockNum",
            type: "uint64",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "delayBlocks",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "futureBlocks",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "delaySeconds",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "futureSeconds",
                type: "uint256",
              },
            ],
            internalType: "struct ISequencerInbox.MaxTimeVariation",
            name: "sequencerInboxMaxTimeVariation",
            type: "tuple",
          },
        ],
        internalType: "struct Config",
        name: "config",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "contract IBridge",
            name: "bridge",
            type: "address",
          },
          {
            internalType: "contract ISequencerInbox",
            name: "sequencerInbox",
            type: "address",
          },
          {
            internalType: "contract IInbox",
            name: "inbox",
            type: "address",
          },
          {
            internalType: "contract IOutbox",
            name: "outbox",
            type: "address",
          },
          {
            internalType: "contract IRollupEventInbox",
            name: "rollupEventInbox",
            type: "address",
          },
          {
            internalType: "contract IChallengeManager",
            name: "challengeManager",
            type: "address",
          },
          {
            internalType: "contract IRollupAdmin",
            name: "rollupAdminLogic",
            type: "address",
          },
          {
            internalType: "contract IRollupUser",
            name: "rollupUserLogic",
            type: "address",
          },
          {
            internalType: "address",
            name: "validatorUtils",
            type: "address",
          },
          {
            internalType: "address",
            name: "validatorWalletCreator",
            type: "address",
          },
        ],
        internalType: "struct ContractDependencies",
        name: "connectedContracts",
        type: "tuple",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "isStaked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "isStakedOnLatestConfirmed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isValidator",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "isZombie",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastStakeBlock",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestConfirmed",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestNodeCreated",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "latestStakedNode",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "loserStakeEscrow",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minimumAssertionPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "nodeNum",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "nodeHasStaker",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "outbox",
    outputs: [
      {
        internalType: "contract IOutbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_outbox",
        type: "address",
      },
    ],
    name: "removeOldOutbox",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "resume",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rollupDeploymentBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rollupEventInbox",
    outputs: [
      {
        internalType: "contract IRollupEventInbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sequencerInbox",
    outputs: [
      {
        internalType: "contract ISequencerInbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newBaseStake",
        type: "uint256",
      },
    ],
    name: "setBaseStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "newConfirmPeriod",
        type: "uint64",
      },
    ],
    name: "setConfirmPeriodBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_inbox",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_enabled",
        type: "bool",
      },
    ],
    name: "setDelayedInbox",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "newExtraTimeBlocks",
        type: "uint64",
      },
    ],
    name: "setExtraChallengeTimeBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IInbox",
        name: "newInbox",
        type: "address",
      },
    ],
    name: "setInbox",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newLoserStakerEscrow",
        type: "address",
      },
    ],
    name: "setLoserStakeEscrow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newPeriod",
        type: "uint256",
      },
    ],
    name: "setMinimumAssertionPeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IOutbox",
        name: "_outbox",
        type: "address",
      },
    ],
    name: "setOutbox",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sequencerInbox",
        type: "address",
      },
    ],
    name: "setSequencerInbox",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newStakeToken",
        type: "address",
      },
    ],
    name: "setStakeToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_validator",
        type: "address[]",
      },
      {
        internalType: "bool[]",
        name: "_val",
        type: "bool[]",
      },
    ],
    name: "setValidator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_validatorWhitelistDisabled",
        type: "bool",
      },
    ],
    name: "setValidatorWhitelistDisabled",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "newWasmModuleRoot",
        type: "bytes32",
      },
    ],
    name: "setWasmModuleRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakeToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakerCount",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalWithdrawableFunds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beacon",
        type: "address",
      },
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeBeacon",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeSecondaryTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeSecondaryToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "validatorUtils",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "validatorWalletCreator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "validatorWhitelistDisabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wasmModuleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "withdrawableFunds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "zombieNum",
        type: "uint256",
      },
    ],
    name: "zombieAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "zombieCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "zombieNum",
        type: "uint256",
      },
    ],
    name: "zombieLatestStakedNode",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b506080516156e26200007760003960008181611046015281816110860152818161112c0152818161116c01528181611977015281816119b701528181611b5a01528181611b9a01528181611c8c01528181612554015261259401526156e26000f3fe6080604052600436106103855760003560e01c80637ba9534a116101d3578063bc45e0ae11610103578063ee35f3271161009b578063ee35f32714610cdd578063ef40a67014610cfd578063f065de3f14610d33578063f33e1fac14610d53578063f38c937914610d73578063facd743b14610d93578063fb0e722b14610dc3578063fc8ffa0314610de3578063ff204f3b14610e0357600080fd5b8063bc45e0ae14610b4e578063ce11e6ab14610b6e578063ce66d05c14610b8e578063d01e660214610bae578063d735e21d14610bce578063dcd030aa14610bf3578063dff6978714610c13578063e78cea9214610c28578063e8bd492214610c4857600080fd5b806392c8134c1161017657806392c8134c14610949578063948d6588146109765780639846129a146109965780639a8a0592146109a9578063a23c44b1146109bf578063a2b4f1d814610ace578063a3ffb77214610aee578063aa38a6e714610b0e578063aa65af4814610b2e57600080fd5b80637ba9534a146108645780637c75c298146108795780638456cb5914610899578063848bf918146108ae5780638640ce5f146108ce57806389384960146108f35780638ee1a1261461091357806391c657e81461092957600080fd5b806347fb24c5116102b95780636177fd18116102515780636177fd181461071257806363721d6b1461075557806365f7f80d1461076a57806369fd251c146107885780636ddd3744146107d157806371ef232c146107f157806376e7e23b14610807578063771b2f971461081d5780637b83a3fe1461084457600080fd5b806347fb24c5146106125780634f1ef286146106325780634f61f8501461064557806351ed6a301461066557806352d1902d1461068557806353b60c4a1461069a578063567ca41b146106ba5780635c975abb146106da5780636136fe2e146106f257600080fd5b80631b1689e91161032c5780631b1689e9146104a157806329ce5f2b146104c55780632e7acfa6146104e55780632f30cabd1461051d5780632f7968e8146105535780633659cfe6146105735780633e96576e1461059357806345e38b64146105dc578063470dce4e146105f257600080fd5b8063014cc92c1461038a578063023a96fe146103c05780630397d458146103e0578063046f7da21461040257806306ae5851146104175780630d40a0fd1461043757806312ab3d3b1461045757806313af403514610481575b600080fd5b34801561039657600080fd5b50606f546103aa906001600160a01b031681565b6040516103b79190614aac565b60405180910390f35b3480156103cc57600080fd5b50606e546103aa906001600160a01b031681565b3480156103ec57600080fd5b506104006103fb366004614ad5565b610e23565b005b34801561040e57600080fd5b50610400610ff5565b34801561042357600080fd5b50610400610432366004614af2565b611019565b34801561044357600080fd5b50610400610452366004614ad5565b61103b565b34801561046357600080fd5b50607e546104719060ff1681565b60405190151581526020016103b7565b34801561048d57600080fd5b5061040061049c366004614ad5565b6110fb565b3480156104ad57600080fd5b506104b7607d5481565b6040519081526020016103b7565b3480156104d157600080fd5b506104006104e0366004614b0b565b611121565b3480156104f157600080fd5b50606554610505906001600160401b031681565b6040516001600160401b0390911681526020016103b7565b34801561052957600080fd5b506104b7610538366004614ad5565b6001600160a01b03166000908152607b602052604090205490565b34801561055f57600080fd5b5061040061056e366004614b6f565b611920565b34801561057f57600080fd5b5061040061058e366004614ad5565b61196c565b34801561059f57600080fd5b506105056105ae366004614ad5565b6001600160a01b0316600090815260796020526040902060010154600160401b90046001600160401b031690565b3480156105e857600080fd5b506104b760735481565b3480156105fe57600080fd5b5061040061060d366004614bbb565b611a29565b34801561061e57600080fd5b5061040061062d366004614c10565b611acd565b610400610640366004614cb7565b611b4f565b34801561065157600080fd5b50610400610660366004614ad5565b611c00565b34801561067157600080fd5b506072546103aa906001600160a01b031681565b34801561069157600080fd5b506104b7611c7f565b3480156106a657600080fd5b506104006106b5366004614ad5565b611d2d565b3480156106c657600080fd5b506104006106d5366004614ad5565b611d65565b3480156106e657600080fd5b5060335460ff16610471565b3480156106fe57600080fd5b5061040061070d366004614d5e565b611e32565b34801561071e57600080fd5b5061047161072d366004614ad5565b6001600160a01b0316600090815260796020526040902060010154600160c01b900460ff1690565b34801561076157600080fd5b50607a546104b7565b34801561077657600080fd5b506075546001600160401b0316610505565b34801561079457600080fd5b506105056107a3366004614ad5565b6001600160a01b0316600090815260796020526040902060010154600160801b90046001600160401b031690565b3480156107dd57600080fd5b506103aa6107ec366004614d5e565b611e74565b3480156107fd57600080fd5b506104b7607c5481565b34801561081357600080fd5b506104b760675481565b34801561082957600080fd5b5060655461050590600160401b90046001600160401b031681565b34801561085057600080fd5b5061040061085f366004614d79565b611ead565b34801561087057600080fd5b506105056121b0565b34801561088557600080fd5b50610400610894366004614de1565b6121c6565b3480156108a557600080fd5b5061040061233a565b3480156108ba57600080fd5b506104006108c9366004614e22565b61235e565b3480156108da57600080fd5b50607554600160c01b90046001600160401b0316610505565b3480156108ff57600080fd5b5061040061090e366004614af2565b6123da565b34801561091f57600080fd5b506104b760685481565b34801561093557600080fd5b50610471610944366004614ad5565b6123fc565b34801561095557600080fd5b50610969610964366004614d5e565b612460565b6040516103b79190614e50565b34801561098257600080fd5b50610400610991366004614af2565b612527565b6104006109a4366004614cb7565b612549565b3480156109b557600080fd5b506104b760665481565b3480156109cb57600080fd5b50610a796109da366004614ad5565b6040805160a081018252600080825260208201819052918101829052606081018290526080810191909152506001600160a01b0316600090815260796020908152604091829020825160a081018452815481526001909101546001600160401b0380821693830193909352600160401b8104831693820193909352600160801b83049091166060820152600160c01b90910460ff161515608082015290565b6040516103b79190600060a0820190508251825260208301516001600160401b038082166020850152806040860151166040850152806060860151166060850152505060808301511515608083015292915050565b348015610ada57600080fd5b50610400610ae9366004614f4c565b6125f6565b348015610afa57600080fd5b50610400610b09366004614f69565b612621565b348015610b1a57600080fd5b50606d546103aa906001600160a01b031681565b348015610b3a57600080fd5b50610471610b49366004614fd4565b612715565b348015610b5a57600080fd5b506070546103aa906001600160a01b031681565b348015610b7a57600080fd5b50606b546103aa906001600160a01b031681565b348015610b9a57600080fd5b50610400610ba9366004614d5e565b61274c565b348015610bba57600080fd5b506103aa610bc9366004614af2565b6127d7565b348015610bda57600080fd5b50607554600160401b90046001600160401b0316610505565b348015610bff57600080fd5b50610471610c0e366004614ad5565b6127ec565b348015610c1f57600080fd5b50607854610505565b348015610c3457600080fd5b50606a546103aa906001600160a01b031681565b348015610c5457600080fd5b50610ca5610c63366004614ad5565b607960205260009081526040902080546001909101546001600160401b0380821691600160401b8104821691600160801b82041690600160c01b900460ff1685565b604080519586526001600160401b0394851660208701529284169285019290925290911660608301521515608082015260a0016103b7565b348015610ce957600080fd5b50606c546103aa906001600160a01b031681565b348015610d0957600080fd5b506104b7610d18366004614ad5565b6001600160a01b031660009081526079602052604090205490565b348015610d3f57600080fd5b506071546103aa906001600160a01b031681565b348015610d5f57600080fd5b50610505610d6e366004614af2565b61282f565b348015610d7f57600080fd5b50610400610d8e366004614f69565b612866565b348015610d9f57600080fd5b50610471610dae366004614ad5565b60746020526000908152604090205460ff1681565b348015610dcf57600080fd5b506069546103aa906001600160a01b031681565b348015610def57600080fd5b50610400610dfe366004614ad5565b612a76565b348015610e0f57600080fd5b50610400610e1e366004614ad5565b612b08565b60335460ff16610e4e5760405162461bcd60e51b8152600401610e4590614ff0565b60405180910390fd5b6000806001600160a01b0316826001600160a01b0316141590506000306001600160a01b031663cd205fda6040518163ffffffff1660e01b815260040160206040518083038186803b158015610ea357600080fd5b505afa158015610eb7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610edb919061501e565b905081151581151514610f285760405162461bcd60e51b81526020600482015260156024820152741393d7d554d15497d313d1d250d7d4d5541413d495605a1b6044820152606401610e45565b6078546001600160401b031615610f755760405162461bcd60e51b81526020600482015260116024820152704e4f5f4143544956455f5354414b45525360781b6044820152606401610e45565b607c5415610fbb5760405162461bcd60e51b81526020600482015260136024820152724e4f5f50454e44494e475f574954484452415760681b6044820152606401610e45565b607280546001600160a01b0319166001600160a01b038516179055604051600d9060008051602061566683398151915290600090a2505050565b610ffd612ba0565b60405160049060008051602061566683398151915290600090a2565b6067819055604051600c9060008051602061566683398151915290600090a250565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156110845760405162461bcd60e51b8152600401610e459061503b565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166110b6612c06565b6001600160a01b0316146110dc5760405162461bcd60e51b8152600401610e4590615087565b604080516000808252602082019092526110f891839190612c27565b50565b61110481612dc7565b60405160079060008051602061566683398151915290600090a250565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016141561116a5760405162461bcd60e51b8152600401610e459061503b565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661119c612c06565b6001600160a01b0316146111c25760405162461bcd60e51b8152600401610e4590615087565b600054610100900460ff166111dd5760005460ff16156111e1565b303b155b6112445760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610e45565b600054610100900460ff16158015611266576000805461ffff19166101011790555b43607d556112776020830183614ad5565b606a80546001600160a01b0319166001600160a01b03929092169190911790556112a76040830160208401614ad5565b606c80546001600160a01b0319166001600160a01b03929092169190911790556112d46020830183614ad5565b6001600160a01b03166347fb24c56112f26060850160408601614ad5565b60016040518363ffffffff1660e01b81526004016113119291906150d3565b600060405180830381600087803b15801561132b57600080fd5b505af115801561133f573d6000803e3d6000fd5b50611351925050506020830183614ad5565b6001600160a01b0316634f61f85061136f6040850160208601614ad5565b6040518263ffffffff1660e01b815260040161138b9190614aac565b600060405180830381600087803b1580156113a557600080fd5b505af11580156113b9573d6000803e3d6000fd5b506113ce925050506060830160408401614ad5565b606980546001600160a01b0319166001600160a01b03929092169190911790556113fe6080830160608401614ad5565b606b80546001600160a01b0319166001600160a01b039290921691909117905561142b6020830183614ad5565b6001600160a01b031663cee3d7286114496080850160608601614ad5565b60016040518363ffffffff1660e01b81526004016114689291906150d3565b600060405180830381600087803b15801561148257600080fd5b505af1158015611496573d6000803e3d6000fd5b506114ab9250505060a0830160808401614ad5565b606d80546001600160a01b0319166001600160a01b03929092169190911790556114d86020830183614ad5565b6001600160a01b03166347fb24c56114f660a0850160808601614ad5565b60016040518363ffffffff1660e01b81526004016115159291906150d3565b600060405180830381600087803b15801561152f57600080fd5b505af1158015611543573d6000803e3d6000fd5b506115589250505060a0830160808401614ad5565b60405163e199be3560e01b815260e085013560048201526001600160a01b03919091169063e199be3590602401600060405180830381600087803b15801561159f57600080fd5b505af11580156115b3573d6000803e3d6000fd5b506115c8925050506040830160208401614ad5565b60405163e0bc972960e01b815260006004820181905260c0602483015260c4820181905260016044830181905260648301829052608483019190915260a48201526001600160a01b03919091169063e0bc97299060e401600060405180830381600087803b15801561163957600080fd5b505af115801561164d573d6000803e3d6000fd5b506116649250505061012083016101008401614ad5565b606f80546001600160a01b0319166001600160a01b039290921691909117905561169661014083016101208401614ad5565b607080546001600160a01b0319166001600160a01b03929092169190911790556116c660c0830160a08401614ad5565b606e80546001600160a01b0319166001600160a01b039290921691909117905560006116f0612e1b565b90506116fb81612e75565b6117086020850185614d5e565b6065805467ffffffffffffffff19166001600160401b03929092169190911790556117396040850160208601614d5e565b606580546001600160401b0392909216600160401b0267ffffffffffffffff60401b1990921691909117905560e084013560665560608401356067556080840135606855604b60735561178a61304a565b6001600160a01b03166117a360e0860160c08701614ad5565b6001600160a01b031614156117f15760405162461bcd60e51b815260206004820152601460248201527324a72b20a624a22fa2a9a1a927abafa0a226a4a760611b6044820152606401610e45565b61180160c0850160a08601614ad5565b6001600160a01b031661181a60e0860160c08701614ad5565b6001600160a01b031614156118685760405162461bcd60e51b815260206004820152601460248201527324a72b20a624a22fa2a9a1a927abafa7aba722a960611b6044820152606401610e45565b61187860e0850160c08601614ad5565b607180546001600160a01b0319166001600160a01b03929092169190911790556118a86060850160408601614ad5565b607280546001600160a01b0319166001600160a01b0392909216919091179055604080516080860135815260e086013560208201527ffc1b83c11d99d08a938e0b82a0bd45f822f71ff5abf23f999c93c4533d752464910160405180910390a150801561191b576000805461ff00191690555b505050565b60335460ff166119425760405162461bcd60e51b8152600401610e4590614ff0565b61194d838383613072565b60405160189060008051602061566683398151915290600090a2505050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156119b55760405162461bcd60e51b8152600401610e459061503b565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166119e7612c06565b6001600160a01b031614611a0d5760405162461bcd60e51b8152600401610e4590615087565b604080516000808252602082019092526110f8918391906131cc565b60335460ff16611a4b5760405162461bcd60e51b8152600401610e4590614ff0565b6075546001600160401b03858116911614611aa05760405162461bcd60e51b815260206004820152601560248201527413d3931657d310551154d517d0d3d3919254935151605a1b6044820152606401610e45565b611aac82858584613346565b5060405160179060008051602061566683398151915290600090a250505050565b606a546040516347fb24c560e01b81526001600160a01b03909116906347fb24c590611aff90859085906004016150d3565b600060405180830381600087803b158015611b1957600080fd5b505af1158015611b2d573d6000803e3d6000fd5b5050604051600292506000805160206156668339815191529150600090a25050565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161415611b985760405162461bcd60e51b8152600401610e459061503b565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316611bca612c06565b6001600160a01b031614611bf05760405162461bcd60e51b8152600401610e4590615087565b611bfc828260016131cc565b5050565b606a546040516304f61f8560e41b81526001600160a01b0390911690634f61f85090611c30908490600401614aac565b600060405180830381600087803b158015611c4a57600080fd5b505af1158015611c5e573d6000803e3d6000fd5b5050604051601b92506000805160206156668339815191529150600090a250565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614611d1a5760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c6044820152771b1959081d1a1c9bdd59da0819195b1959d85d1958d85b1b60421b6064820152608401610e45565b5060008051602061564683398151915290565b606980546001600160a01b0319166001600160a01b038316179055604051601c9060008051602061566683398151915290600090a250565b606b546001600160a01b0382811691161415611db05760405162461bcd60e51b815260206004820152600a602482015269086aaa4be9eaaa8849eb60b31b6044820152606401610e45565b606a546040516319dc7ae560e31b81526001600160a01b039091169063cee3d72890611de39084906000906004016150d3565b600060405180830381600087803b158015611dfd57600080fd5b505af1158015611e11573d6000803e3d6000fd5b5050604051600192506000805160206156668339815191529150600090a250565b6065805467ffffffffffffffff60401b1916600160401b6001600160401b03841602179055604051600a9060008051602061566683398151915290600090a250565b60006078826001600160401b031681548110611e9257611e926150ee565b6000918252602090912001546001600160a01b031692915050565b60335460ff16611ecf5760405162461bcd60e51b8152600401610e4590614ff0565b60006001611edb6121b0565b6001600160401b031615611f2b5760405162461bcd60e51b81526020600482015260176024820152761393d397d1d1539154d254d7d393d11154d7d1561254d5604a1b6044820152606401610e45565b611f348361395a565b611f735760405162461bcd60e51b815260206004820152601060248201526f4e4f545f454d5054595f4245464f524560801b6044820152606401610e45565b6001611f8560a0850160808601615129565b6003811115611f9657611f96615104565b14611fe35760405162461bcd60e51b815260206004820152601b60248201527f4245464f52455f4d414348494e455f4e4f545f46494e495348454400000000006044820152606401610e45565b60c0830135821461202a5760405162461bcd60e51b81526020600482015260116024820152701393d517d6915493d7d4d153911493d3d5607a1b6044820152606401610e45565b6001600160401b038116612045610100850160e08601614d5e565b6001600160401b03161461208e5760405162461bcd60e51b815260206004820152601060248201526f494e424f585f4e4f545f41545f4f4e4560801b6044820152606401610e45565b6120a061012084016101008501614d5e565b6001600160401b0316156120f65760405162461bcd60e51b815260206004820152601c60248201527f504f534954494f4e5f494e5f4d4553534147455f4e4f545f5a45524f000000006044820152606401610e45565b600161210a61014085016101208601615129565b600381111561211b5761211b615104565b146121685760405162461bcd60e51b815260206004820152601a60248201527f41465445525f4d414348494e455f4e4f545f46494e49534845440000000000006044820152606401610e45565b60a08301356121838460006001600160401b03851681613346565b5061219060018285613072565b604051601d9060008051602061566683398151915290600090a250505050565b607554600160801b90046001600160401b031690565b60335460ff166121e85760405162461bcd60e51b8152600401610e4590614ff0565b806122055760405162461bcd60e51b8152600401610e4590615144565b60005b8181101561231b576000607981858585818110612227576122276150ee565b905060200201602081019061223c9190614ad5565b6001600160a01b03168152602081019190915260400160002060010154600160801b90046001600160401b0316146122a85760405162461bcd60e51b815260206004820152600f60248201526e14d51052d15497d25397d0d2105313608a1b6044820152606401610e45565b6122d98383838181106122bd576122bd6150ee565b90506020020160208101906122d29190614ad5565b60006139b6565b506123098383838181106122ef576122ef6150ee565b90506020020160208101906123049190614ad5565b613a7b565b806123138161517f565b915050612208565b5060405160169060008051602061566683398151915290600090a25050565b612342613b21565b60405160039060008051602061566683398151915290600090a2565b604051631b2ce7f360e11b81526001600160a01b03831690633659cfe69061238a908490600401614aac565b600060405180830381600087803b1580156123a457600080fd5b505af11580156123b8573d6000803e3d6000fd5b5050604051601492506000805160206156668339815191529150600090a25050565b6068819055604051601a9060008051602061566683398151915290600090a250565b6000805b607a5481101561245757607a818154811061241d5761241d6150ee565b6000918252602090912001546001600160a01b03848116911614156124455750600192915050565b8061244f8161517f565b915050612400565b50600092915050565b612468614987565b6001600160401b03821660009081526076602052604090206040805161018081018252825481526001830154602082015260028301549181019190915260038201546001600160401b038082166060840152600160401b80830482166080850152600160801b808404831660a0860152600160c01b93849004831660c0860152600486015480841660e0870152918204831661010086015281048216610120850152919091041661014082015260059091015461016082015292915050565b607381905560405160089060008051602061566683398151915290600090a250565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156125925760405162461bcd60e51b8152600401610e459061503b565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166125c4612c06565b6001600160a01b0316146125ea5760405162461bcd60e51b8152600401610e4590615087565b611bfc82826001612c27565b607e805460ff1916821515179055604051601e9060008051602061566683398151915290600090a250565b8261263e5760405162461bcd60e51b8152600401610e4590615144565b82811461265d5760405162461bcd60e51b8152600401610e459061519a565b60005b838110156126f45782828281811061267a5761267a6150ee565b905060200201602081019061268f9190614f4c565b607460008787858181106126a5576126a56150ee565b90506020020160208101906126ba9190614ad5565b6001600160a01b031681526020810191909152604001600020805460ff1916911515919091179055806126ec8161517f565b915050612660565b5060405160069060008051602061566683398151915290600090a250505050565b6001600160401b03821660009081526077602090815260408083206001600160a01b038516845290915290205460ff165b92915050565b6000816001600160401b03161161279e5760405162461bcd60e51b81526020600482015260166024820152751253959053125117d0d3d39192549357d411549253d160521b6044820152606401610e45565b6065805467ffffffffffffffff19166001600160401b03831617905560405160099060008051602061566683398151915290600090a250565b6000607a8281548110611e9257611e926150ee565b6001600160a01b038116600090815260796020526040812060010154600160c01b900460ff1680156127465750607554612746906001600160401b031683612715565b6000607a8281548110612844576128446150ee565b600091825260209091200154600160a01b90046001600160401b031692915050565b60335460ff166128885760405162461bcd60e51b8152600401610e4590614ff0565b826128a55760405162461bcd60e51b8152600401610e4590615144565b8281146128c45760405162461bcd60e51b8152600401610e459061519a565b60005b83811015612a555760006129278686848181106128e6576128e66150ee565b90506020020160208101906128fb9190614ad5565b85858581811061290d5761290d6150ee565b90506020020160208101906129229190614ad5565b613b9c565b90506001600160401b03811661296e5760405162461bcd60e51b815260206004820152600c60248201526b1393d517d25397d0d210531360a21b6044820152606401610e45565b6129c6868684818110612983576129836150ee565b90506020020160208101906129989190614ad5565b6001600160a01b03166000908152607960205260409020600101805467ffffffffffffffff60801b19169055565b6129db848484818110612983576129836150ee565b606e546040516356e9df9760e01b81526001600160401b03831660048201526001600160a01b03909116906356e9df9790602401600060405180830381600087803b158015612a2957600080fd5b505af1158015612a3d573d6000803e3d6000fd5b50505050508080612a4d9061517f565b9150506128c7565b5060405160159060008051602061566683398151915290600090a250505050565b612a7e61304a565b6001600160a01b0316816001600160a01b03161415612ad05760405162461bcd60e51b815260206004820152600e60248201526d494e56414c49445f455343524f5760901b6044820152606401610e45565b607180546001600160a01b0319166001600160a01b03831617905560405160199060008051602061566683398151915290600090a250565b606b80546001600160a01b0319166001600160a01b0383811691909117909155606a546040516319dc7ae560e31b815291169063cee3d72890612b529084906001906004016150d3565b600060405180830381600087803b158015612b6c57600080fd5b505af1158015612b80573d6000803e3d6000fd5b50506040516000925060008051602061566683398151915291508290a250565b60335460ff16612bc25760405162461bcd60e51b8152600401610e4590614ff0565b6033805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b604051612bfc9190614aac565b60405180910390a1565b60006000805160206156468339815191525b546001600160a01b0316919050565b7f49bd798cd84788856140a4cd5030756b4d08a9e4d55db725ec195f232d262a895460ff1615612c5a5761191b83613c6a565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b815260040160206040518083038186803b158015612c9357600080fd5b505afa925050508015612cc3575060408051601f3d908101601f19168201909252612cc0918101906151c0565b60015b612d305760405162461bcd60e51b815260206004820152603860248201527f45524331393637557067726164653a206e6577207365636f6e6461727920696d604482015277706c656d656e746174696f6e206973206e6f74205555505360401b6064820152608401610e45565b7f2b1dbce74324248c222f0ec2d5ed7bd323cfc425b336f0253c5ccfda7265546d8114612dbb5760405162461bcd60e51b815260206004820152603360248201527f45524331393637557067726164653a20756e737570706f72746564207365636f6044820152721b99185c9e481c1c9bde1a58589b1955555251606a1b6064820152608401610e45565b5061191b838383613d25565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f612df061304a565b604080516001600160a01b03928316815291841660208301520160405180910390a16110f881613d50565b612e23614987565b612e2b6149eb565b6000612e5d604051806040016040528084815260200160016003811115612e5457612e54615104565b90526001613ddc565b9050612e6e81600080804381613e21565b9250505090565b612e7d613e75565b60008080526076602090815282517fafbc767fed27552cbeceb3d11150dacedabc53b0cc52ac5aa6285a747a181958558201517fafbc767fed27552cbeceb3d11150dacedabc53b0cc52ac5aa6285a747a1819595560408201517fafbc767fed27552cbeceb3d11150dacedabc53b0cc52ac5aa6285a747a18195a5560608201517fafbc767fed27552cbeceb3d11150dacedabc53b0cc52ac5aa6285a747a18195b8054608085015160a086015160c08701516001600160401b039586166001600160801b031994851617600160401b9387168402176001600160801b03908116600160801b93881684026001600160c01b0390811691909117600160c01b93891684021790965560e08901517fafbc767fed27552cbeceb3d11150dacedabc53b0cc52ac5aa6285a747a18195c80546101008c01516101208d01516101408e0151948c169290991691909117908a169096029590951790911694871690920290941692909217919093169091021790556101608201517fafbc767fed27552cbeceb3d11150dacedabc53b0cc52ac5aa6285a747a18195d556130219060016151d9565b607560086101000a8154816001600160401b0302191690836001600160401b0316021790555050565b60007fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103612c18565b6001600160401b03831660009081526076602052604090206130948383613ea6565b8160020154146130d55760405162461bcd60e51b815260206004820152600c60248201526b434f4e4649524d5f4441544160a01b6044820152606401610e45565b606b54604051630502677360e51b815260048101849052602481018590526001600160a01b039091169063a04cee6090604401600060405180830381600087803b15801561312257600080fd5b505af1158015613136573d6000803e3d6000fd5b50506075805467ffffffffffffffff19166001600160401b0388161790555061316290508460016151d9565b6075805467ffffffffffffffff60401b1916600160401b6001600160401b03938416021790556040805185815260208101859052918616917f22ef0479a7ff660660d1c2fe35f1b632cf31675c2d9378db8cec95b00d8ffa3c91015b60405180910390a250505050565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156131ff5761191b83613ec2565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b815260040160206040518083038186803b15801561323857600080fd5b505afa925050508015613268575060408051601f3d908101601f19168201909252613265918101906151c0565b60015b6132cb5760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608401610e45565b600080516020615646833981519152811461333a5760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608401610e45565b5061191b838383613f44565b6000600161335c61014087016101208801615129565b600381111561336d5761336d615104565b148061339b5750600261338861014087016101208801615129565b600381111561339957613399615104565b145b6133da5760405162461bcd60e51b815260206004820152601060248201526f4241445f41465445525f53544154555360801b6044820152606401610e45565b6133e2614a10565b6133eb85612460565b6060820152606a54604080516221048360e21b815290516001600160a01b03909216916284120c91600480820192602092909190829003018186803b15801561343357600080fd5b505afa158015613447573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061346b91906151c0565b815260608101515161347d8786613f4d565b146134bc5760405162461bcd60e51b815260206004820152600f60248201526e0a0a48aacbea6a882a88abe9082a69608b1b6044820152606401610e45565b60006134d86134d336899003890160a08a016152c6565b613f89565b905060006134ee6134d3368a90038a018a6152c6565b9050806001600160401b0316826001600160401b031610156135445760405162461bcd60e51b815260206004820152600f60248201526e494e424f585f4241434b574152445360881b6044820152606401610e45565b806001600160401b0316826001600160401b031614156135ea57613575613570368a90038a018a6152c6565b613f9e565b6001600160401b0316613593613570368b90038b0160a08c016152c6565b6001600160401b031610156135ea5760405162461bcd60e51b815260206004820152601a60248201527f494e424f585f504f535f494e5f4d53475f4241434b57415244530000000000006044820152606401610e45565b60026135fe6101408a016101208b01615129565b600381111561360f5761360f615104565b14806136385750600061362d613570368b90038b0160a08c016152c6565b6001600160401b0316115b1561364b5781613647816152e2565b9250505b82516001600160401b03831611156136965760405162461bcd60e51b815260206004820152600e60248201526d12539093d617d41054d517d1539160921b6044820152606401610e45565b6001600160401b0382161561373e57606a546001600160a01b03166316bf55796136c1600185615309565b6040516001600160e01b031960e084901b1681526001600160401b03909116600482015260240160206040518083038186803b15801561370057600080fd5b505afa158015613714573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061373891906151c0565b60e08401525b50613758905061375336889003880188615370565b613fad565b6040820152606554613773906001600160401b0316436151d9565b6001600160401b0390811660c0830152606082015161012001511615801560a08301526137c957606081015161012001516001600160401b031660009081526076602052604090206005015460808201526137d9565b6060810151610160015160808201525b6137f88160a00151826080015183604001518460e0015160685461404c565b915082821480613806575082155b6138495760405162461bcd60e51b81526020600482015260146024820152730aa9c8ab0a08a86a88a88be9c9e888abe9082a6960631b6044820152606401610e45565b61389161385d8760a0018360000151613f4d565b61386e8360400151436068546140b9565b613885613880368b90038b018b615370565b6140f8565b888560c0015187613e21565b602082015260006138a06121b0565b6138ab9060016151d9565b905060006138cd876001600160401b0316600090815260766020526040902090565b90506138d98183614122565b6138e68360200151614193565b505081816060015161016001516138fb6121b0565b6001600160401b03167f4f4caa9e67fb994e349dd35d1ad0ce23053d4323f83ce11dc817b5435031d09684604001518a8660e00151606854886000015160405161394995949392919061545a565b60405180910390a450949350505050565b6000813515801561396d57506020820135155b801561398f57506139846060830160408401614d5e565b6001600160401b0316155b801561274657506139a66080830160608401614d5e565b6001600160401b03161592915050565b6001600160a01b0382166000908152607960205260408120805480841115613a135760405162461bcd60e51b815260206004820152601060248201526f544f4f5f4c4954544c455f5354414b4560801b6044820152606401610e45565b6000613a1f85836154ba565b8584559050613a2e86826142ca565b60408051838152602081018790526001600160a01b038816917febd093d389ab57f3566918d2c379a2b4d9539e8eb95efad9d5e465457833fde6910160405180910390a295945050505050565b6001600160a01b03808216600081815260796020908152604080832081518083019092529381526001808501546001600160401b03600160401b9091048116938301938452607a8054928301815590945290517ff0440771a29e57e18c66727944770b82cc77924aef333c927ce6bdd2cdb3ae0390910180549251909316600160a01b026001600160e01b031990921694169390931792909217909155611bfc82614366565b60335460ff1615613b675760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610e45565b6033805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258612bef3390565b6001600160a01b03828116600090815260796020526040808220928416825281206001830154919291600160801b90046001600160401b031680613c0c5760405162461bcd60e51b81526020600482015260076024820152661393d7d0d2105360ca1b6044820152606401610e45565b60018201546001600160401b03828116600160801b9092041614613c615760405162461bcd60e51b815260206004820152600c60248201526b1112519197d25397d0d2105360a21b6044820152606401610e45565b95945050505050565b6001600160a01b0381163b613ce15760405162461bcd60e51b815260206004820152603760248201527f455243313936373a206e6577207365636f6e6461727920696d706c656d656e74604482015276185d1a5bdb881a5cc81b9bdd08184818dbdb9d1c9858dd604a1b6064820152608401610e45565b807f2b1dbce74324248c222f0ec2d5ed7bd323cfc425b336f0253c5ccfda7265546d5b80546001600160a01b0319166001600160a01b039290921691909117905550565b613d2e83614529565b600082511180613d3b5750805b1561191b57613d4a8383614569565b50505050565b6001600160a01b038116613db55760405162461bcd60e51b815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201526564647265737360d01b6064820152608401610e45565b807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103613d04565b6000613deb836000015161458e565b828460200151604051602001613e03939291906154d1565b60405160208183030381529060405280519060200120905092915050565b613e29614987565b613e31614987565b96875250602086019490945260408501929092526001600160401b0390811660608501529081166080840181905260a0840152431661014083015261016082015290565b600054610100900460ff16613e9c5760405162461bcd60e51b8152600401610e459061550f565b613ea4614602565b565b6040805160208101849052908101829052600090606001613e03565b6001600160a01b0381163b613f2f5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610e45565b80600080516020615646833981519152613d04565b613d2e83614635565b6000613f66613f61368590038501856152c6565b61458e565b82613f7760a0860160808701615129565b604051602001613e03939291906154d1565b6020810151600090815b602002015192915050565b60208101516000906001613f93565b6000613fb7614a61565b82516020015181906003811115613fd057613fd0615104565b90816003811115613fe357613fe3615104565b90525060208381015181015190820190600381111561400457614004615104565b9081600381111561401757614017615104565b905250614022614a7f565b8351518152602080850151519082015260408401516140449083908390614675565b949350505050565b6000808661405b57600061405e565b60015b6040516001600160f81b031960f883901b1660208201526021810188905260418101879052606181018690526081810185905290915060a1016040516020818303038152906040528051906020012091505095945050505050565b6040805160208101859052908101839052606081018290526000906080015b6040516020818303038152906040528051906020012090505b9392505050565b600061274661410e83602001516000015161471f565b60208401515161411d9061472a565b613ea6565b6004820154600160401b90046001600160401b03166141635760048201805467ffffffffffffffff60401b1916600160401b436001600160401b0316021790555b600490910180546001600160401b03909216600160801b0267ffffffffffffffff60801b19909216919091179055565b60758054600160801b90046001600160401b03169060106141b3836152e2565b825461010092830a6001600160401b03818102199092169282160291909117909255607554600160801b908190048316600090815260766020908152604091829020875181559087015160018201559086015160028201556060860151600382018054608089015160a08a015160c08b01519489166001600160801b031993841617600160401b928a168302176001600160801b03908116918a1688026001600160c01b0390811692909217600160c01b968b1687021790945560e08b0151600487018054998d01516101208e01516101408f0151938d169b9096169a909a17998b169093029890981790931691881690950290911617939094169093029190911790556101609092015160059092019190915550565b6001600160a01b0382166000908152607b6020526040812054906142ee838361555a565b6001600160a01b0385166000908152607b60205260408120829055607c8054929350859290919061432090849061555a565b909155505060408051838152602081018390526001600160a01b038616917fa740af14c56e4e04a617b1de1eb20de73270decbaaead14f142aabf3038e5ae291016131be565b6001600160a01b03811660009081526079602052604090206001810154600160c01b900460ff166143c65760405162461bcd60e51b815260206004820152600a6024820152691393d517d4d51052d15160b21b6044820152606401610e45565b600180820154607880546001600160401b039092169290916143e891906154ba565b815481106143f8576143f86150ee565b600091825260209091200154607880546001600160a01b03909216916001600160401b03841690811061442d5761442d6150ee565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555080607960006078846001600160401b03168154811061447c5761447c6150ee565b6000918252602080832091909101546001600160a01b031683528201929092526040019020600101805467ffffffffffffffff19166001600160401b039290921691909117905560788054806144d4576144d4615572565b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b03949094168152607990935250506040812090815560010180546001600160c81b0319169055565b61453281613c6a565b6040516001600160a01b038216907ff7eed2a7fabbf1bec8d55ed5e785cc76622376dde5df4ff15470551e030b813490600090a250565b60606140f1838360405180606001604052806027815260200161568660279139614736565b8051805160209182015192820151805190830151604080516c23b637b130b61039ba30ba329d60991b81870152602d810194909452604d8401959095526001600160c01b031960c092831b8116606d850152911b1660758201528251808203605d018152607d909101909252815191012090565b600054610100900460ff166146295760405162461bcd60e51b8152600401610e459061550f565b6033805460ff19169055565b61463e81613ec2565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b604080516002808252606082018352600092839291906020830190803683370190505085519091506146b7906146b28660005b602002015161458e565b614813565b816000815181106146ca576146ca6150ee565b60209081029190910101526146eb85600160200201516146b28660016146a8565b816001815181106146fe576146fe6150ee565b602002602001018181525050613c616000846001600160401b031683614937565b805160009081613f93565b80516000906001613f93565b60606001600160a01b0384163b61479e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610e45565b600080856001600160a01b0316856040516147b991906155b4565b600060405180830381855af49150503d80600081146147f4576040519150601f19603f3d011682016040523d82523d6000602084013e6147f9565b606091505b509150915061480982828661494e565b9695505050505050565b6000600183600381111561482957614829615104565b141561486f576040516b213637b1b59039ba30ba329d60a11b6020820152602c8101839052604c015b604051602081830303815290604052805190602001209050612746565b600283600381111561488357614883615104565b14156148b95760405174213637b1b59039ba30ba32961032b93937b932b21d60591b602082015260358101839052605501614852565b60038360038111156148cd576148cd615104565b14156148fc5760405174213637b1b59039ba30ba3296103a37b7903330b91d60591b6020820152603501614852565b60405162461bcd60e51b815260206004820152601060248201526f4241445f424c4f434b5f53544154555360801b6044820152606401610e45565b60008383836040516020016140d8939291906155d0565b6060831561495d5750816140f1565b82511561496d5782518084602001fd5b8160405162461bcd60e51b8152600401610e459190615612565b6040805161018081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101829052610140810182905261016081019190915290565b60405180604001604052806149fe614a61565b8152602001614a0b614a61565b905290565b60405180610100016040528060008152602001614a2b614987565b815260006020820152604001614a3f614987565b8152600060208201819052604082018190526060820181905260809091015290565b60405180604001604052806002906020820280368337509192915050565b60405180604001604052806002905b614a966149eb565b815260200190600190039081614a8e5790505090565b6001600160a01b0391909116815260200190565b6001600160a01b03811681146110f857600080fd5b600060208284031215614ae757600080fd5b81356140f181614ac0565b600060208284031215614b0457600080fd5b5035919050565b6000808284036102e0811215614b2057600080fd5b6101a080821215614b3057600080fd5b84935061014061019f1983011215614b4757600080fd5b92959390920193505050565b80356001600160401b0381168114614b6a57600080fd5b919050565b600080600060608486031215614b8457600080fd5b614b8d84614b53565b95602085013595506040909401359392505050565b60006101608284031215614bb557600080fd5b50919050565b6000806000806101c08587031215614bd257600080fd5b614bdb85614b53565b935060208501359250614bf18660408701614ba2565b939692955092936101a00135925050565b80151581146110f857600080fd5b60008060408385031215614c2357600080fd5b8235614c2e81614ac0565b91506020830135614c3e81614c02565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b0381118282101715614c8157614c81614c49565b60405290565b604051601f8201601f191681016001600160401b0381118282101715614caf57614caf614c49565b604052919050565b60008060408385031215614cca57600080fd5b8235614cd581614ac0565b91506020838101356001600160401b0380821115614cf257600080fd5b818601915086601f830112614d0657600080fd5b813581811115614d1857614d18614c49565b614d2a601f8201601f19168501614c87565b91508082528784828501011115614d4057600080fd5b80848401858401376000848284010152508093505050509250929050565b600060208284031215614d7057600080fd5b6140f182614b53565b60006101608284031215614d8c57600080fd5b6140f18383614ba2565b60008083601f840112614da857600080fd5b5081356001600160401b03811115614dbf57600080fd5b6020830191508360208260051b8501011115614dda57600080fd5b9250929050565b60008060208385031215614df457600080fd5b82356001600160401b03811115614e0a57600080fd5b614e1685828601614d96565b90969095509350505050565b60008060408385031215614e3557600080fd5b8235614e4081614ac0565b91506020830135614c3e81614ac0565b6000610180820190508251825260208301516020830152604083015160408301526060830151614e8b60608401826001600160401b03169052565b506080830151614ea660808401826001600160401b03169052565b5060a0830151614ec160a08401826001600160401b03169052565b5060c0830151614edc60c08401826001600160401b03169052565b5060e0830151614ef760e08401826001600160401b03169052565b50610100838101516001600160401b038116848301525050610120838101516001600160401b038116848301525050610140838101516001600160401b03811684830152505061016092830151919092015290565b600060208284031215614f5e57600080fd5b81356140f181614c02565b60008060008060408587031215614f7f57600080fd5b84356001600160401b0380821115614f9657600080fd5b614fa288838901614d96565b90965094506020870135915080821115614fbb57600080fd5b50614fc887828801614d96565b95989497509550505050565b60008060408385031215614fe757600080fd5b614e4083614b53565b60208082526014908201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604082015260600190565b60006020828403121561503057600080fd5b81516140f181614c02565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b6001600160a01b039290921682521515602082015260400190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b803560048110614b6a57600080fd5b60006020828403121561513b57600080fd5b6140f18261511a565b6020808252600b908201526a454d5054595f415252415960a81b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600060001982141561519357615193615169565b5060010190565b6020808252600c908201526b0aea49e9c8ebe988a9c8ea8960a31b604082015260600190565b6000602082840312156151d257600080fd5b5051919050565b60006001600160401b038083168185168083038211156151fb576151fb615169565b01949350505050565b60006080828403121561521657600080fd5b61521e614c5f565b905082601f83011261522f57600080fd5b615237614c5f565b80604084018581111561524957600080fd5b845b8181101561526357803584526020938401930161524b565b5081845285605f86011261527657600080fd5b61527e614c5f565b9250829150608085018681111561529457600080fd5b808210156152b8576152a582614b53565b8452602084019350602082019150615294565b505060208301525092915050565b6000608082840312156152d857600080fd5b6140f18383615204565b60006001600160401b03808316818114156152ff576152ff615169565b6001019392505050565b60006001600160401b038381169083168181101561532957615329615169565b039392505050565b600060a0828403121561534357600080fd5b61534b614c5f565b90506153578383615204565b81526153656080830161511a565b602082015292915050565b6000610160828403121561538357600080fd5b604051606081018181106001600160401b03821117156153a5576153a5614c49565b6040526153b28484615331565b81526153c18460a08501615331565b60208201526153d36101408401614b53565b60408201529392505050565b604081833760006040838101828152908301915b6002811015615422576001600160401b0361540d84614b53565b168252602092830192909101906001016153f3565b5050506154316080820161511a565b6004811061544f57634e487b7160e01b600052602160045260246000fd5b806080840152505050565b8581526101e0810161546f60208301876153df565b61547f60c0830160a088016153df565b6001600160401b036154946101408801614b53565b1661016083015284610180830152836101a0830152826101c08301529695505050505050565b6000828210156154cc576154cc615169565b500390565b8381528260208201526000600483106154fa57634e487b7160e01b600052602160045260246000fd5b5060f89190911b604082015260410192915050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6000821982111561556d5761556d615169565b500190565b634e487b7160e01b600052603160045260246000fd5b60005b838110156155a357818101518382015260200161558b565b83811115613d4a5750506000910152565b600082516155c6818460208701615588565b9190910192915050565b83815260006020848184015260408301845182860160005b82811015615604578151845292840192908401906001016155e8565b509198975050505050505050565b6020815260008251806020840152615631816040850160208701615588565b601f01601f1916919091016040019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbcea8787f128d10b2cc0317b0c3960f9ad447f7f6c1ed189db1083ccffd20f456e416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220467071e694892b9d6ec379d586dca48549e934d358975e0ed194be4607a08fe564736f6c63430008090033";

type RollupAdminLogicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RollupAdminLogicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RollupAdminLogic__factory extends ContractFactory {
  constructor(...args: RollupAdminLogicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "RollupAdminLogic";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RollupAdminLogic> {
    return super.deploy(overrides || {}) as Promise<RollupAdminLogic>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): RollupAdminLogic {
    return super.attach(address) as RollupAdminLogic;
  }
  connect(signer: Signer): RollupAdminLogic__factory {
    return super.connect(signer) as RollupAdminLogic__factory;
  }
  static readonly contractName: "RollupAdminLogic";
  public readonly contractName: "RollupAdminLogic";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RollupAdminLogicInterface {
    return new utils.Interface(_abi) as RollupAdminLogicInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RollupAdminLogic {
    return new Contract(address, _abi, signerOrProvider) as RollupAdminLogic;
  }
}
